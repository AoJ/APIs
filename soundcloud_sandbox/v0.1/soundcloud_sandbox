/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'soundcloud_sandbox'})},
	'getTracks': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks.{format}'
		args = args || {}
		var rgx = new RegExp('\{q\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['q'])
			if (args['q']) delete args['q']
		}
		if (url.indexOf('[/q]') !== -1) {
			url = url.replace('[/q]', '/' + args['q'])
			if (args['q']) delete args['q']
		}
		var rgx = new RegExp('\{tags\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tags'])
			if (args['tags']) delete args['tags']
		}
		if (url.indexOf('[/tags]') !== -1) {
			url = url.replace('[/tags]', '/' + args['tags'])
			if (args['tags']) delete args['tags']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		var rgx = new RegExp('\{bpm-from\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bpm-from'])
			if (args['bpm-from']) delete args['bpm-from']
		}
		if (url.indexOf('[/bpm-from]') !== -1) {
			url = url.replace('[/bpm-from]', '/' + args['bpm-from'])
			if (args['bpm-from']) delete args['bpm-from']
		}
		var rgx = new RegExp('\{bpm-to\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bpm-to'])
			if (args['bpm-to']) delete args['bpm-to']
		}
		if (url.indexOf('[/bpm-to]') !== -1) {
			url = url.replace('[/bpm-to]', '/' + args['bpm-to'])
			if (args['bpm-to']) delete args['bpm-to']
		}
		var rgx = new RegExp('\{duration-from\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['duration-from'])
			if (args['duration-from']) delete args['duration-from']
		}
		if (url.indexOf('[/duration-from]') !== -1) {
			url = url.replace('[/duration-from]', '/' + args['duration-from'])
			if (args['duration-from']) delete args['duration-from']
		}
		var rgx = new RegExp('\{duration-to\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['duration-to'])
			if (args['duration-to']) delete args['duration-to']
		}
		if (url.indexOf('[/duration-to]') !== -1) {
			url = url.replace('[/duration-to]', '/' + args['duration-to'])
			if (args['duration-to']) delete args['duration-to']
		}
		var rgx = new RegExp('\{created_at-from\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['created_at-from'])
			if (args['created_at-from']) delete args['created_at-from']
		}
		if (url.indexOf('[/created_at-from]') !== -1) {
			url = url.replace('[/created_at-from]', '/' + args['created_at-from'])
			if (args['created_at-from']) delete args['created_at-from']
		}
		var rgx = new RegExp('\{created_at-to\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['created_at-to'])
			if (args['created_at-to']) delete args['created_at-to']
		}
		if (url.indexOf('[/created_at-to]') !== -1) {
			url = url.replace('[/created_at-to]', '/' + args['created_at-to'])
			if (args['created_at-to']) delete args['created_at-to']
		}
		var rgx = new RegExp('\{ids\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ids'])
			if (args['ids']) delete args['ids']
		}
		if (url.indexOf('[/ids]') !== -1) {
			url = url.replace('[/ids]', '/' + args['ids'])
			if (args['ids']) delete args['ids']
		}
		var rgx = new RegExp('\{ids\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ids'])
			if (args['ids']) delete args['ids']
		}
		if (url.indexOf('[/ids]') !== -1) {
			url = url.replace('[/ids]', '/' + args['ids'])
			if (args['ids']) delete args['ids']
		}
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/q]') !== -1) url = url.replace('[/q]', '')
		if (url.indexOf('[/tags]') !== -1) url = url.replace('[/tags]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		if (url.indexOf('[/bpm-from]') !== -1) url = url.replace('[/bpm-from]', '')
		if (url.indexOf('[/bpm-to]') !== -1) url = url.replace('[/bpm-to]', '')
		if (url.indexOf('[/duration-from]') !== -1) url = url.replace('[/duration-from]', '')
		if (url.indexOf('[/duration-to]') !== -1) url = url.replace('[/duration-to]', '')
		if (url.indexOf('[/created_at-from]') !== -1) url = url.replace('[/created_at-from]', '')
		if (url.indexOf('[/created_at-to]') !== -1) url = url.replace('[/created_at-to]', '')
		if (url.indexOf('[/ids]') !== -1) url = url.replace('[/ids]', '')
		if (url.indexOf('[/ids]') !== -1) url = url.replace('[/ids]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'postTracks': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks.{format}'
		args = args || {}
		if (args['title'] == null) args['title'] = "A Track Title"
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		if (args['asset_data'] == null) throw new Error('asset_data is a required parameter')
		var rgx = new RegExp('\{asset_data\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['asset_data'])
			if (args['asset_data']) delete args['asset_data']
		}
		if (url.indexOf('[/asset_data]') !== -1) {
			url = url.replace('[/asset_data]', '/' + args['asset_data'])
			if (args['asset_data']) delete args['asset_data']
		}
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/asset_data]') !== -1) url = url.replace('[/asset_data]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'getTrack': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'putTrack': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}.{format}'
		args = args || {}
		if (args['title'] == null) args['title'] = "A Track Title"
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		if (args['asset_data'] == null) throw new Error('asset_data is a required parameter')
		var rgx = new RegExp('\{asset_data\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['asset_data'])
			if (args['asset_data']) delete args['asset_data']
		}
		if (url.indexOf('[/asset_data]') !== -1) {
			url = url.replace('[/asset_data]', '/' + args['asset_data'])
			if (args['asset_data']) delete args['asset_data']
		}
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/asset_data]') !== -1) url = url.replace('[/asset_data]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteTrack': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getTrackComments': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}/comments.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'postTrackComments': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}/comments.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'getTrackPermissions': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}/permissions.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'putTrackPermissions': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}/permissions.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'getTrackSecret-token': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}/secret-token.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'putTrackSecretToken': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/tracks/{track_id}/secret-token.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'getUsers': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users.{format}'
		args = args || {}
		var rgx = new RegExp('\{q\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['q'])
			if (args['q']) delete args['q']
		}
		if (url.indexOf('[/q]') !== -1) {
			url = url.replace('[/q]', '/' + args['q'])
			if (args['q']) delete args['q']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/q]') !== -1) url = url.replace('[/q]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getUser': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getUserTracks': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/tracks.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getUserComments': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/comments.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getUserFollowings': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/followings.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getUserFollowing': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/followings/{contact_id}.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['contact_id'] == null) args['contact_id'] = "183"
		var rgx = new RegExp('\{contact_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) {
			url = url.replace('[/contact_id]', '/' + args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/contact_id]') !== -1) url = url.replace('[/contact_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'putUserFollowings': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/followings/{contact_id}.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['contact_id'] == null) args['contact_id'] = "183"
		var rgx = new RegExp('\{contact_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) {
			url = url.replace('[/contact_id]', '/' + args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/contact_id]') !== -1) url = url.replace('[/contact_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteUserFollowings': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/followings/{contact_id}.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['contact_id'] == null) args['contact_id'] = "183"
		var rgx = new RegExp('\{contact_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) {
			url = url.replace('[/contact_id]', '/' + args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/contact_id]') !== -1) url = url.replace('[/contact_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getUserFollowers': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/followers.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getUserFollower': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/followers/{contact_id}.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['contact_id'] == null) args['contact_id'] = "183"
		var rgx = new RegExp('\{contact_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) {
			url = url.replace('[/contact_id]', '/' + args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/contact_id]') !== -1) url = url.replace('[/contact_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getUserFavorites': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/favorites.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'putUserFavorites': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/favorites/{track_id}.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteUserFavorites': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/favorites/{track_id}.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getUserGroups': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/groups.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getUserPlaylists': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/users/{user_id}/playlists.{format}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "183"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getMe': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'putMe': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'getMeTracks': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/tracks.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getMeComments': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/comments.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getMeFollowings': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/followings.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getMeFollowing': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/followings/{contact_id}.{format}'
		args = args || {}
		if (args['contact_id'] == null) args['contact_id'] = "183"
		var rgx = new RegExp('\{contact_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) {
			url = url.replace('[/contact_id]', '/' + args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) url = url.replace('[/contact_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'putMeFollowings': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/followings/{contact_id}.{format}'
		args = args || {}
		if (args['contact_id'] == null) args['contact_id'] = "183"
		var rgx = new RegExp('\{contact_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) {
			url = url.replace('[/contact_id]', '/' + args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) url = url.replace('[/contact_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteMeFollowings': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/followings/{contact_id}.{format}'
		args = args || {}
		if (args['contact_id'] == null) args['contact_id'] = "183"
		var rgx = new RegExp('\{contact_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) {
			url = url.replace('[/contact_id]', '/' + args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) url = url.replace('[/contact_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getMeFollowers': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/followers.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getMeFollower': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/followers/{contact_id}.{format}'
		args = args || {}
		if (args['contact_id'] == null) args['contact_id'] = "183"
		var rgx = new RegExp('\{contact_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) {
			url = url.replace('[/contact_id]', '/' + args['contact_id'])
			if (args['contact_id']) delete args['contact_id']
		}
		if (url.indexOf('[/contact_id]') !== -1) url = url.replace('[/contact_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getMeFavorites': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/favorites.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'putMeFavorites': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/favorites/{track_id}.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteMeFavorites': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/favorites/{track_id}.{format}'
		args = args || {}
		if (args['track_id'] == null) args['track_id'] = "291"
		var rgx = new RegExp('\{track_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) {
			url = url.replace('[/track_id]', '/' + args['track_id'])
			if (args['track_id']) delete args['track_id']
		}
		if (url.indexOf('[/track_id]') !== -1) url = url.replace('[/track_id]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getMeGroups': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/groups.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getMePlaylists': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/me/playlists.{format}'
		args = args || {}
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getPlaylists': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/playlists.{format}'
		args = args || {}
		var rgx = new RegExp('\{q\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['q'])
			if (args['q']) delete args['q']
		}
		if (url.indexOf('[/q]') !== -1) {
			url = url.replace('[/q]', '/' + args['q'])
			if (args['q']) delete args['q']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/q]') !== -1) url = url.replace('[/q]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getPlaylist': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/playlists/{playlist_id}.{format}'
		args = args || {}
		if (args['playlist_id'] == null) args['playlist_id'] = "18"
		var rgx = new RegExp('\{playlist_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (url.indexOf('[/playlist_id]') !== -1) {
			url = url.replace('[/playlist_id]', '/' + args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/playlist_id]') !== -1) url = url.replace('[/playlist_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGroups': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/groups.{format}'
		args = args || {}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGroup': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/groups/{group_id}.{format}'
		args = args || {}
		if (args['playlist_id'] == null) args['playlist_id'] = "18"
		var rgx = new RegExp('\{playlist_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (url.indexOf('[/playlist_id]') !== -1) {
			url = url.replace('[/playlist_id]', '/' + args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/playlist_id]') !== -1) url = url.replace('[/playlist_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGroupUsers': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/groups/{group_id}/users.{format}'
		args = args || {}
		if (args['playlist_id'] == null) args['playlist_id'] = "18"
		var rgx = new RegExp('\{playlist_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (url.indexOf('[/playlist_id]') !== -1) {
			url = url.replace('[/playlist_id]', '/' + args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/playlist_id]') !== -1) url = url.replace('[/playlist_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGroupModerators': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/groups/{group_id}/moderators.{format}'
		args = args || {}
		if (args['playlist_id'] == null) args['playlist_id'] = "18"
		var rgx = new RegExp('\{playlist_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (url.indexOf('[/playlist_id]') !== -1) {
			url = url.replace('[/playlist_id]', '/' + args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/playlist_id]') !== -1) url = url.replace('[/playlist_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGroupMembers': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/groups/{group_id}/members.{format}'
		args = args || {}
		if (args['playlist_id'] == null) args['playlist_id'] = "18"
		var rgx = new RegExp('\{playlist_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (url.indexOf('[/playlist_id]') !== -1) {
			url = url.replace('[/playlist_id]', '/' + args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/playlist_id]') !== -1) url = url.replace('[/playlist_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGroupContributors': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/groups/{group_id}/contributors.{format}'
		args = args || {}
		if (args['playlist_id'] == null) args['playlist_id'] = "18"
		var rgx = new RegExp('\{playlist_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (url.indexOf('[/playlist_id]') !== -1) {
			url = url.replace('[/playlist_id]', '/' + args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/playlist_id]') !== -1) url = url.replace('[/playlist_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGroupTracks': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/groups/{group_id}/tracks.{format}'
		args = args || {}
		if (args['playlist_id'] == null) args['playlist_id'] = "18"
		var rgx = new RegExp('\{playlist_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (url.indexOf('[/playlist_id]') !== -1) {
			url = url.replace('[/playlist_id]', '/' + args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/playlist_id]') !== -1) url = url.replace('[/playlist_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getComment': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/comments/{comment_id}.{format}'
		args = args || {}
		if (args['playlist_id'] == null) args['playlist_id'] = "18"
		var rgx = new RegExp('\{playlist_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (url.indexOf('[/playlist_id]') !== -1) {
			url = url.replace('[/playlist_id]', '/' + args['playlist_id'])
			if (args['playlist_id']) delete args['playlist_id']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/playlist_id]') !== -1) url = url.replace('[/playlist_id]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'resolve': function(args, opts) {
		var url = 'https://api.sandbox-soundcloud.com/resolve.{format}'
		args = args || {}
		if (args['url'] == null) args['url'] = "http://soundcloud.com/forss"
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (args['consumer_key'] == null) args['consumer_key'] = "apigee"
		var rgx = new RegExp('\{consumer_key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/consumer_key]') !== -1) {
			url = url.replace('[/consumer_key]', '/' + args['consumer_key'])
			if (args['consumer_key']) delete args['consumer_key']
		}
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/consumer_key]') !== -1) url = url.replace('[/consumer_key]', '')
		return http({provider:'soundcloud_sandbox',url:url,method:'GET',params:args, auth:'none'}, opts)
	}
})