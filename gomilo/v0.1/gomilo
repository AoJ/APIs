/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'gomilo'})},
	'storeAddresses': function(args, opts) {
		var url = 'https://api.x.com/milo/v3//store_addresses'
		args = args || {}
		if (args['key'] == null) args['key'] = "5d385058ba1e0f1046d0ff05c5795807"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		if (args['postal_code'] == null) args['postal_code'] = "94031"
		var rgx = new RegExp('\{postal_code\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['postal_code'])
			if (args['postal_code']) delete args['postal_code']
		}
		if (url.indexOf('[/postal_code]') !== -1) {
			url = url.replace('[/postal_code]', '/' + args['postal_code'])
			if (args['postal_code']) delete args['postal_code']
		}
		if (args['radius'] == null) args['radius'] = "10"
		var rgx = new RegExp('\{radius\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (url.indexOf('[/radius]') !== -1) {
			url = url.replace('[/radius]', '/' + args['radius'])
			if (args['radius']) delete args['radius']
		}
		var rgx = new RegExp('\{merchant_ids\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['merchant_ids'])
			if (args['merchant_ids']) delete args['merchant_ids']
		}
		if (url.indexOf('[/merchant_ids]') !== -1) {
			url = url.replace('[/merchant_ids]', '/' + args['merchant_ids'])
			if (args['merchant_ids']) delete args['merchant_ids']
		}
		var rgx = new RegExp('\{phones\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phones'])
			if (args['phones']) delete args['phones']
		}
		if (url.indexOf('[/phones]') !== -1) {
			url = url.replace('[/phones]', '/' + args['phones'])
			if (args['phones']) delete args['phones']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/postal_code]') !== -1) url = url.replace('[/postal_code]', '')
		if (url.indexOf('[/radius]') !== -1) url = url.replace('[/radius]', '')
		if (url.indexOf('[/merchant_ids]') !== -1) url = url.replace('[/merchant_ids]', '')
		if (url.indexOf('[/phones]') !== -1) url = url.replace('[/phones]', '')
		return http({provider:'gomilo',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'products': function(args, opts) {
		var url = 'https://api.x.com/milo/v3//products'
		args = args || {}
		if (args['key'] == null) args['key'] = "5d385058ba1e0f1046d0ff05c5795807"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		var rgx = new RegExp('\{q\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['q'])
			if (args['q']) delete args['q']
		}
		if (url.indexOf('[/q]') !== -1) {
			url = url.replace('[/q]', '/' + args['q'])
			if (args['q']) delete args['q']
		}
		var rgx = new RegExp('\{min_price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['min_price'])
			if (args['min_price']) delete args['min_price']
		}
		if (url.indexOf('[/min_price]') !== -1) {
			url = url.replace('[/min_price]', '/' + args['min_price'])
			if (args['min_price']) delete args['min_price']
		}
		var rgx = new RegExp('\{max_price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max_price'])
			if (args['max_price']) delete args['max_price']
		}
		if (url.indexOf('[/max_price]') !== -1) {
			url = url.replace('[/max_price]', '/' + args['max_price'])
			if (args['max_price']) delete args['max_price']
		}
		var rgx = new RegExp('\{min_rating\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['min_rating'])
			if (args['min_rating']) delete args['min_rating']
		}
		if (url.indexOf('[/min_rating]') !== -1) {
			url = url.replace('[/min_rating]', '/' + args['min_rating'])
			if (args['min_rating']) delete args['min_rating']
		}
		var rgx = new RegExp('\{max_rating\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max_rating'])
			if (args['max_rating']) delete args['max_rating']
		}
		if (url.indexOf('[/max_rating]') !== -1) {
			url = url.replace('[/max_rating]', '/' + args['max_rating'])
			if (args['max_rating']) delete args['max_rating']
		}
		var rgx = new RegExp('\{category_ids\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category_ids'])
			if (args['category_ids']) delete args['category_ids']
		}
		if (url.indexOf('[/category_ids]') !== -1) {
			url = url.replace('[/category_ids]', '/' + args['category_ids'])
			if (args['category_ids']) delete args['category_ids']
		}
		var rgx = new RegExp('\{merchant_ids\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['merchant_ids'])
			if (args['merchant_ids']) delete args['merchant_ids']
		}
		if (url.indexOf('[/merchant_ids]') !== -1) {
			url = url.replace('[/merchant_ids]', '/' + args['merchant_ids'])
			if (args['merchant_ids']) delete args['merchant_ids']
		}
		var rgx = new RegExp('\{on_sale\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['on_sale'])
			if (args['on_sale']) delete args['on_sale']
		}
		if (url.indexOf('[/on_sale]') !== -1) {
			url = url.replace('[/on_sale]', '/' + args['on_sale'])
			if (args['on_sale']) delete args['on_sale']
		}
		var rgx = new RegExp('\{is_deal\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['is_deal'])
			if (args['is_deal']) delete args['is_deal']
		}
		if (url.indexOf('[/is_deal]') !== -1) {
			url = url.replace('[/is_deal]', '/' + args['is_deal'])
			if (args['is_deal']) delete args['is_deal']
		}
		var rgx = new RegExp('\{sort_by\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_by'])
			if (args['sort_by']) delete args['sort_by']
		}
		if (url.indexOf('[/sort_by]') !== -1) {
			url = url.replace('[/sort_by]', '/' + args['sort_by'])
			if (args['sort_by']) delete args['sort_by']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		var rgx = new RegExp('\{per_page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		if (url.indexOf('[/per_page]') !== -1) {
			url = url.replace('[/per_page]', '/' + args['per_page'])
			if (args['per_page']) delete args['per_page']
		}
		var rgx = new RegExp('\{show\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['show'])
			if (args['show']) delete args['show']
		}
		if (url.indexOf('[/show]') !== -1) {
			url = url.replace('[/show]', '/' + args['show'])
			if (args['show']) delete args['show']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/q]') !== -1) url = url.replace('[/q]', '')
		if (url.indexOf('[/min_price]') !== -1) url = url.replace('[/min_price]', '')
		if (url.indexOf('[/max_price]') !== -1) url = url.replace('[/max_price]', '')
		if (url.indexOf('[/min_rating]') !== -1) url = url.replace('[/min_rating]', '')
		if (url.indexOf('[/max_rating]') !== -1) url = url.replace('[/max_rating]', '')
		if (url.indexOf('[/category_ids]') !== -1) url = url.replace('[/category_ids]', '')
		if (url.indexOf('[/merchant_ids]') !== -1) url = url.replace('[/merchant_ids]', '')
		if (url.indexOf('[/on_sale]') !== -1) url = url.replace('[/on_sale]', '')
		if (url.indexOf('[/is_deal]') !== -1) url = url.replace('[/is_deal]', '')
		if (url.indexOf('[/sort_by]') !== -1) url = url.replace('[/sort_by]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		if (url.indexOf('[/per_page]') !== -1) url = url.replace('[/per_page]', '')
		if (url.indexOf('[/show]') !== -1) url = url.replace('[/show]', '')
		return http({provider:'gomilo',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'availability': function(args, opts) {
		var url = 'https://api.x.com/milo/v3//availability'
		args = args || {}
		if (args['key'] == null) args['key'] = "5d385058ba1e0f1046d0ff05c5795807"
		var rgx = new RegExp('\{key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['key'])
			if (args['key']) delete args['key']
		}
		if (url.indexOf('[/key]') !== -1) {
			url = url.replace('[/key]', '/' + args['key'])
			if (args['key']) delete args['key']
		}
		if (args['product_id'] == null) args['product_id'] = "9418020"
		var rgx = new RegExp('\{product_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['product_id'])
			if (args['product_id']) delete args['product_id']
		}
		if (url.indexOf('[/product_id]') !== -1) {
			url = url.replace('[/product_id]', '/' + args['product_id'])
			if (args['product_id']) delete args['product_id']
		}
		if (args['postal_code'] == null) args['postal_code'] = "94587"
		var rgx = new RegExp('\{postal_code\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['postal_code'])
			if (args['postal_code']) delete args['postal_code']
		}
		if (url.indexOf('[/postal_code]') !== -1) {
			url = url.replace('[/postal_code]', '/' + args['postal_code'])
			if (args['postal_code']) delete args['postal_code']
		}
		if (args['callback'] == null) args['callback'] = "showCallback"
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/key]') !== -1) url = url.replace('[/key]', '')
		if (url.indexOf('[/product_id]') !== -1) url = url.replace('[/product_id]', '')
		if (url.indexOf('[/postal_code]') !== -1) url = url.replace('[/postal_code]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'gomilo',url:url,method:'GET',params:args, auth:'none'}, opts)
	}
})