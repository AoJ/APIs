/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'tropo'})},
	'applicationCreate': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'applicationFindAll': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'applicationFind': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'applicationDelete': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		return http({provider:'tropo',url:url,method:'DELETE',params:args}, opts)
	},
	'applicationUpdate': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications'
		args = args || {}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'PUT',params:args}, opts)
	},
	'addressAddprefix': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'addressAddtollfree': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'addressAddintl': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'addressAddspecific': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'addressAddim': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'addressAddtoken': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'addressFindAll': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'addressFind': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'addressDelete': function(args, opts) {
		var url = 'https://api.tropo.com/v1/applications/{AppId}/addresses'
		args = args || {}
		var rgx = new RegExp('\{applicationId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) {
			url = url.replace('[/applicationId]', '/' + args['applicationId'])
			if (args['applicationId']) delete args['applicationId']
		}
		if (url.indexOf('[/applicationId]') !== -1) url = url.replace('[/applicationId]', '')
		return http({provider:'tropo',url:url,method:'DELETE',params:args}, opts)
	},
	'addressViewexchanges': function(args, opts) {
		var url = 'https://api.tropo.com/v1/exchanges'
		args = args || {}
		return http({provider:'tropo',url:url,method:'GET',params:args}, opts)
	},
	'sessionStart': function(args, opts) {
		var url = 'https://api.tropo.com/v1/sessions'
		args = args || {}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	},
	'sessionInterrupt': function(args, opts) {
		var url = 'https://api.tropo.com/v1/sessions'
		args = args || {}
		if (args['Content-Type'] == null) args['Content-Type'] = "application/json"
		var rgx = new RegExp('\{Content-Type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) {
			url = url.replace('[/Content-Type]', '/' + args['Content-Type'])
			if (args['Content-Type']) delete args['Content-Type']
		}
		if (url.indexOf('[/Content-Type]') !== -1) url = url.replace('[/Content-Type]', '')
		return http({provider:'tropo',url:url,method:'POST',params:args}, opts)
	}
})