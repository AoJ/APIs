/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'rubygems'})},
	'getGem': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems/{name}.{format}'
		args = args || {}
		if (args['name'] == null) args['name'] = "rails"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'search': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/search.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['query'] == null) args['query'] = "cucumber"
		var rgx = new RegExp('\{query\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['query'])
			if (args['query']) delete args['query']
		}
		if (url.indexOf('[/query]') !== -1) {
			url = url.replace('[/query]', '/' + args['query'])
			if (args['query']) delete args['query']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/query]') !== -1) url = url.replace('[/query]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGems': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args}, opts)
	},
	'submitGem': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems'
		args = args || {}
		return http({provider:'rubygems',url:url,method:'POST',params:args}, opts)
	},
	'removeGem': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems/yank'
		args = args || {}
		if (args['gem_name'] == null) args['gem_name'] = "bills"
		var rgx = new RegExp('\{gem_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (url.indexOf('[/gem_name]') !== -1) {
			url = url.replace('[/gem_name]', '/' + args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (args['version'] == null) args['version'] = "0.0.1"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{platform\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['platform'])
			if (args['platform']) delete args['platform']
		}
		if (url.indexOf('[/platform]') !== -1) {
			url = url.replace('[/platform]', '/' + args['platform'])
			if (args['platform']) delete args['platform']
		}
		if (url.indexOf('[/gem_name]') !== -1) url = url.replace('[/gem_name]', '')
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/platform]') !== -1) url = url.replace('[/platform]', '')
		return http({provider:'rubygems',url:url,method:'DELETE',params:args}, opts)
	},
	'updateGem': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems/unyank'
		args = args || {}
		if (args['gem_name'] == null) args['gem_name'] = "bills"
		var rgx = new RegExp('\{gem_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (url.indexOf('[/gem_name]') !== -1) {
			url = url.replace('[/gem_name]', '/' + args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (args['version'] == null) args['version'] = "0.0.1"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{platform\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['platform'])
			if (args['platform']) delete args['platform']
		}
		if (url.indexOf('[/platform]') !== -1) {
			url = url.replace('[/platform]', '/' + args['platform'])
			if (args['platform']) delete args['platform']
		}
		if (url.indexOf('[/gem_name]') !== -1) url = url.replace('[/gem_name]', '')
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/platform]') !== -1) url = url.replace('[/platform]', '')
		return http({provider:'rubygems',url:url,method:'PUT',params:args}, opts)
	},
	'getLatestGems': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems/latest.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getJustUpdatedGems': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems/just_updated.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGemVersionDetails': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/versions/{name}.{format}'
		args = args || {}
		if (args['name'] == null) args['name'] = "coulda"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getTotalGemsDownloads': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/downloads.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getTodayTopGemVersionsDownloads': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/downloads/top.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getTopGemVersionsDownloads': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/downloads/all.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGemDownloads': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/downloads/{name}-{version}.{format}'
		args = args || {}
		if (args['name'] == null) args['name'] = "rails_admin"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['version'] == null) args['version'] = "0.0.0"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getDailyGemDownloads': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/versions/{name}-{version}/downloads.{format}'
		args = args || {}
		if (args['name'] == null) args['name'] = "coulda"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['version'] == null) args['version'] = "0.6.3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getDailyGemDownloadsWithinRange': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/versions/{name}-{version}/downloads/search.{format}'
		args = args || {}
		if (args['name'] == null) args['name'] = "coulda"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['version'] == null) args['version'] = "0.6.3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['from'] == null) args['from'] = "2011-11-01"
		var rgx = new RegExp('\{from\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['from'])
			if (args['from']) delete args['from']
		}
		if (url.indexOf('[/from]') !== -1) {
			url = url.replace('[/from]', '/' + args['from'])
			if (args['from']) delete args['from']
		}
		if (args['to'] == null) args['to'] = "2011-11-05"
		var rgx = new RegExp('\{to\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['to'])
			if (args['to']) delete args['to']
		}
		if (url.indexOf('[/to]') !== -1) {
			url = url.replace('[/to]', '/' + args['to'])
			if (args['to']) delete args['to']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/from]') !== -1) url = url.replace('[/from]', '')
		if (url.indexOf('[/to]') !== -1) url = url.replace('[/to]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGemOwners': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems/{name}/owners.{format}'
		args = args || {}
		if (args['name'] == null) args['name'] = "gemcutter"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'addGemOwner': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems/{name}/owners'
		args = args || {}
		if (args['name'] == null) args['name'] = "gemcutter"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['email'] == null) args['email'] = "nick@gemcutter.org"
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'rubygems',url:url,method:'POST',params:args}, opts)
	},
	'removeGemOwner': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/gems/{name}/owners'
		args = args || {}
		if (args['name'] == null) args['name'] = "gemcutter"
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['email'] == null) args['email'] = "nick@gemcutter.org"
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'rubygems',url:url,method:'DELETE',params:args}, opts)
	},
	'getWebHooks': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/web_hooks.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args}, opts)
	},
	'createWebHook': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/web_hooks'
		args = args || {}
		if (args['gem_name'] == null) throw new Error('gem_name is a required parameter')
		var rgx = new RegExp('\{gem_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (url.indexOf('[/gem_name]') !== -1) {
			url = url.replace('[/gem_name]', '/' + args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (args['url'] == null) args['url'] = "http://example.com"
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/gem_name]') !== -1) url = url.replace('[/gem_name]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'rubygems',url:url,method:'POST',params:args}, opts)
	},
	'removeWebHook': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/web_hooks/remove'
		args = args || {}
		if (args['gem_name'] == null) args['gem_name'] = "rails"
		var rgx = new RegExp('\{gem_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (url.indexOf('[/gem_name]') !== -1) {
			url = url.replace('[/gem_name]', '/' + args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (args['url'] == null) args['url'] = "http://example.com"
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/gem_name]') !== -1) url = url.replace('[/gem_name]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'rubygems',url:url,method:'DELETE',params:args}, opts)
	},
	'testFireWebHook': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/web_hooks/fire'
		args = args || {}
		if (args['gem_name'] == null) args['gem_name'] = "rails"
		var rgx = new RegExp('\{gem_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (url.indexOf('[/gem_name]') !== -1) {
			url = url.replace('[/gem_name]', '/' + args['gem_name'])
			if (args['gem_name']) delete args['gem_name']
		}
		if (args['url'] == null) args['url'] = "http://example.com"
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/gem_name]') !== -1) url = url.replace('[/gem_name]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'rubygems',url:url,method:'POST',params:args}, opts)
	},
	'getApiKey': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/api_key.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "json"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getGemsDependencies': function(args, opts) {
		var url = 'https://rubygems.org/api/v1/dependencies'
		args = args || {}
		if (args['gems'] == null) args['gems'] = "rails,thor"
		var rgx = new RegExp('\{gems\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gems'])
			if (args['gems']) delete args['gems']
		}
		if (url.indexOf('[/gems]') !== -1) {
			url = url.replace('[/gems]', '/' + args['gems'])
			if (args['gems']) delete args['gems']
		}
		if (url.indexOf('[/gems]') !== -1) url = url.replace('[/gems]', '')
		return http({provider:'rubygems',url:url,method:'GET',params:args, auth:'none'}, opts)
	}
})