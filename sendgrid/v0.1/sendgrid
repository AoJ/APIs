/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'sendgrid'})},
	'blocks.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/blocks.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'blocks.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/blocks.delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'bounces.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/bounces.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'bounces.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/bounces.delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'bounces.count': function(args, opts) {
		var url = 'https://sendgrid.com/api/bounces.count.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'eventposturl.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/eventposturl.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'eventposturl.set': function(args, opts) {
		var url = 'https://sendgrid.com/api/eventposturl.set.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'eventposturl.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/eventposturl.delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'filter.getavailable': function(args, opts) {
		var url = 'https://sendgrid.com/api/filter.getavailable.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'filter.activate': function(args, opts) {
		var url = 'https://sendgrid.com/api/filter.activate.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'filter.deactivate': function(args, opts) {
		var url = 'https://sendgrid.com/api/filter.deactivate.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'filter.getsettings': function(args, opts) {
		var url = 'https://sendgrid.com/api/filter.getsettings.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'invalidemails.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/invalidemails.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'invalidemails.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/invalidemails.delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'invalidemails.count': function(args, opts) {
		var url = 'https://sendgrid.com/api/invalidemails.count.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'parse.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/parse.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'parse.set': function(args, opts) {
		var url = 'https://sendgrid.com/api/parse.set.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{spam_check\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/spam_check]') !== -1) {
			url = url.replace('[/spam_check]', '/' + args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/spam_check]') !== -1) url = url.replace('[/spam_check]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'parse.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/parse.delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'profile.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/profile.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'profile.set': function(args, opts) {
		var url = 'https://sendgrid.com/api/profile.set.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{first_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (url.indexOf('[/first_name]') !== -1) {
			url = url.replace('[/first_name]', '/' + args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		var rgx = new RegExp('\{last_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (url.indexOf('[/last_name]') !== -1) {
			url = url.replace('[/last_name]', '/' + args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		var rgx = new RegExp('\{website\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['website'])
			if (args['website']) delete args['website']
		}
		if (url.indexOf('[/website]') !== -1) {
			url = url.replace('[/website]', '/' + args['website'])
			if (args['website']) delete args['website']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/first_name]') !== -1) url = url.replace('[/first_name]', '')
		if (url.indexOf('[/last_name]') !== -1) url = url.replace('[/last_name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/website]') !== -1) url = url.replace('[/website]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'password.set': function(args, opts) {
		var url = 'https://sendgrid.com/api/password.set.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['password'] == null) throw new Error('password is a required parameter')
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (args['confirm_password'] == null) throw new Error('confirm_password is a required parameter')
		var rgx = new RegExp('\{confirm_password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (url.indexOf('[/confirm_password]') !== -1) {
			url = url.replace('[/confirm_password]', '/' + args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		if (url.indexOf('[/confirm_password]') !== -1) url = url.replace('[/confirm_password]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'profile.setUsername': function(args, opts) {
		var url = 'https://sendgrid.com/api/profile.setUsername.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['username'] == null) throw new Error('username is a required parameter')
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'profile.setEmail': function(args, opts) {
		var url = 'https://sendgrid.com/api/profile.setEmail.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'spamreports.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/spamreports.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'spamreports.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/spamreports.delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'spamreports.count': function(args, opts) {
		var url = 'https://sendgrid.com/api/spamreports.count.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'stats.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/stats.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'stats.aggregates.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/stats.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['aggregate'] == null) throw new Error('aggregate is a required parameter')
		var rgx = new RegExp('\{aggregate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['aggregate'])
			if (args['aggregate']) delete args['aggregate']
		}
		if (url.indexOf('[/aggregate]') !== -1) {
			url = url.replace('[/aggregate]', '/' + args['aggregate'])
			if (args['aggregate']) delete args['aggregate']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/aggregate]') !== -1) url = url.replace('[/aggregate]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'stats.categories.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/stats.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'stats.category.stats.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/stats.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['category'] == null) throw new Error('category is a required parameter')
		var rgx = new RegExp('\{category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/category]') !== -1) {
			url = url.replace('[/category]', '/' + args['category'])
			if (args['category']) delete args['category']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/category]') !== -1) url = url.replace('[/category]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'stats.categories.total.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/stats.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['aggregate'] == null) throw new Error('aggregate is a required parameter')
		var rgx = new RegExp('\{aggregate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['aggregate'])
			if (args['aggregate']) delete args['aggregate']
		}
		if (url.indexOf('[/aggregate]') !== -1) {
			url = url.replace('[/aggregate]', '/' + args['aggregate'])
			if (args['aggregate']) delete args['aggregate']
		}
		if (args['category'] == null) throw new Error('category is a required parameter')
		var rgx = new RegExp('\{category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/category]') !== -1) {
			url = url.replace('[/category]', '/' + args['category'])
			if (args['category']) delete args['category']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/aggregate]') !== -1) url = url.replace('[/aggregate]', '')
		if (url.indexOf('[/category]') !== -1) url = url.replace('[/category]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'unsubscribes.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/unsubscribes.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'unsubscribes.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/unsubscribes.delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'unsubscribes.add': function(args, opts) {
		var url = 'https://sendgrid.com/api/unsubscribes.add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'unsubscribes.count': function(args, opts) {
		var url = 'https://sendgrid.com/api/unsubscribes.count.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'user.bounces.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/user.bounces.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'user.bounces.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/user.bounces.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'user.spamreports.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/user.spamreports.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'user.spamreports.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/user.spamreports.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'user.unsubscribes.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/user.unsubscribes.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'user.unsubscribes.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/user.unsubscribes.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'user.unsubscribes.add': function(args, opts) {
		var url = 'https://sendgrid.com/api/user.unsubscribes.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "add"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.add': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['identity'] == null) throw new Error('identity is a required parameter')
		var rgx = new RegExp('\{identity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/identity]') !== -1) {
			url = url.replace('[/identity]', '/' + args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['subject'] == null) throw new Error('subject is a required parameter')
		var rgx = new RegExp('\{subject\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject'])
			if (args['subject']) delete args['subject']
		}
		if (url.indexOf('[/subject]') !== -1) {
			url = url.replace('[/subject]', '/' + args['subject'])
			if (args['subject']) delete args['subject']
		}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (args['html'] == null) throw new Error('html is a required parameter')
		var rgx = new RegExp('\{html\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['html'])
			if (args['html']) delete args['html']
		}
		if (url.indexOf('[/html]') !== -1) {
			url = url.replace('[/html]', '/' + args['html'])
			if (args['html']) delete args['html']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/identity]') !== -1) url = url.replace('[/identity]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/subject]') !== -1) url = url.replace('[/subject]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/html]') !== -1) url = url.replace('[/html]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.edit': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/edit.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['newname'] == null) throw new Error('newname is a required parameter')
		var rgx = new RegExp('\{newname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['newname'])
			if (args['newname']) delete args['newname']
		}
		if (url.indexOf('[/newname]') !== -1) {
			url = url.replace('[/newname]', '/' + args['newname'])
			if (args['newname']) delete args['newname']
		}
		if (args['identity'] == null) throw new Error('identity is a required parameter')
		var rgx = new RegExp('\{identity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/identity]') !== -1) {
			url = url.replace('[/identity]', '/' + args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (args['subject'] == null) throw new Error('subject is a required parameter')
		var rgx = new RegExp('\{subject\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject'])
			if (args['subject']) delete args['subject']
		}
		if (url.indexOf('[/subject]') !== -1) {
			url = url.replace('[/subject]', '/' + args['subject'])
			if (args['subject']) delete args['subject']
		}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (args['html'] == null) throw new Error('html is a required parameter')
		var rgx = new RegExp('\{html\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['html'])
			if (args['html']) delete args['html']
		}
		if (url.indexOf('[/html]') !== -1) {
			url = url.replace('[/html]', '/' + args['html'])
			if (args['html']) delete args['html']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/newname]') !== -1) url = url.replace('[/newname]', '')
		if (url.indexOf('[/identity]') !== -1) url = url.replace('[/identity]', '')
		if (url.indexOf('[/subject]') !== -1) url = url.replace('[/subject]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/html]') !== -1) url = url.replace('[/html]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.list': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/list.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.lists.add': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/lists/add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.lists.edit': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/lists/edit.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (args['newlist'] == null) throw new Error('newlist is a required parameter')
		var rgx = new RegExp('\{newlist\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['newlist'])
			if (args['newlist']) delete args['newlist']
		}
		if (url.indexOf('[/newlist]') !== -1) {
			url = url.replace('[/newlist]', '/' + args['newlist'])
			if (args['newlist']) delete args['newlist']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		if (url.indexOf('[/newlist]') !== -1) url = url.replace('[/newlist]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.lists.list': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/lists/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.lists.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/lists/delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.lists.email.add': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/lists/email/add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (args['data'] == null) throw new Error('data is a required parameter')
		var rgx = new RegExp('\{data\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['data'])
			if (args['data']) delete args['data']
		}
		if (url.indexOf('[/data]') !== -1) {
			url = url.replace('[/data]', '/' + args['data'])
			if (args['data']) delete args['data']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		if (url.indexOf('[/data]') !== -1) url = url.replace('[/data]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.lists.email.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/lists/email/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.lists.email.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/lists/email/delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.identity.add': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/identity/add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['identity'] == null) throw new Error('identity is a required parameter')
		var rgx = new RegExp('\{identity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/identity]') !== -1) {
			url = url.replace('[/identity]', '/' + args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (args['address'] == null) throw new Error('address is a required parameter')
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		if (args['city'] == null) throw new Error('city is a required parameter')
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		if (args['state'] == null) throw new Error('state is a required parameter')
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		if (args['zip'] == null) throw new Error('zip is a required parameter')
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (args['country'] == null) throw new Error('country is a required parameter')
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/identity]') !== -1) url = url.replace('[/identity]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.identity.edit': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/identity/edit.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['identity'] == null) throw new Error('identity is a required parameter')
		var rgx = new RegExp('\{identity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/identity]') !== -1) {
			url = url.replace('[/identity]', '/' + args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (args['newidentity'] == null) throw new Error('newidentity is a required parameter')
		var rgx = new RegExp('\{newidentity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['newidentity'])
			if (args['newidentity']) delete args['newidentity']
		}
		if (url.indexOf('[/newidentity]') !== -1) {
			url = url.replace('[/newidentity]', '/' + args['newidentity'])
			if (args['newidentity']) delete args['newidentity']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (args['address'] == null) throw new Error('address is a required parameter')
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		if (args['city'] == null) throw new Error('city is a required parameter')
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		if (args['state'] == null) throw new Error('state is a required parameter')
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		if (args['zip'] == null) throw new Error('zip is a required parameter')
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (args['country'] == null) throw new Error('country is a required parameter')
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/identity]') !== -1) url = url.replace('[/identity]', '')
		if (url.indexOf('[/newidentity]') !== -1) url = url.replace('[/newidentity]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.identity.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/identity/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['identity'] == null) throw new Error('identity is a required parameter')
		var rgx = new RegExp('\{identity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/identity]') !== -1) {
			url = url.replace('[/identity]', '/' + args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/identity]') !== -1) url = url.replace('[/identity]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.identity.list': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/identity/list.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{identity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/identity]') !== -1) {
			url = url.replace('[/identity]', '/' + args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/identity]') !== -1) url = url.replace('[/identity]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.identity.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/identity/delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['identity'] == null) throw new Error('identity is a required parameter')
		var rgx = new RegExp('\{identity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/identity]') !== -1) {
			url = url.replace('[/identity]', '/' + args['identity'])
			if (args['identity']) delete args['identity']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/identity]') !== -1) url = url.replace('[/identity]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.recipients.add': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/recipients/add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.recipients.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/recipients/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.recipients.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/recipients/delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.schedule.add': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/schedule/add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{at\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['at'])
			if (args['at']) delete args['at']
		}
		if (url.indexOf('[/at]') !== -1) {
			url = url.replace('[/at]', '/' + args['at'])
			if (args['at']) delete args['at']
		}
		var rgx = new RegExp('\{after\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['after'])
			if (args['after']) delete args['after']
		}
		if (url.indexOf('[/after]') !== -1) {
			url = url.replace('[/after]', '/' + args['after'])
			if (args['after']) delete args['after']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/at]') !== -1) url = url.replace('[/at]', '')
		if (url.indexOf('[/after]') !== -1) url = url.replace('[/after]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.schedule.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/schedule/get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'newsletter.schedule.delete': function(args, opts) {
		var url = 'https://sendgrid.com/api/newsletter/schedule/delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'billing.list': function(args, opts) {
		var url = 'https://sendgrid.com/api/billing.list.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{status\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['status'])
			if (args['status']) delete args['status']
		}
		if (url.indexOf('[/status]') !== -1) {
			url = url.replace('[/status]', '/' + args['status'])
			if (args['status']) delete args['status']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/status]') !== -1) url = url.replace('[/status]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'billing.get': function(args, opts) {
		var url = 'https://sendgrid.com/api/billing.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{status\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['status'])
			if (args['status']) delete args['status']
		}
		if (url.indexOf('[/status]') !== -1) {
			url = url.replace('[/status]', '/' + args['status'])
			if (args['status']) delete args['status']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/status]') !== -1) url = url.replace('[/status]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.auth': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.auth.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['password'] == null) throw new Error('password is a required parameter')
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.geturl': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.geturl.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.eventposturl.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.eventposturl.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.eventposturl.set': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.eventposturl.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "set"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.eventposturl.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.eventposturl.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.apps.getavailable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.apps.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "getavailable"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.apps.activate': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.apps.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "activate"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.apps.deactivate': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.apps.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "deactivate"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.apps.setup': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.apps.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "setup"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.apps.getsettings': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.apps.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "getsettings"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.invalidemails.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.invalidemails.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.invalidemails.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.invalidemails.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.ip': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.ip.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['list'] == null) throw new Error('list is a required parameter')
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.sendip.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.sendip.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "list"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.sendip.append': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.sendip.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "append"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['set'] == null) throw new Error('set is a required parameter')
		var rgx = new RegExp('\{set\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['set'])
			if (args['set']) delete args['set']
		}
		if (url.indexOf('[/set]') !== -1) {
			url = url.replace('[/set]', '/' + args['set'])
			if (args['set']) delete args['set']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/set]') !== -1) url = url.replace('[/set]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.monitor.create': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.monitor.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "create"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (args['frequency'] == null) throw new Error('frequency is a required parameter')
		var rgx = new RegExp('\{frequency\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['frequency'])
			if (args['frequency']) delete args['frequency']
		}
		if (url.indexOf('[/frequency]') !== -1) {
			url = url.replace('[/frequency]', '/' + args['frequency'])
			if (args['frequency']) delete args['frequency']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/frequency]') !== -1) url = url.replace('[/frequency]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.monitor.edit': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.monitor.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "edit"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{new_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_name'])
			if (args['new_name']) delete args['new_name']
		}
		if (url.indexOf('[/new_name]') !== -1) {
			url = url.replace('[/new_name]', '/' + args['new_name'])
			if (args['new_name']) delete args['new_name']
		}
		var rgx = new RegExp('\{new_email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_email'])
			if (args['new_email']) delete args['new_email']
		}
		if (url.indexOf('[/new_email]') !== -1) {
			url = url.replace('[/new_email]', '/' + args['new_email'])
			if (args['new_email']) delete args['new_email']
		}
		var rgx = new RegExp('\{new_frequency\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_frequency'])
			if (args['new_frequency']) delete args['new_frequency']
		}
		if (url.indexOf('[/new_frequency]') !== -1) {
			url = url.replace('[/new_frequency]', '/' + args['new_frequency'])
			if (args['new_frequency']) delete args['new_frequency']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/new_name]') !== -1) url = url.replace('[/new_name]', '')
		if (url.indexOf('[/new_email]') !== -1) url = url.replace('[/new_email]', '')
		if (url.indexOf('[/new_frequency]') !== -1) url = url.replace('[/new_frequency]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.monitor.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.monitor.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.monitor.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.monitor.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "list"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.monitor.append': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.monitor.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "append"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.monitor.detach': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.monitor.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "detach"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.parse.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.parse.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.parse.set': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.parse.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "set"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.parse.update': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.parse.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "update"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.parse.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.parse.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.add': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['username'] == null) throw new Error('username is a required parameter')
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (args['password'] == null) throw new Error('password is a required parameter')
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (args['confirm_password'] == null) throw new Error('confirm_password is a required parameter')
		var rgx = new RegExp('\{confirm_password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (url.indexOf('[/confirm_password]') !== -1) {
			url = url.replace('[/confirm_password]', '/' + args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (args['first_name'] == null) throw new Error('first_name is a required parameter')
		var rgx = new RegExp('\{first_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (url.indexOf('[/first_name]') !== -1) {
			url = url.replace('[/first_name]', '/' + args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (args['last_name'] == null) throw new Error('last_name is a required parameter')
		var rgx = new RegExp('\{last_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (url.indexOf('[/last_name]') !== -1) {
			url = url.replace('[/last_name]', '/' + args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (args['address'] == null) throw new Error('address is a required parameter')
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		if (args['city'] == null) throw new Error('city is a required parameter')
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		if (args['state'] == null) throw new Error('state is a required parameter')
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		if (args['country'] == null) throw new Error('country is a required parameter')
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		if (args['zip'] == null) throw new Error('zip is a required parameter')
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (args['phone'] == null) throw new Error('phone is a required parameter')
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (args['website'] == null) throw new Error('website is a required parameter')
		var rgx = new RegExp('\{website\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['website'])
			if (args['website']) delete args['website']
		}
		if (url.indexOf('[/website]') !== -1) {
			url = url.replace('[/website]', '/' + args['website'])
			if (args['website']) delete args['website']
		}
		if (args['company'] == null) throw new Error('company is a required parameter')
		var rgx = new RegExp('\{company\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/company]') !== -1) {
			url = url.replace('[/company]', '/' + args['company'])
			if (args['company']) delete args['company']
		}
		var rgx = new RegExp('\{mail_domain\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['mail_domain'])
			if (args['mail_domain']) delete args['mail_domain']
		}
		if (url.indexOf('[/mail_domain]') !== -1) {
			url = url.replace('[/mail_domain]', '/' + args['mail_domain'])
			if (args['mail_domain']) delete args['mail_domain']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		if (url.indexOf('[/confirm_password]') !== -1) url = url.replace('[/confirm_password]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/first_name]') !== -1) url = url.replace('[/first_name]', '')
		if (url.indexOf('[/last_name]') !== -1) url = url.replace('[/last_name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/website]') !== -1) url = url.replace('[/website]', '')
		if (url.indexOf('[/company]') !== -1) url = url.replace('[/company]', '')
		if (url.indexOf('[/mail_domain]') !== -1) url = url.replace('[/mail_domain]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.get.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		var rgx = new RegExp('\{active\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['active'])
			if (args['active']) delete args['active']
		}
		if (url.indexOf('[/active]') !== -1) {
			url = url.replace('[/active]', '/' + args['active'])
			if (args['active']) delete args['active']
		}
		var rgx = new RegExp('\{first_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (url.indexOf('[/first_name]') !== -1) {
			url = url.replace('[/first_name]', '/' + args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		var rgx = new RegExp('\{last_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (url.indexOf('[/last_name]') !== -1) {
			url = url.replace('[/last_name]', '/' + args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		var rgx = new RegExp('\{website\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['website'])
			if (args['website']) delete args['website']
		}
		if (url.indexOf('[/website]') !== -1) {
			url = url.replace('[/website]', '/' + args['website'])
			if (args['website']) delete args['website']
		}
		var rgx = new RegExp('\{company\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/company]') !== -1) {
			url = url.replace('[/company]', '/' + args['company'])
			if (args['company']) delete args['company']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/active]') !== -1) url = url.replace('[/active]', '')
		if (url.indexOf('[/first_name]') !== -1) url = url.replace('[/first_name]', '')
		if (url.indexOf('[/last_name]') !== -1) url = url.replace('[/last_name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/website]') !== -1) url = url.replace('[/website]', '')
		if (url.indexOf('[/company]') !== -1) url = url.replace('[/company]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.enable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.enable.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.disable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.disable.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['username'] == null) throw new Error('username is a required parameter')
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.websiteEnable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.website_enable.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.websiteDisable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.website_disable.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.profile.set': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.profile.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "set"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{first_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (url.indexOf('[/first_name]') !== -1) {
			url = url.replace('[/first_name]', '/' + args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		var rgx = new RegExp('\{last_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (url.indexOf('[/last_name]') !== -1) {
			url = url.replace('[/last_name]', '/' + args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		var rgx = new RegExp('\{website\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['website'])
			if (args['website']) delete args['website']
		}
		if (url.indexOf('[/website]') !== -1) {
			url = url.replace('[/website]', '/' + args['website'])
			if (args['website']) delete args['website']
		}
		var rgx = new RegExp('\{company\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/company]') !== -1) {
			url = url.replace('[/company]', '/' + args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/first_name]') !== -1) url = url.replace('[/first_name]', '')
		if (url.indexOf('[/last_name]') !== -1) url = url.replace('[/last_name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/website]') !== -1) url = url.replace('[/website]', '')
		if (url.indexOf('[/company]') !== -1) url = url.replace('[/company]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.profile.setUsername': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.profile.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "setUsername"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['username'] == null) throw new Error('username is a required parameter')
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.profile.setEmail': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.profile.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['task'] == null) args['task'] = "setEmail"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.password': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.password.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['password'] == null) throw new Error('password is a required parameter')
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (args['confirm_password'] == null) throw new Error('confirm_password is a required parameter')
		var rgx = new RegExp('\{confirm_password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (url.indexOf('[/confirm_password]') !== -1) {
			url = url.replace('[/confirm_password]', '/' + args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		if (url.indexOf('[/confirm_password]') !== -1) url = url.replace('[/confirm_password]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.whitelabel.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.whitelabel.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "list"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'customer.whitelabel.append': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/customer.whitelabel.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "append"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['mail_domain'] == null) throw new Error('mail_domain is a required parameter')
		var rgx = new RegExp('\{mail_domain\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['mail_domain'])
			if (args['mail_domain']) delete args['mail_domain']
		}
		if (url.indexOf('[/mail_domain]') !== -1) {
			url = url.replace('[/mail_domain]', '/' + args['mail_domain'])
			if (args['mail_domain']) delete args['mail_domain']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/mail_domain]') !== -1) url = url.replace('[/mail_domain]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.add': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.add.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['username'] == null) throw new Error('username is a required parameter')
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (args['password'] == null) throw new Error('password is a required parameter')
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (args['confirm_password'] == null) throw new Error('confirm_password is a required parameter')
		var rgx = new RegExp('\{confirm_password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (url.indexOf('[/confirm_password]') !== -1) {
			url = url.replace('[/confirm_password]', '/' + args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (args['first_name'] == null) throw new Error('first_name is a required parameter')
		var rgx = new RegExp('\{first_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (url.indexOf('[/first_name]') !== -1) {
			url = url.replace('[/first_name]', '/' + args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (args['last_name'] == null) throw new Error('last_name is a required parameter')
		var rgx = new RegExp('\{last_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (url.indexOf('[/last_name]') !== -1) {
			url = url.replace('[/last_name]', '/' + args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (args['address'] == null) throw new Error('address is a required parameter')
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		if (args['city'] == null) throw new Error('city is a required parameter')
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		if (args['state'] == null) throw new Error('state is a required parameter')
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		if (args['zip'] == null) throw new Error('zip is a required parameter')
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (args['country'] == null) throw new Error('country is a required parameter')
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		if (args['phone'] == null) throw new Error('phone is a required parameter')
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (args['website'] == null) throw new Error('website is a required parameter')
		var rgx = new RegExp('\{website\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['website'])
			if (args['website']) delete args['website']
		}
		if (url.indexOf('[/website]') !== -1) {
			url = url.replace('[/website]', '/' + args['website'])
			if (args['website']) delete args['website']
		}
		if (args['company'] == null) throw new Error('company is a required parameter')
		var rgx = new RegExp('\{company\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/company]') !== -1) {
			url = url.replace('[/company]', '/' + args['company'])
			if (args['company']) delete args['company']
		}
		if (args['package'] == null) throw new Error('package is a required parameter')
		var rgx = new RegExp('\{package\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['package'])
			if (args['package']) delete args['package']
		}
		if (url.indexOf('[/package]') !== -1) {
			url = url.replace('[/package]', '/' + args['package'])
			if (args['package']) delete args['package']
		}
		if (args['whitelabel'] == null) throw new Error('whitelabel is a required parameter')
		var rgx = new RegExp('\{whitelabel\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['whitelabel'])
			if (args['whitelabel']) delete args['whitelabel']
		}
		if (url.indexOf('[/whitelabel]') !== -1) {
			url = url.replace('[/whitelabel]', '/' + args['whitelabel'])
			if (args['whitelabel']) delete args['whitelabel']
		}
		var rgx = new RegExp('\{ip_group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/ip_group]') !== -1) {
			url = url.replace('[/ip_group]', '/' + args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		var rgx = new RegExp('\{free_user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['free_user'])
			if (args['free_user']) delete args['free_user']
		}
		if (url.indexOf('[/free_user]') !== -1) {
			url = url.replace('[/free_user]', '/' + args['free_user'])
			if (args['free_user']) delete args['free_user']
		}
		var rgx = new RegExp('\{billing_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['billing_date'])
			if (args['billing_date']) delete args['billing_date']
		}
		if (url.indexOf('[/billing_date]') !== -1) {
			url = url.replace('[/billing_date]', '/' + args['billing_date'])
			if (args['billing_date']) delete args['billing_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		if (url.indexOf('[/confirm_password]') !== -1) url = url.replace('[/confirm_password]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/first_name]') !== -1) url = url.replace('[/first_name]', '')
		if (url.indexOf('[/last_name]') !== -1) url = url.replace('[/last_name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/website]') !== -1) url = url.replace('[/website]', '')
		if (url.indexOf('[/company]') !== -1) url = url.replace('[/company]', '')
		if (url.indexOf('[/package]') !== -1) url = url.replace('[/package]', '')
		if (url.indexOf('[/whitelabel]') !== -1) url = url.replace('[/whitelabel]', '')
		if (url.indexOf('[/ip_group]') !== -1) url = url.replace('[/ip_group]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/free_user]') !== -1) url = url.replace('[/free_user]', '')
		if (url.indexOf('[/billing_date]') !== -1) url = url.replace('[/billing_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.delete.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['method'] == null) args['method'] = "profile"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		var rgx = new RegExp('\{active\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['active'])
			if (args['active']) delete args['active']
		}
		if (url.indexOf('[/active]') !== -1) {
			url = url.replace('[/active]', '/' + args['active'])
			if (args['active']) delete args['active']
		}
		var rgx = new RegExp('\{first_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (url.indexOf('[/first_name]') !== -1) {
			url = url.replace('[/first_name]', '/' + args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		var rgx = new RegExp('\{last_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (url.indexOf('[/last_name]') !== -1) {
			url = url.replace('[/last_name]', '/' + args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		var rgx = new RegExp('\{website\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['website'])
			if (args['website']) delete args['website']
		}
		if (url.indexOf('[/website]') !== -1) {
			url = url.replace('[/website]', '/' + args['website'])
			if (args['website']) delete args['website']
		}
		var rgx = new RegExp('\{company\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/company]') !== -1) {
			url = url.replace('[/company]', '/' + args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/active]') !== -1) url = url.replace('[/active]', '')
		if (url.indexOf('[/first_name]') !== -1) url = url.replace('[/first_name]', '')
		if (url.indexOf('[/last_name]') !== -1) url = url.replace('[/last_name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/website]') !== -1) url = url.replace('[/website]', '')
		if (url.indexOf('[/company]') !== -1) url = url.replace('[/company]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.enable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "enable"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.disable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "disable"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.websiteEnable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "website_enable"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.websiteDisable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "website_disable"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.profile.set': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "set"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['method'] == null) args['method'] = "profile"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{first_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		if (url.indexOf('[/first_name]') !== -1) {
			url = url.replace('[/first_name]', '/' + args['first_name'])
			if (args['first_name']) delete args['first_name']
		}
		var rgx = new RegExp('\{last_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		if (url.indexOf('[/last_name]') !== -1) {
			url = url.replace('[/last_name]', '/' + args['last_name'])
			if (args['last_name']) delete args['last_name']
		}
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{country\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country'])
			if (args['country']) delete args['country']
		}
		if (url.indexOf('[/country]') !== -1) {
			url = url.replace('[/country]', '/' + args['country'])
			if (args['country']) delete args['country']
		}
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		var rgx = new RegExp('\{website\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['website'])
			if (args['website']) delete args['website']
		}
		if (url.indexOf('[/website]') !== -1) {
			url = url.replace('[/website]', '/' + args['website'])
			if (args['website']) delete args['website']
		}
		var rgx = new RegExp('\{company\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/company]') !== -1) {
			url = url.replace('[/company]', '/' + args['company'])
			if (args['company']) delete args['company']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/first_name]') !== -1) url = url.replace('[/first_name]', '')
		if (url.indexOf('[/last_name]') !== -1) url = url.replace('[/last_name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country]') !== -1) url = url.replace('[/country]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/website]') !== -1) url = url.replace('[/website]', '')
		if (url.indexOf('[/company]') !== -1) url = url.replace('[/company]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.profile.password': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "password"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['password'] == null) throw new Error('password is a required parameter')
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (args['confirm_password'] == null) throw new Error('confirm_password is a required parameter')
		var rgx = new RegExp('\{confirm_password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (url.indexOf('[/confirm_password]') !== -1) {
			url = url.replace('[/confirm_password]', '/' + args['confirm_password'])
			if (args['confirm_password']) delete args['confirm_password']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		if (url.indexOf('[/confirm_password]') !== -1) url = url.replace('[/confirm_password]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.profile.setUsername': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "setUsername"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['method'] == null) args['method'] = "profile"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['username'] == null) throw new Error('username is a required parameter')
		var rgx = new RegExp('\{username\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/username]') !== -1) {
			url = url.replace('[/username]', '/' + args['username'])
			if (args['username']) delete args['username']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/username]') !== -1) url = url.replace('[/username]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.profile.setEmail': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "setEmail"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['method'] == null) args['method'] = "profile"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.stats.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "stats"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.stats.aggregates.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "stats"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['aggregate'] == null) args['aggregate'] = "1"
		var rgx = new RegExp('\{aggregate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['aggregate'])
			if (args['aggregate']) delete args['aggregate']
		}
		if (url.indexOf('[/aggregate]') !== -1) {
			url = url.replace('[/aggregate]', '/' + args['aggregate'])
			if (args['aggregate']) delete args['aggregate']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/aggregate]') !== -1) url = url.replace('[/aggregate]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.stats.categories.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "stats"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['list'] == null) args['list'] = "true"
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.stats.categories.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "stats"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['category'] == null) throw new Error('category is a required parameter')
		var rgx = new RegExp('\{category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/category]') !== -1) {
			url = url.replace('[/category]', '/' + args['category'])
			if (args['category']) delete args['category']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/category]') !== -1) url = url.replace('[/category]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.emaillist.bounces.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "bounces"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.bounces.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "bounces"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.emaillist.unsubscribes.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "unsubscribes"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.cureseller.manage.customer.emaillist.emaillist.e': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "unsubscribes"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.emaillist.unsubscribes.add': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "unsubscribes"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "add"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.emaillist.invalidemails.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "invalidemails"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.emaillist.invalidemails.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "invalidemails"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.emaillist.spamreports.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "spamreports"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.emaillist.spamreports.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "spamreports"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.accountlimits.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "retrieve"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.accountlimits.customers.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "none"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.accountlimits.resetCredits': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "recurring"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['credits'] == null) throw new Error('credits is a required parameter')
		var rgx = new RegExp('\{credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/credits]') !== -1) {
			url = url.replace('[/credits]', '/' + args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (args['period'] == null) throw new Error('period is a required parameter')
		var rgx = new RegExp('\{period\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['period'])
			if (args['period']) delete args['period']
		}
		if (url.indexOf('[/period]') !== -1) {
			url = url.replace('[/period]', '/' + args['period'])
			if (args['period']) delete args['period']
		}
		var rgx = new RegExp('\{startdate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startdate'])
			if (args['startdate']) delete args['startdate']
		}
		if (url.indexOf('[/startdate]') !== -1) {
			url = url.replace('[/startdate]', '/' + args['startdate'])
			if (args['startdate']) delete args['startdate']
		}
		var rgx = new RegExp('\{enddate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['enddate'])
			if (args['enddate']) delete args['enddate']
		}
		if (url.indexOf('[/enddate]') !== -1) {
			url = url.replace('[/enddate]', '/' + args['enddate'])
			if (args['enddate']) delete args['enddate']
		}
		var rgx = new RegExp('\{initial_credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['initial_credits'])
			if (args['initial_credits']) delete args['initial_credits']
		}
		if (url.indexOf('[/initial_credits]') !== -1) {
			url = url.replace('[/initial_credits]', '/' + args['initial_credits'])
			if (args['initial_credits']) delete args['initial_credits']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/credits]') !== -1) url = url.replace('[/credits]', '')
		if (url.indexOf('[/period]') !== -1) url = url.replace('[/period]', '')
		if (url.indexOf('[/startdate]') !== -1) url = url.replace('[/startdate]', '')
		if (url.indexOf('[/enddate]') !== -1) url = url.replace('[/enddate]', '')
		if (url.indexOf('[/initial_credits]') !== -1) url = url.replace('[/initial_credits]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.accountlimits.customers.setCredits': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "total"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['credits'] == null) throw new Error('credits is a required parameter')
		var rgx = new RegExp('\{credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/credits]') !== -1) {
			url = url.replace('[/credits]', '/' + args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/credits]') !== -1) url = url.replace('[/credits]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.accountlimits.customers.incrementCredits': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "increment"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['credits'] == null) throw new Error('credits is a required parameter')
		var rgx = new RegExp('\{credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/credits]') !== -1) {
			url = url.replace('[/credits]', '/' + args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/credits]') !== -1) url = url.replace('[/credits]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.customer.accountlimits.customers.decrementCredits': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "decrement"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['credits'] == null) throw new Error('credits is a required parameter')
		var rgx = new RegExp('\{credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/credits]') !== -1) {
			url = url.replace('[/credits]', '/' + args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/credits]') !== -1) url = url.replace('[/credits]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.monitorrecords.create': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "create"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (args['frequency'] == null) throw new Error('frequency is a required parameter')
		var rgx = new RegExp('\{frequency\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['frequency'])
			if (args['frequency']) delete args['frequency']
		}
		if (url.indexOf('[/frequency]') !== -1) {
			url = url.replace('[/frequency]', '/' + args['frequency'])
			if (args['frequency']) delete args['frequency']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/frequency]') !== -1) url = url.replace('[/frequency]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.monitorrecords.edit': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "edit"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{new_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_name'])
			if (args['new_name']) delete args['new_name']
		}
		if (url.indexOf('[/new_name]') !== -1) {
			url = url.replace('[/new_name]', '/' + args['new_name'])
			if (args['new_name']) delete args['new_name']
		}
		var rgx = new RegExp('\{new_email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_email'])
			if (args['new_email']) delete args['new_email']
		}
		if (url.indexOf('[/new_email]') !== -1) {
			url = url.replace('[/new_email]', '/' + args['new_email'])
			if (args['new_email']) delete args['new_email']
		}
		var rgx = new RegExp('\{new_frequency\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_frequency'])
			if (args['new_frequency']) delete args['new_frequency']
		}
		if (url.indexOf('[/new_frequency]') !== -1) {
			url = url.replace('[/new_frequency]', '/' + args['new_frequency'])
			if (args['new_frequency']) delete args['new_frequency']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/new_name]') !== -1) url = url.replace('[/new_name]', '')
		if (url.indexOf('[/new_email]') !== -1) url = url.replace('[/new_email]', '')
		if (url.indexOf('[/new_frequency]') !== -1) url = url.replace('[/new_frequency]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.monitorrecords.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.monitorrecords.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "list"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.monitorrecords.appendCustomer': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "append"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.monitorrecords.detachCustomer': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "detach"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.whitelabel.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "whitelabel"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "list"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.whitelabel.append': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "whitelabel"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "append"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['mail_domain'] == null) throw new Error('mail_domain is a required parameter')
		var rgx = new RegExp('\{mail_domain\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['mail_domain'])
			if (args['mail_domain']) delete args['mail_domain']
		}
		if (url.indexOf('[/mail_domain]') !== -1) {
			url = url.replace('[/mail_domain]', '/' + args['mail_domain'])
			if (args['mail_domain']) delete args['mail_domain']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/mail_domain]') !== -1) url = url.replace('[/mail_domain]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.automatic.login.get.url': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "geturl"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.event.notification.url.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "eventposturl"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.event.notification.url.set': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "eventposturl"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "set"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.event.notification.url.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "eventposturl"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.authenticate.customer': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "auth"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['password'] == null) throw new Error('password is a required parameter')
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.parse.settings.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "parse"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.parse.settings.set': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "parse"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "set"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (args['spam_check'] == null) args['spam_check'] = "1"
		var rgx = new RegExp('\{spam_check\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/spam_check]') !== -1) {
			url = url.replace('[/spam_check]', '/' + args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		if (url.indexOf('[/spam_check]') !== -1) url = url.replace('[/spam_check]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.parse.settings.update': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "parse"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "update"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (args['spam_check'] == null) args['spam_check'] = "1"
		var rgx = new RegExp('\{spam_check\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/spam_check]') !== -1) {
			url = url.replace('[/spam_check]', '/' + args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		if (url.indexOf('[/spam_check]') !== -1) url = url.replace('[/spam_check]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.parse.settings.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "parse"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.filter.getavailable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "getavailable"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.filter.activate': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "activate"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.filter.deactivate': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "deactivate"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.filter.setup': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "setup"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manage.filter.getsettings': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manage.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "getsettings"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.ip.all': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.ip.{format}'
		args = args || {}
		if (args['task'] == null) throw new Error('task is a required parameter')
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{system\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['system'])
			if (args['system']) delete args['system']
		}
		if (url.indexOf('[/system]') !== -1) {
			url = url.replace('[/system]', '/' + args['system'])
			if (args['system']) delete args['system']
		}
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/system]') !== -1) url = url.replace('[/system]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.ip.free': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.ip.{format}'
		args = args || {}
		if (args['task'] == null) throw new Error('task is a required parameter')
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.ip.taken': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.ip.{format}'
		args = args || {}
		if (args['task'] == null) throw new Error('task is a required parameter')
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.ip.available': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.ip.{format}'
		args = args || {}
		if (args['task'] == null) throw new Error('task is a required parameter')
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.ip.usage': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.ip.{format}'
		args = args || {}
		if (args['task'] == null) throw new Error('task is a required parameter')
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['group'])
			if (args['group']) delete args['group']
		}
		if (url.indexOf('[/group]') !== -1) {
			url = url.replace('[/group]', '/' + args['group'])
			if (args['group']) delete args['group']
		}
		var rgx = new RegExp('\{system\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['system'])
			if (args['system']) delete args['system']
		}
		if (url.indexOf('[/system]') !== -1) {
			url = url.replace('[/system]', '/' + args['system'])
			if (args['system']) delete args['system']
		}
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/group]') !== -1) url = url.replace('[/group]', '')
		if (url.indexOf('[/system]') !== -1) url = url.replace('[/system]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.billing.as.you.go': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.billing.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "current"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['number'] == null) throw new Error('number is a required parameter')
		var rgx = new RegExp('\{number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['number'])
			if (args['number']) delete args['number']
		}
		if (url.indexOf('[/number]') !== -1) {
			url = url.replace('[/number]', '/' + args['number'])
			if (args['number']) delete args['number']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/number]') !== -1) url = url.replace('[/number]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.billing.end.user.invoices': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.billing.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "usage"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['number'] == null) throw new Error('number is a required parameter')
		var rgx = new RegExp('\{number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['number'])
			if (args['number']) delete args['number']
		}
		if (url.indexOf('[/number]') !== -1) {
			url = url.replace('[/number]', '/' + args['number'])
			if (args['number']) delete args['number']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/number]') !== -1) url = url.replace('[/number]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.pending.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.pending.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "list"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.pending.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.pending.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.account.immediate.upgrade': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.account.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "immediate_upgrade"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['package'] == null) throw new Error('package is a required parameter')
		var rgx = new RegExp('\{package\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['package'])
			if (args['package']) delete args['package']
		}
		if (url.indexOf('[/package]') !== -1) {
			url = url.replace('[/package]', '/' + args['package'])
			if (args['package']) delete args['package']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		var rgx = new RegExp('\{ip_group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/ip_group]') !== -1) {
			url = url.replace('[/ip_group]', '/' + args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/package]') !== -1) url = url.replace('[/package]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/ip_group]') !== -1) url = url.replace('[/ip_group]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.account.immediate.downgrade': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.account.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "immediate_downgrade"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['package'] == null) throw new Error('package is a required parameter')
		var rgx = new RegExp('\{package\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['package'])
			if (args['package']) delete args['package']
		}
		if (url.indexOf('[/package]') !== -1) {
			url = url.replace('[/package]', '/' + args['package'])
			if (args['package']) delete args['package']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		var rgx = new RegExp('\{ip_group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/ip_group]') !== -1) {
			url = url.replace('[/ip_group]', '/' + args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/package]') !== -1) url = url.replace('[/package]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/ip_group]') !== -1) url = url.replace('[/ip_group]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.account.immediate.close': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.account.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "immediate_close"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{ip_group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/ip_group]') !== -1) {
			url = url.replace('[/ip_group]', '/' + args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/ip_group]') !== -1) url = url.replace('[/ip_group]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.account.schedulled.upgrade': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.account.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "scheduled_upgrade"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['package'] == null) throw new Error('package is a required parameter')
		var rgx = new RegExp('\{package\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['package'])
			if (args['package']) delete args['package']
		}
		if (url.indexOf('[/package]') !== -1) {
			url = url.replace('[/package]', '/' + args['package'])
			if (args['package']) delete args['package']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		var rgx = new RegExp('\{ip_group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/ip_group]') !== -1) {
			url = url.replace('[/ip_group]', '/' + args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/package]') !== -1) url = url.replace('[/package]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/ip_group]') !== -1) url = url.replace('[/ip_group]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.account.scheduled.downgrade': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.account.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "scheduled_downgrade"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['package'] == null) throw new Error('package is a required parameter')
		var rgx = new RegExp('\{package\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['package'])
			if (args['package']) delete args['package']
		}
		if (url.indexOf('[/package]') !== -1) {
			url = url.replace('[/package]', '/' + args['package'])
			if (args['package']) delete args['package']
		}
		var rgx = new RegExp('\{ip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip'])
			if (args['ip']) delete args['ip']
		}
		if (url.indexOf('[/ip]') !== -1) {
			url = url.replace('[/ip]', '/' + args['ip'])
			if (args['ip']) delete args['ip']
		}
		var rgx = new RegExp('\{ip_group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/ip_group]') !== -1) {
			url = url.replace('[/ip_group]', '/' + args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/package]') !== -1) url = url.replace('[/package]', '')
		if (url.indexOf('[/ip]') !== -1) url = url.replace('[/ip]', '')
		if (url.indexOf('[/ip_group]') !== -1) url = url.replace('[/ip_group]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.account.scheduled.close': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.account.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "scheduled_close"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{ip_group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/ip_group]') !== -1) {
			url = url.replace('[/ip_group]', '/' + args['ip_group'])
			if (args['ip_group']) delete args['ip_group']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/ip_group]') !== -1) url = url.replace('[/ip_group]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.account.overview': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.account.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['task'] == null) args['task'] = "overview"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.packages.view.available': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.packages.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.stats.subuser.statistics': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "stats"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.stats.aggregates': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "stats"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['aggregate'] == null) args['aggregate'] = "1"
		var rgx = new RegExp('\{aggregate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['aggregate'])
			if (args['aggregate']) delete args['aggregate']
		}
		if (url.indexOf('[/aggregate]') !== -1) {
			url = url.replace('[/aggregate]', '/' + args['aggregate'])
			if (args['aggregate']) delete args['aggregate']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/aggregate]') !== -1) url = url.replace('[/aggregate]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.stats.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "stats"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['list'] == null) args['list'] = "true"
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.stats.category.statistics': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "stats"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['category'] == null) throw new Error('category is a required parameter')
		var rgx = new RegExp('\{category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/category]') !== -1) {
			url = url.replace('[/category]', '/' + args['category'])
			if (args['category']) delete args['category']
		}
		var rgx = new RegExp('\{days\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['days'])
			if (args['days']) delete args['days']
		}
		if (url.indexOf('[/days]') !== -1) {
			url = url.replace('[/days]', '/' + args['days'])
			if (args['days']) delete args['days']
		}
		var rgx = new RegExp('\{start_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		if (url.indexOf('[/start_date]') !== -1) {
			url = url.replace('[/start_date]', '/' + args['start_date'])
			if (args['start_date']) delete args['start_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/category]') !== -1) url = url.replace('[/category]', '')
		if (url.indexOf('[/days]') !== -1) url = url.replace('[/days]', '')
		if (url.indexOf('[/start_date]') !== -1) url = url.replace('[/start_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.bounces.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "bounces"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.bounces.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "bounces"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.unsubscribes.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "unsubscribes"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.unsubscribes.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "unsubscribes"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.unsubscribes.add': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "unsubscribes"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "add"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.invalid.emails.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "invalidemails"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.invalid.emails.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "invalidemails"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.spam.reports..get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "spamreports"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.spam.reports.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "spamreports"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.customer.accountlimits.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "retrieve"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.customer.accountlimits.none': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "none"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.customer.accountlimits.resetCredits': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "recurring"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['credits'] == null) throw new Error('credits is a required parameter')
		var rgx = new RegExp('\{credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/credits]') !== -1) {
			url = url.replace('[/credits]', '/' + args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (args['period'] == null) throw new Error('period is a required parameter')
		var rgx = new RegExp('\{period\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['period'])
			if (args['period']) delete args['period']
		}
		if (url.indexOf('[/period]') !== -1) {
			url = url.replace('[/period]', '/' + args['period'])
			if (args['period']) delete args['period']
		}
		var rgx = new RegExp('\{startdate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['startdate'])
			if (args['startdate']) delete args['startdate']
		}
		if (url.indexOf('[/startdate]') !== -1) {
			url = url.replace('[/startdate]', '/' + args['startdate'])
			if (args['startdate']) delete args['startdate']
		}
		var rgx = new RegExp('\{enddate\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['enddate'])
			if (args['enddate']) delete args['enddate']
		}
		if (url.indexOf('[/enddate]') !== -1) {
			url = url.replace('[/enddate]', '/' + args['enddate'])
			if (args['enddate']) delete args['enddate']
		}
		var rgx = new RegExp('\{initial_credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['initial_credits'])
			if (args['initial_credits']) delete args['initial_credits']
		}
		if (url.indexOf('[/initial_credits]') !== -1) {
			url = url.replace('[/initial_credits]', '/' + args['initial_credits'])
			if (args['initial_credits']) delete args['initial_credits']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/credits]') !== -1) url = url.replace('[/credits]', '')
		if (url.indexOf('[/period]') !== -1) url = url.replace('[/period]', '')
		if (url.indexOf('[/startdate]') !== -1) url = url.replace('[/startdate]', '')
		if (url.indexOf('[/enddate]') !== -1) url = url.replace('[/enddate]', '')
		if (url.indexOf('[/initial_credits]') !== -1) url = url.replace('[/initial_credits]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.customer.accountlimits.setCredits': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "total"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['credits'] == null) throw new Error('credits is a required parameter')
		var rgx = new RegExp('\{credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/credits]') !== -1) {
			url = url.replace('[/credits]', '/' + args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/credits]') !== -1) url = url.replace('[/credits]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.customer.accountlimits.customers.incrementCredits': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "increment"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['credits'] == null) throw new Error('credits is a required parameter')
		var rgx = new RegExp('\{credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/credits]') !== -1) {
			url = url.replace('[/credits]', '/' + args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/credits]') !== -1) url = url.replace('[/credits]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.customer.accountlimits.customers.decrementCredits': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "limit"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "decrement"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['credits'] == null) throw new Error('credits is a required parameter')
		var rgx = new RegExp('\{credits\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/credits]') !== -1) {
			url = url.replace('[/credits]', '/' + args['credits'])
			if (args['credits']) delete args['credits']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/credits]') !== -1) url = url.replace('[/credits]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.monitorrecords.create': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "create"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (args['frequency'] == null) throw new Error('frequency is a required parameter')
		var rgx = new RegExp('\{frequency\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['frequency'])
			if (args['frequency']) delete args['frequency']
		}
		if (url.indexOf('[/frequency]') !== -1) {
			url = url.replace('[/frequency]', '/' + args['frequency'])
			if (args['frequency']) delete args['frequency']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/frequency]') !== -1) url = url.replace('[/frequency]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.monitorrecords.edit': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "edit"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{new_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_name'])
			if (args['new_name']) delete args['new_name']
		}
		if (url.indexOf('[/new_name]') !== -1) {
			url = url.replace('[/new_name]', '/' + args['new_name'])
			if (args['new_name']) delete args['new_name']
		}
		var rgx = new RegExp('\{new_email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_email'])
			if (args['new_email']) delete args['new_email']
		}
		if (url.indexOf('[/new_email]') !== -1) {
			url = url.replace('[/new_email]', '/' + args['new_email'])
			if (args['new_email']) delete args['new_email']
		}
		var rgx = new RegExp('\{new_frequency\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['new_frequency'])
			if (args['new_frequency']) delete args['new_frequency']
		}
		if (url.indexOf('[/new_frequency]') !== -1) {
			url = url.replace('[/new_frequency]', '/' + args['new_frequency'])
			if (args['new_frequency']) delete args['new_frequency']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/new_name]') !== -1) url = url.replace('[/new_name]', '')
		if (url.indexOf('[/new_email]') !== -1) url = url.replace('[/new_email]', '')
		if (url.indexOf('[/new_frequency]') !== -1) url = url.replace('[/new_frequency]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.monitorrecords.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.monitorrecords.list': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "list"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.monitorrecords.appendCustomer': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "append"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.monitorrecords.detachCustomer': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "monitor"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "detach"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.automatic.login.get.url': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "geturl"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.event.notification.url.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "eventposturl"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.event.notification.url.set': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "eventposturl"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "set"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.event.notification.url.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "eventposturl"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.authenticate.customer': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "auth"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['password'] == null) throw new Error('password is a required parameter')
		var rgx = new RegExp('\{password\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['password'])
			if (args['password']) delete args['password']
		}
		if (url.indexOf('[/password]') !== -1) {
			url = url.replace('[/password]', '/' + args['password'])
			if (args['password']) delete args['password']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/password]') !== -1) url = url.replace('[/password]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.parse.settings.get': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "parse"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "get"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.parse.settings.set': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "parse"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "set"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (args['spam_check'] == null) args['spam_check'] = "1"
		var rgx = new RegExp('\{spam_check\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/spam_check]') !== -1) {
			url = url.replace('[/spam_check]', '/' + args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		if (url.indexOf('[/spam_check]') !== -1) url = url.replace('[/spam_check]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.parse.settings.update': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "parse"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "update"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (args['spam_check'] == null) args['spam_check'] = "1"
		var rgx = new RegExp('\{spam_check\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/spam_check]') !== -1) {
			url = url.replace('[/spam_check]', '/' + args['spam_check'])
			if (args['spam_check']) delete args['spam_check']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		if (url.indexOf('[/spam_check]') !== -1) url = url.replace('[/spam_check]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.parse.settings.delete': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "parse"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "delete"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['hostname'] == null) throw new Error('hostname is a required parameter')
		var rgx = new RegExp('\{hostname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/hostname]') !== -1) {
			url = url.replace('[/hostname]', '/' + args['hostname'])
			if (args['hostname']) delete args['hostname']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/hostname]') !== -1) url = url.replace('[/hostname]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.filter.getavailable': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "getavailable"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.filter.activate': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "activate"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.filter.deactivate': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "deactivate"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.filter.setup': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "setup"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	},
	'reseller.manageSubuser.filter.getsettings': function(args, opts) {
		var url = 'https://sendgrid.com/apiv2/reseller.manageSubuser.{format}'
		args = args || {}
		if (args['format'] == null) args['format'] = "xml"
		var rgx = new RegExp('\{format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['format'])
			if (args['format']) delete args['format']
		}
		if (url.indexOf('[/format]') !== -1) {
			url = url.replace('[/format]', '/' + args['format'])
			if (args['format']) delete args['format']
		}
		if (args['method'] == null) args['method'] = "apps"
		var rgx = new RegExp('\{method\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['method'])
			if (args['method']) delete args['method']
		}
		if (url.indexOf('[/method]') !== -1) {
			url = url.replace('[/method]', '/' + args['method'])
			if (args['method']) delete args['method']
		}
		if (args['task'] == null) args['task'] = "getsettings"
		var rgx = new RegExp('\{task\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['task'])
			if (args['task']) delete args['task']
		}
		if (url.indexOf('[/task]') !== -1) {
			url = url.replace('[/task]', '/' + args['task'])
			if (args['task']) delete args['task']
		}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/format]') !== -1) url = url.replace('[/format]', '')
		if (url.indexOf('[/method]') !== -1) url = url.replace('[/method]', '')
		if (url.indexOf('[/task]') !== -1) url = url.replace('[/task]', '')
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'sendgrid',url:url,method:'GET',params:args}, opts)
	}
})