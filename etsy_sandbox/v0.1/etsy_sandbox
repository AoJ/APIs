/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'etsy_sandbox'})},
	'getCountry': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/countries/{country_id}'
		args = args || {}
		if (args['country_id'] == null) throw new Error('country_id is a required parameter')
		var rgx = new RegExp('\{country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/country_id]') !== -1) {
			url = url.replace('[/country_id]', '/' + args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/country_id]') !== -1) url = url.replace('[/country_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllCountry': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/countries'
		args = args || {}
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserFavoriteListings': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favorites/listings'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findUserFavoriteListings': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favorites/listings/{listing_id}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'createUserFavoriteListings': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favorites/listings/{listing_id}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'deleteUserFavoriteListings': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favorites/listings/{listing_id}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'findAllUserFavoriteUsers': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favorites/users'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findUserFavoriteUsers': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favorites/users/{target_user_id}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['target_user_id'] == null) throw new Error('target_user_id is a required parameter')
		var rgx = new RegExp('\{target_user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['target_user_id'])
			if (args['target_user_id']) delete args['target_user_id']
		}
		if (url.indexOf('[/target_user_id]') !== -1) {
			url = url.replace('[/target_user_id]', '/' + args['target_user_id'])
			if (args['target_user_id']) delete args['target_user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/target_user_id]') !== -1) url = url.replace('[/target_user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'createUserFavoriteUsers': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favorites/users/{target_user_id}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['target_user_id'] == null) throw new Error('target_user_id is a required parameter')
		var rgx = new RegExp('\{target_user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['target_user_id'])
			if (args['target_user_id']) delete args['target_user_id']
		}
		if (url.indexOf('[/target_user_id]') !== -1) {
			url = url.replace('[/target_user_id]', '/' + args['target_user_id'])
			if (args['target_user_id']) delete args['target_user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/target_user_id]') !== -1) url = url.replace('[/target_user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'deleteUserFavoriteUsers': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favorites/users/{target_user_id}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['target_user_id'] == null) throw new Error('target_user_id is a required parameter')
		var rgx = new RegExp('\{target_user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['target_user_id'])
			if (args['target_user_id']) delete args['target_user_id']
		}
		if (url.indexOf('[/target_user_id]') !== -1) {
			url = url.replace('[/target_user_id]', '/' + args['target_user_id'])
			if (args['target_user_id']) delete args['target_user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/target_user_id]') !== -1) url = url.replace('[/target_user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'findAllFeaturedListingPickerActive': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/pickers/'
		args = args || {}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getFeaturedListingPicker': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/pickers/{featured_listing_picker_id}'
		args = args || {}
		if (args['featured_listing_picker_id'] == null) throw new Error('featured_listing_picker_id is a required parameter')
		var rgx = new RegExp('\{featured_listing_picker_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['featured_listing_picker_id'])
			if (args['featured_listing_picker_id']) delete args['featured_listing_picker_id']
		}
		if (url.indexOf('[/featured_listing_picker_id]') !== -1) {
			url = url.replace('[/featured_listing_picker_id]', '/' + args['featured_listing_picker_id'])
			if (args['featured_listing_picker_id']) delete args['featured_listing_picker_id']
		}
		if (url.indexOf('[/featured_listing_picker_id]') !== -1) url = url.replace('[/featured_listing_picker_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllFeaturedListingPickerFeatured': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/pickers/{featured_listing_picker_id}/featured'
		args = args || {}
		if (args['featured_listing_picker_id'] == null) throw new Error('featured_listing_picker_id is a required parameter')
		var rgx = new RegExp('\{featured_listing_picker_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['featured_listing_picker_id'])
			if (args['featured_listing_picker_id']) delete args['featured_listing_picker_id']
		}
		if (url.indexOf('[/featured_listing_picker_id]') !== -1) {
			url = url.replace('[/featured_listing_picker_id]', '/' + args['featured_listing_picker_id'])
			if (args['featured_listing_picker_id']) delete args['featured_listing_picker_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/featured_listing_picker_id]') !== -1) url = url.replace('[/featured_listing_picker_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllFeaturedListingPickerListings': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/pickers/{featured_listing_picker_id}/listings'
		args = args || {}
		if (args['featured_listing_picker_id'] == null) throw new Error('featured_listing_picker_id is a required parameter')
		var rgx = new RegExp('\{featured_listing_picker_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['featured_listing_picker_id'])
			if (args['featured_listing_picker_id']) delete args['featured_listing_picker_id']
		}
		if (url.indexOf('[/featured_listing_picker_id]') !== -1) {
			url = url.replace('[/featured_listing_picker_id]', '/' + args['featured_listing_picker_id'])
			if (args['featured_listing_picker_id']) delete args['featured_listing_picker_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/featured_listing_picker_id]') !== -1) url = url.replace('[/featured_listing_picker_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllFeaturedListingPickerListingsActive': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/pickers/{featured_listing_picker_id}/listings/active'
		args = args || {}
		if (args['featured_listing_picker_id'] == null) throw new Error('featured_listing_picker_id is a required parameter')
		var rgx = new RegExp('\{featured_listing_picker_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['featured_listing_picker_id'])
			if (args['featured_listing_picker_id']) delete args['featured_listing_picker_id']
		}
		if (url.indexOf('[/featured_listing_picker_id]') !== -1) {
			url = url.replace('[/featured_listing_picker_id]', '/' + args['featured_listing_picker_id'])
			if (args['featured_listing_picker_id']) delete args['featured_listing_picker_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/featured_listing_picker_id]') !== -1) url = url.replace('[/featured_listing_picker_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllFeaturedListing': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/listings/'
		args = args || {}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllFeaturedListingActive': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/listings/active'
		args = args || {}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getFeaturedListing': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/listings/{featured_listing_id}'
		args = args || {}
		if (args['featured_listing_id'] == null) throw new Error('featured_listing_id is a required parameter')
		var rgx = new RegExp('\{featured_listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['featured_listing_id'])
			if (args['featured_listing_id']) delete args['featured_listing_id']
		}
		if (url.indexOf('[/featured_listing_id]') !== -1) {
			url = url.replace('[/featured_listing_id]', '/' + args['featured_listing_id'])
			if (args['featured_listing_id']) delete args['featured_listing_id']
		}
		if (url.indexOf('[/featured_listing_id]') !== -1) url = url.replace('[/featured_listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getFeaturedListingAssociatedPicker': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/listings/{featured_listing_id}/picker'
		args = args || {}
		if (args['featured_listing_id'] == null) throw new Error('featured_listing_id is a required parameter')
		var rgx = new RegExp('\{featured_listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['featured_listing_id'])
			if (args['featured_listing_id']) delete args['featured_listing_id']
		}
		if (url.indexOf('[/featured_listing_id]') !== -1) {
			url = url.replace('[/featured_listing_id]', '/' + args['featured_listing_id'])
			if (args['featured_listing_id']) delete args['featured_listing_id']
		}
		if (url.indexOf('[/featured_listing_id]') !== -1) url = url.replace('[/featured_listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getFeaturedListingListing': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/homepages/listings/{featured_listing_id}/listing'
		args = args || {}
		if (args['featured_listing_id'] == null) throw new Error('featured_listing_id is a required parameter')
		var rgx = new RegExp('\{featured_listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['featured_listing_id'])
			if (args['featured_listing_id']) delete args['featured_listing_id']
		}
		if (url.indexOf('[/featured_listing_id]') !== -1) {
			url = url.replace('[/featured_listing_id]', '/' + args['featured_listing_id'])
			if (args['featured_listing_id']) delete args['featured_listing_id']
		}
		if (url.indexOf('[/featured_listing_id]') !== -1) url = url.replace('[/featured_listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getListingImage': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}/images/{listing_image_id}'
		args = args || {}
		if (args['listing_image_id'] == null) throw new Error('listing_image_id is a required parameter')
		var rgx = new RegExp('\{listing_image_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_image_id'])
			if (args['listing_image_id']) delete args['listing_image_id']
		}
		if (url.indexOf('[/listing_image_id]') !== -1) {
			url = url.replace('[/listing_image_id]', '/' + args['listing_image_id'])
			if (args['listing_image_id']) delete args['listing_image_id']
		}
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_image_id]') !== -1) url = url.replace('[/listing_image_id]', '')
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'uploadListingImage': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}/images'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (args['image'] == null) throw new Error('image is a required parameter')
		var rgx = new RegExp('\{image\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['image'])
			if (args['image']) delete args['image']
		}
		if (url.indexOf('[/image]') !== -1) {
			url = url.replace('[/image]', '/' + args['image'])
			if (args['image']) delete args['image']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		if (url.indexOf('[/image]') !== -1) url = url.replace('[/image]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'deleteListingImage': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}/images/{listing_image_id}'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (args['listing_image_id'] == null) throw new Error('listing_image_id is a required parameter')
		var rgx = new RegExp('\{listing_image_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_image_id'])
			if (args['listing_image_id']) delete args['listing_image_id']
		}
		if (url.indexOf('[/listing_image_id]') !== -1) {
			url = url.replace('[/listing_image_id]', '/' + args['listing_image_id'])
			if (args['listing_image_id']) delete args['listing_image_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		if (url.indexOf('[/listing_image_id]') !== -1) url = url.replace('[/listing_image_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getListing': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllListingImages': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}/images'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllListingFavoredBy': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}/favored-by'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllListingShippingInfo': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}/shipping/info'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getListingPaymentInfo': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}/payments'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllListingActive': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/active'
		args = args || {}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{sort_on\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_on'])
			if (args['sort_on']) delete args['sort_on']
		}
		if (url.indexOf('[/sort_on]') !== -1) {
			url = url.replace('[/sort_on]', '/' + args['sort_on'])
			if (args['sort_on']) delete args['sort_on']
		}
		var rgx = new RegExp('\{sort_order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_order'])
			if (args['sort_order']) delete args['sort_order']
		}
		if (url.indexOf('[/sort_order]') !== -1) {
			url = url.replace('[/sort_order]', '/' + args['sort_order'])
			if (args['sort_order']) delete args['sort_order']
		}
		var rgx = new RegExp('\{min_price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['min_price'])
			if (args['min_price']) delete args['min_price']
		}
		if (url.indexOf('[/min_price]') !== -1) {
			url = url.replace('[/min_price]', '/' + args['min_price'])
			if (args['min_price']) delete args['min_price']
		}
		var rgx = new RegExp('\{max_price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max_price'])
			if (args['max_price']) delete args['max_price']
		}
		if (url.indexOf('[/max_price]') !== -1) {
			url = url.replace('[/max_price]', '/' + args['max_price'])
			if (args['max_price']) delete args['max_price']
		}
		var rgx = new RegExp('\{color\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['color'])
			if (args['color']) delete args['color']
		}
		if (url.indexOf('[/color]') !== -1) {
			url = url.replace('[/color]', '/' + args['color'])
			if (args['color']) delete args['color']
		}
		var rgx = new RegExp('\{color_accuracy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['color_accuracy'])
			if (args['color_accuracy']) delete args['color_accuracy']
		}
		if (url.indexOf('[/color_accuracy]') !== -1) {
			url = url.replace('[/color_accuracy]', '/' + args['color_accuracy'])
			if (args['color_accuracy']) delete args['color_accuracy']
		}
		var rgx = new RegExp('\{tags\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tags'])
			if (args['tags']) delete args['tags']
		}
		if (url.indexOf('[/tags]') !== -1) {
			url = url.replace('[/tags]', '/' + args['tags'])
			if (args['tags']) delete args['tags']
		}
		var rgx = new RegExp('\{materials\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['materials'])
			if (args['materials']) delete args['materials']
		}
		if (url.indexOf('[/materials]') !== -1) {
			url = url.replace('[/materials]', '/' + args['materials'])
			if (args['materials']) delete args['materials']
		}
		var rgx = new RegExp('\{category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/category]') !== -1) {
			url = url.replace('[/category]', '/' + args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/sort_on]') !== -1) url = url.replace('[/sort_on]', '')
		if (url.indexOf('[/sort_order]') !== -1) url = url.replace('[/sort_order]', '')
		if (url.indexOf('[/min_price]') !== -1) url = url.replace('[/min_price]', '')
		if (url.indexOf('[/max_price]') !== -1) url = url.replace('[/max_price]', '')
		if (url.indexOf('[/color]') !== -1) url = url.replace('[/color]', '')
		if (url.indexOf('[/color_accuracy]') !== -1) url = url.replace('[/color_accuracy]', '')
		if (url.indexOf('[/tags]') !== -1) url = url.replace('[/tags]', '')
		if (url.indexOf('[/materials]') !== -1) url = url.replace('[/materials]', '')
		if (url.indexOf('[/category]') !== -1) url = url.replace('[/category]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShopListingsActive': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/listings/active'
		args = args || {}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{sort_on\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_on'])
			if (args['sort_on']) delete args['sort_on']
		}
		if (url.indexOf('[/sort_on]') !== -1) {
			url = url.replace('[/sort_on]', '/' + args['sort_on'])
			if (args['sort_on']) delete args['sort_on']
		}
		var rgx = new RegExp('\{sort_order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_order'])
			if (args['sort_order']) delete args['sort_order']
		}
		if (url.indexOf('[/sort_order]') !== -1) {
			url = url.replace('[/sort_order]', '/' + args['sort_order'])
			if (args['sort_order']) delete args['sort_order']
		}
		var rgx = new RegExp('\{min_price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['min_price'])
			if (args['min_price']) delete args['min_price']
		}
		if (url.indexOf('[/min_price]') !== -1) {
			url = url.replace('[/min_price]', '/' + args['min_price'])
			if (args['min_price']) delete args['min_price']
		}
		var rgx = new RegExp('\{max_price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max_price'])
			if (args['max_price']) delete args['max_price']
		}
		if (url.indexOf('[/max_price]') !== -1) {
			url = url.replace('[/max_price]', '/' + args['max_price'])
			if (args['max_price']) delete args['max_price']
		}
		var rgx = new RegExp('\{color\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['color'])
			if (args['color']) delete args['color']
		}
		if (url.indexOf('[/color]') !== -1) {
			url = url.replace('[/color]', '/' + args['color'])
			if (args['color']) delete args['color']
		}
		var rgx = new RegExp('\{color_accuracy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['color_accuracy'])
			if (args['color_accuracy']) delete args['color_accuracy']
		}
		if (url.indexOf('[/color_accuracy]') !== -1) {
			url = url.replace('[/color_accuracy]', '/' + args['color_accuracy'])
			if (args['color_accuracy']) delete args['color_accuracy']
		}
		var rgx = new RegExp('\{tags\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tags'])
			if (args['tags']) delete args['tags']
		}
		if (url.indexOf('[/tags]') !== -1) {
			url = url.replace('[/tags]', '/' + args['tags'])
			if (args['tags']) delete args['tags']
		}
		var rgx = new RegExp('\{materials\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['materials'])
			if (args['materials']) delete args['materials']
		}
		if (url.indexOf('[/materials]') !== -1) {
			url = url.replace('[/materials]', '/' + args['materials'])
			if (args['materials']) delete args['materials']
		}
		var rgx = new RegExp('\{category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/category]') !== -1) {
			url = url.replace('[/category]', '/' + args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/sort_on]') !== -1) url = url.replace('[/sort_on]', '')
		if (url.indexOf('[/sort_order]') !== -1) url = url.replace('[/sort_order]', '')
		if (url.indexOf('[/min_price]') !== -1) url = url.replace('[/min_price]', '')
		if (url.indexOf('[/max_price]') !== -1) url = url.replace('[/max_price]', '')
		if (url.indexOf('[/color]') !== -1) url = url.replace('[/color]', '')
		if (url.indexOf('[/color_accuracy]') !== -1) url = url.replace('[/color_accuracy]', '')
		if (url.indexOf('[/tags]') !== -1) url = url.replace('[/tags]', '')
		if (url.indexOf('[/materials]') !== -1) url = url.replace('[/materials]', '')
		if (url.indexOf('[/category]') !== -1) url = url.replace('[/category]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'createListing': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings'
		args = args || {}
		if (args['quantity'] == null) throw new Error('quantity is a required parameter')
		var rgx = new RegExp('\{quantity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quantity'])
			if (args['quantity']) delete args['quantity']
		}
		if (url.indexOf('[/quantity]') !== -1) {
			url = url.replace('[/quantity]', '/' + args['quantity'])
			if (args['quantity']) delete args['quantity']
		}
		if (args['title'] == null) throw new Error('title is a required parameter')
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		if (args['description'] == null) throw new Error('description is a required parameter')
		var rgx = new RegExp('\{description\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['description'])
			if (args['description']) delete args['description']
		}
		if (url.indexOf('[/description]') !== -1) {
			url = url.replace('[/description]', '/' + args['description'])
			if (args['description']) delete args['description']
		}
		if (args['price'] == null) throw new Error('price is a required parameter')
		var rgx = new RegExp('\{price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['price'])
			if (args['price']) delete args['price']
		}
		if (url.indexOf('[/price]') !== -1) {
			url = url.replace('[/price]', '/' + args['price'])
			if (args['price']) delete args['price']
		}
		var rgx = new RegExp('\{materials\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['materials'])
			if (args['materials']) delete args['materials']
		}
		if (url.indexOf('[/materials]') !== -1) {
			url = url.replace('[/materials]', '/' + args['materials'])
			if (args['materials']) delete args['materials']
		}
		if (args['tags'] == null) throw new Error('tags is a required parameter')
		var rgx = new RegExp('\{tags\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tags'])
			if (args['tags']) delete args['tags']
		}
		if (url.indexOf('[/tags]') !== -1) {
			url = url.replace('[/tags]', '/' + args['tags'])
			if (args['tags']) delete args['tags']
		}
		if (args['shipping_template_id'] == null) throw new Error('shipping_template_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) {
			url = url.replace('[/shipping_template_id]', '/' + args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		var rgx = new RegExp('\{shop_section_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		if (url.indexOf('[/shop_section_id]') !== -1) {
			url = url.replace('[/shop_section_id]', '/' + args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		if (url.indexOf('[/quantity]') !== -1) url = url.replace('[/quantity]', '')
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/description]') !== -1) url = url.replace('[/description]', '')
		if (url.indexOf('[/price]') !== -1) url = url.replace('[/price]', '')
		if (url.indexOf('[/materials]') !== -1) url = url.replace('[/materials]', '')
		if (url.indexOf('[/tags]') !== -1) url = url.replace('[/tags]', '')
		if (url.indexOf('[/shipping_template_id]') !== -1) url = url.replace('[/shipping_template_id]', '')
		if (url.indexOf('[/shop_section_id]') !== -1) url = url.replace('[/shop_section_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'updateListing': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		var rgx = new RegExp('\{quantity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['quantity'])
			if (args['quantity']) delete args['quantity']
		}
		if (url.indexOf('[/quantity]') !== -1) {
			url = url.replace('[/quantity]', '/' + args['quantity'])
			if (args['quantity']) delete args['quantity']
		}
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		var rgx = new RegExp('\{description\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['description'])
			if (args['description']) delete args['description']
		}
		if (url.indexOf('[/description]') !== -1) {
			url = url.replace('[/description]', '/' + args['description'])
			if (args['description']) delete args['description']
		}
		var rgx = new RegExp('\{price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['price'])
			if (args['price']) delete args['price']
		}
		if (url.indexOf('[/price]') !== -1) {
			url = url.replace('[/price]', '/' + args['price'])
			if (args['price']) delete args['price']
		}
		var rgx = new RegExp('\{materials\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['materials'])
			if (args['materials']) delete args['materials']
		}
		if (url.indexOf('[/materials]') !== -1) {
			url = url.replace('[/materials]', '/' + args['materials'])
			if (args['materials']) delete args['materials']
		}
		var rgx = new RegExp('\{renew\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['renew'])
			if (args['renew']) delete args['renew']
		}
		if (url.indexOf('[/renew]') !== -1) {
			url = url.replace('[/renew]', '/' + args['renew'])
			if (args['renew']) delete args['renew']
		}
		var rgx = new RegExp('\{tags\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tags'])
			if (args['tags']) delete args['tags']
		}
		if (url.indexOf('[/tags]') !== -1) {
			url = url.replace('[/tags]', '/' + args['tags'])
			if (args['tags']) delete args['tags']
		}
		var rgx = new RegExp('\{shipping_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) {
			url = url.replace('[/shipping_template_id]', '/' + args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		var rgx = new RegExp('\{shop_section_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		if (url.indexOf('[/shop_section_id]') !== -1) {
			url = url.replace('[/shop_section_id]', '/' + args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		if (url.indexOf('[/quantity]') !== -1) url = url.replace('[/quantity]', '')
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/description]') !== -1) url = url.replace('[/description]', '')
		if (url.indexOf('[/price]') !== -1) url = url.replace('[/price]', '')
		if (url.indexOf('[/materials]') !== -1) url = url.replace('[/materials]', '')
		if (url.indexOf('[/renew]') !== -1) url = url.replace('[/renew]', '')
		if (url.indexOf('[/tags]') !== -1) url = url.replace('[/tags]', '')
		if (url.indexOf('[/shipping_template_id]') !== -1) url = url.replace('[/shipping_template_id]', '')
		if (url.indexOf('[/shop_section_id]') !== -1) url = url.replace('[/shop_section_id]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteListing': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getOrder': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/orders/{order_id}'
		args = args || {}
		if (args['order_id'] == null) throw new Error('order_id is a required parameter')
		var rgx = new RegExp('\{order_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order_id'])
			if (args['order_id']) delete args['order_id']
		}
		if (url.indexOf('[/order_id]') !== -1) {
			url = url.replace('[/order_id]', '/' + args['order_id'])
			if (args['order_id']) delete args['order_id']
		}
		if (url.indexOf('[/order_id]') !== -1) url = url.replace('[/order_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllOrderReceipts': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/orders/{order_id}/receipts'
		args = args || {}
		if (args['order_id'] == null) throw new Error('order_id is a required parameter')
		var rgx = new RegExp('\{order_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order_id'])
			if (args['order_id']) delete args['order_id']
		}
		if (url.indexOf('[/order_id]') !== -1) {
			url = url.replace('[/order_id]', '/' + args['order_id'])
			if (args['order_id']) delete args['order_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/order_id]') !== -1) url = url.replace('[/order_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getReceipt': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/receipts/{receipt_id}'
		args = args || {}
		if (args['receipt_id'] == null) throw new Error('receipt_id is a required parameter')
		var rgx = new RegExp('\{receipt_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['receipt_id'])
			if (args['receipt_id']) delete args['receipt_id']
		}
		if (url.indexOf('[/receipt_id]') !== -1) {
			url = url.replace('[/receipt_id]', '/' + args['receipt_id'])
			if (args['receipt_id']) delete args['receipt_id']
		}
		if (url.indexOf('[/receipt_id]') !== -1) url = url.replace('[/receipt_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllReceiptTransactions': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/receipts/{receipt_id}/transactions'
		args = args || {}
		if (args['receipt_id'] == null) throw new Error('receipt_id is a required parameter')
		var rgx = new RegExp('\{receipt_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['receipt_id'])
			if (args['receipt_id']) delete args['receipt_id']
		}
		if (url.indexOf('[/receipt_id]') !== -1) {
			url = url.replace('[/receipt_id]', '/' + args['receipt_id'])
			if (args['receipt_id']) delete args['receipt_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/receipt_id]') !== -1) url = url.replace('[/receipt_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'updateReceipt': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/receipts/{receipt_id}'
		args = args || {}
		if (args['receipt_id'] == null) throw new Error('receipt_id is a required parameter')
		var rgx = new RegExp('\{receipt_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['receipt_id'])
			if (args['receipt_id']) delete args['receipt_id']
		}
		if (url.indexOf('[/receipt_id]') !== -1) {
			url = url.replace('[/receipt_id]', '/' + args['receipt_id'])
			if (args['receipt_id']) delete args['receipt_id']
		}
		var rgx = new RegExp('\{was_paid\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['was_paid'])
			if (args['was_paid']) delete args['was_paid']
		}
		if (url.indexOf('[/was_paid]') !== -1) {
			url = url.replace('[/was_paid]', '/' + args['was_paid'])
			if (args['was_paid']) delete args['was_paid']
		}
		var rgx = new RegExp('\{was_shipped\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['was_shipped'])
			if (args['was_shipped']) delete args['was_shipped']
		}
		if (url.indexOf('[/was_shipped]') !== -1) {
			url = url.replace('[/was_shipped]', '/' + args['was_shipped'])
			if (args['was_shipped']) delete args['was_shipped']
		}
		var rgx = new RegExp('\{message_from_seller\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['message_from_seller'])
			if (args['message_from_seller']) delete args['message_from_seller']
		}
		if (url.indexOf('[/message_from_seller]') !== -1) {
			url = url.replace('[/message_from_seller]', '/' + args['message_from_seller'])
			if (args['message_from_seller']) delete args['message_from_seller']
		}
		var rgx = new RegExp('\{message_from_buyer\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['message_from_buyer'])
			if (args['message_from_buyer']) delete args['message_from_buyer']
		}
		if (url.indexOf('[/message_from_buyer]') !== -1) {
			url = url.replace('[/message_from_buyer]', '/' + args['message_from_buyer'])
			if (args['message_from_buyer']) delete args['message_from_buyer']
		}
		if (url.indexOf('[/receipt_id]') !== -1) url = url.replace('[/receipt_id]', '')
		if (url.indexOf('[/was_paid]') !== -1) url = url.replace('[/was_paid]', '')
		if (url.indexOf('[/was_shipped]') !== -1) url = url.replace('[/was_shipped]', '')
		if (url.indexOf('[/message_from_seller]') !== -1) url = url.replace('[/message_from_seller]', '')
		if (url.indexOf('[/message_from_buyer]') !== -1) url = url.replace('[/message_from_buyer]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'getRecommendedListings': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/recommended_listings'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{excluded_listing_ids\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['excluded_listing_ids'])
			if (args['excluded_listing_ids']) delete args['excluded_listing_ids']
		}
		if (url.indexOf('[/excluded_listing_ids]') !== -1) {
			url = url.replace('[/excluded_listing_ids]', '/' + args['excluded_listing_ids'])
			if (args['excluded_listing_ids']) delete args['excluded_listing_ids']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/excluded_listing_ids]') !== -1) url = url.replace('[/excluded_listing_ids]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'registerRecommendedListingRejects': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/recommended_listings/rejects/{listing_ids}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['listing_ids'] == null) throw new Error('listing_ids is a required parameter')
		var rgx = new RegExp('\{listing_ids\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_ids'])
			if (args['listing_ids']) delete args['listing_ids']
		}
		if (url.indexOf('[/listing_ids]') !== -1) {
			url = url.replace('[/listing_ids]', '/' + args['listing_ids'])
			if (args['listing_ids']) delete args['listing_ids']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/listing_ids]') !== -1) url = url.replace('[/listing_ids]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'registerRecommendedListingViews': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/recommended_listings/views/{listing_ids}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['listing_ids'] == null) throw new Error('listing_ids is a required parameter')
		var rgx = new RegExp('\{listing_ids\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_ids'])
			if (args['listing_ids']) delete args['listing_ids']
		}
		if (url.indexOf('[/listing_ids]') !== -1) {
			url = url.replace('[/listing_ids]', '/' + args['listing_ids'])
			if (args['listing_ids']) delete args['listing_ids']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/listing_ids]') !== -1) url = url.replace('[/listing_ids]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'getRegion': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/regions/{region_id}'
		args = args || {}
		if (args['region_id'] == null) throw new Error('region_id is a required parameter')
		var rgx = new RegExp('\{region_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['region_id'])
			if (args['region_id']) delete args['region_id']
		}
		if (url.indexOf('[/region_id]') !== -1) {
			url = url.replace('[/region_id]', '/' + args['region_id'])
			if (args['region_id']) delete args['region_id']
		}
		if (url.indexOf('[/region_id]') !== -1) url = url.replace('[/region_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllRegion': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/regions'
		args = args || {}
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getShippingInfo': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/info/{shipping_info_id}'
		args = args || {}
		if (args['shipping_info_id'] == null) throw new Error('shipping_info_id is a required parameter')
		var rgx = new RegExp('\{shipping_info_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_info_id'])
			if (args['shipping_info_id']) delete args['shipping_info_id']
		}
		if (url.indexOf('[/shipping_info_id]') !== -1) {
			url = url.replace('[/shipping_info_id]', '/' + args['shipping_info_id'])
			if (args['shipping_info_id']) delete args['shipping_info_id']
		}
		if (url.indexOf('[/shipping_info_id]') !== -1) url = url.replace('[/shipping_info_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'createShippingInfo': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/listings/{listing_id}/shipping/info'
		args = args || {}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (args['origin_country_id'] == null) throw new Error('origin_country_id is a required parameter')
		var rgx = new RegExp('\{origin_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['origin_country_id'])
			if (args['origin_country_id']) delete args['origin_country_id']
		}
		if (url.indexOf('[/origin_country_id]') !== -1) {
			url = url.replace('[/origin_country_id]', '/' + args['origin_country_id'])
			if (args['origin_country_id']) delete args['origin_country_id']
		}
		var rgx = new RegExp('\{destination_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		if (url.indexOf('[/destination_country_id]') !== -1) {
			url = url.replace('[/destination_country_id]', '/' + args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		if (args['primary_cost'] == null) throw new Error('primary_cost is a required parameter')
		var rgx = new RegExp('\{primary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		if (url.indexOf('[/primary_cost]') !== -1) {
			url = url.replace('[/primary_cost]', '/' + args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		if (args['secondary_cost'] == null) throw new Error('secondary_cost is a required parameter')
		var rgx = new RegExp('\{secondary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		if (url.indexOf('[/secondary_cost]') !== -1) {
			url = url.replace('[/secondary_cost]', '/' + args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		var rgx = new RegExp('\{region_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['region_id'])
			if (args['region_id']) delete args['region_id']
		}
		if (url.indexOf('[/region_id]') !== -1) {
			url = url.replace('[/region_id]', '/' + args['region_id'])
			if (args['region_id']) delete args['region_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		if (url.indexOf('[/origin_country_id]') !== -1) url = url.replace('[/origin_country_id]', '')
		if (url.indexOf('[/destination_country_id]') !== -1) url = url.replace('[/destination_country_id]', '')
		if (url.indexOf('[/primary_cost]') !== -1) url = url.replace('[/primary_cost]', '')
		if (url.indexOf('[/secondary_cost]') !== -1) url = url.replace('[/secondary_cost]', '')
		if (url.indexOf('[/region_id]') !== -1) url = url.replace('[/region_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'updateShippingInfo': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/info/{shipping_info_id}'
		args = args || {}
		if (args['shipping_info_id'] == null) throw new Error('shipping_info_id is a required parameter')
		var rgx = new RegExp('\{shipping_info_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_info_id'])
			if (args['shipping_info_id']) delete args['shipping_info_id']
		}
		if (url.indexOf('[/shipping_info_id]') !== -1) {
			url = url.replace('[/shipping_info_id]', '/' + args['shipping_info_id'])
			if (args['shipping_info_id']) delete args['shipping_info_id']
		}
		var rgx = new RegExp('\{origin_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['origin_country_id'])
			if (args['origin_country_id']) delete args['origin_country_id']
		}
		if (url.indexOf('[/origin_country_id]') !== -1) {
			url = url.replace('[/origin_country_id]', '/' + args['origin_country_id'])
			if (args['origin_country_id']) delete args['origin_country_id']
		}
		var rgx = new RegExp('\{destination_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		if (url.indexOf('[/destination_country_id]') !== -1) {
			url = url.replace('[/destination_country_id]', '/' + args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		var rgx = new RegExp('\{primary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		if (url.indexOf('[/primary_cost]') !== -1) {
			url = url.replace('[/primary_cost]', '/' + args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		var rgx = new RegExp('\{secondary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		if (url.indexOf('[/secondary_cost]') !== -1) {
			url = url.replace('[/secondary_cost]', '/' + args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		var rgx = new RegExp('\{region_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['region_id'])
			if (args['region_id']) delete args['region_id']
		}
		if (url.indexOf('[/region_id]') !== -1) {
			url = url.replace('[/region_id]', '/' + args['region_id'])
			if (args['region_id']) delete args['region_id']
		}
		if (url.indexOf('[/shipping_info_id]') !== -1) url = url.replace('[/shipping_info_id]', '')
		if (url.indexOf('[/origin_country_id]') !== -1) url = url.replace('[/origin_country_id]', '')
		if (url.indexOf('[/destination_country_id]') !== -1) url = url.replace('[/destination_country_id]', '')
		if (url.indexOf('[/primary_cost]') !== -1) url = url.replace('[/primary_cost]', '')
		if (url.indexOf('[/secondary_cost]') !== -1) url = url.replace('[/secondary_cost]', '')
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		if (url.indexOf('[/region_id]') !== -1) url = url.replace('[/region_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteShippingInfo': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/info/{shipping_info_id}'
		args = args || {}
		if (args['shipping_info_id'] == null) throw new Error('shipping_info_id is a required parameter')
		var rgx = new RegExp('\{shipping_info_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_info_id'])
			if (args['shipping_info_id']) delete args['shipping_info_id']
		}
		if (url.indexOf('[/shipping_info_id]') !== -1) {
			url = url.replace('[/shipping_info_id]', '/' + args['shipping_info_id'])
			if (args['shipping_info_id']) delete args['shipping_info_id']
		}
		if (url.indexOf('[/shipping_info_id]') !== -1) url = url.replace('[/shipping_info_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getShippingTemplateEntry': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates/entries/{shipping_template_entry_id}'
		args = args || {}
		if (args['shipping_template_entry_id'] == null) throw new Error('shipping_template_entry_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_entry_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_entry_id'])
			if (args['shipping_template_entry_id']) delete args['shipping_template_entry_id']
		}
		if (url.indexOf('[/shipping_template_entry_id]') !== -1) {
			url = url.replace('[/shipping_template_entry_id]', '/' + args['shipping_template_entry_id'])
			if (args['shipping_template_entry_id']) delete args['shipping_template_entry_id']
		}
		if (url.indexOf('[/shipping_template_entry_id]') !== -1) url = url.replace('[/shipping_template_entry_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'createShippingTemplateEntry': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates/entries'
		args = args || {}
		if (args['shipping_template_id'] == null) throw new Error('shipping_template_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) {
			url = url.replace('[/shipping_template_id]', '/' + args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		var rgx = new RegExp('\{destination_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		if (url.indexOf('[/destination_country_id]') !== -1) {
			url = url.replace('[/destination_country_id]', '/' + args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		if (args['primary_cost'] == null) throw new Error('primary_cost is a required parameter')
		var rgx = new RegExp('\{primary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		if (url.indexOf('[/primary_cost]') !== -1) {
			url = url.replace('[/primary_cost]', '/' + args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		if (args['secondary_cost'] == null) throw new Error('secondary_cost is a required parameter')
		var rgx = new RegExp('\{secondary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		if (url.indexOf('[/secondary_cost]') !== -1) {
			url = url.replace('[/secondary_cost]', '/' + args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		var rgx = new RegExp('\{destination_region_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['destination_region_id'])
			if (args['destination_region_id']) delete args['destination_region_id']
		}
		if (url.indexOf('[/destination_region_id]') !== -1) {
			url = url.replace('[/destination_region_id]', '/' + args['destination_region_id'])
			if (args['destination_region_id']) delete args['destination_region_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) url = url.replace('[/shipping_template_id]', '')
		if (url.indexOf('[/destination_country_id]') !== -1) url = url.replace('[/destination_country_id]', '')
		if (url.indexOf('[/primary_cost]') !== -1) url = url.replace('[/primary_cost]', '')
		if (url.indexOf('[/secondary_cost]') !== -1) url = url.replace('[/secondary_cost]', '')
		if (url.indexOf('[/destination_region_id]') !== -1) url = url.replace('[/destination_region_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'updateShippingTemplateEntry': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates/entries/{shipping_template_entry_id}'
		args = args || {}
		if (args['shipping_template_entry_id'] == null) throw new Error('shipping_template_entry_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_entry_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_entry_id'])
			if (args['shipping_template_entry_id']) delete args['shipping_template_entry_id']
		}
		if (url.indexOf('[/shipping_template_entry_id]') !== -1) {
			url = url.replace('[/shipping_template_entry_id]', '/' + args['shipping_template_entry_id'])
			if (args['shipping_template_entry_id']) delete args['shipping_template_entry_id']
		}
		var rgx = new RegExp('\{destination_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		if (url.indexOf('[/destination_country_id]') !== -1) {
			url = url.replace('[/destination_country_id]', '/' + args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		var rgx = new RegExp('\{primary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		if (url.indexOf('[/primary_cost]') !== -1) {
			url = url.replace('[/primary_cost]', '/' + args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		var rgx = new RegExp('\{secondary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		if (url.indexOf('[/secondary_cost]') !== -1) {
			url = url.replace('[/secondary_cost]', '/' + args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		if (url.indexOf('[/shipping_template_entry_id]') !== -1) url = url.replace('[/shipping_template_entry_id]', '')
		if (url.indexOf('[/destination_country_id]') !== -1) url = url.replace('[/destination_country_id]', '')
		if (url.indexOf('[/primary_cost]') !== -1) url = url.replace('[/primary_cost]', '')
		if (url.indexOf('[/secondary_cost]') !== -1) url = url.replace('[/secondary_cost]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteShippingTemplateEntry': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates/entries/{shipping_template_entry_id}'
		args = args || {}
		if (args['shipping_template_entry_id'] == null) throw new Error('shipping_template_entry_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_entry_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_entry_id'])
			if (args['shipping_template_entry_id']) delete args['shipping_template_entry_id']
		}
		if (url.indexOf('[/shipping_template_entry_id]') !== -1) {
			url = url.replace('[/shipping_template_entry_id]', '/' + args['shipping_template_entry_id'])
			if (args['shipping_template_entry_id']) delete args['shipping_template_entry_id']
		}
		if (url.indexOf('[/shipping_template_entry_id]') !== -1) url = url.replace('[/shipping_template_entry_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getShippingTemplate': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates/{shipping_template_id}'
		args = args || {}
		if (args['shipping_template_id'] == null) throw new Error('shipping_template_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) {
			url = url.replace('[/shipping_template_id]', '/' + args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) url = url.replace('[/shipping_template_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShippingTemplateEntries': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates/{shipping_template_id}/entries'
		args = args || {}
		if (args['shipping_template_id'] == null) throw new Error('shipping_template_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) {
			url = url.replace('[/shipping_template_id]', '/' + args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) url = url.replace('[/shipping_template_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'deleteShippingTemplate': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates/{shipping_template_id}'
		args = args || {}
		if (args['shipping_template_id'] == null) throw new Error('shipping_template_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) {
			url = url.replace('[/shipping_template_id]', '/' + args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) url = url.replace('[/shipping_template_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'createShippingTemplate': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates'
		args = args || {}
		if (args['title'] == null) throw new Error('title is a required parameter')
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		if (args['origin_country_id'] == null) throw new Error('origin_country_id is a required parameter')
		var rgx = new RegExp('\{origin_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['origin_country_id'])
			if (args['origin_country_id']) delete args['origin_country_id']
		}
		if (url.indexOf('[/origin_country_id]') !== -1) {
			url = url.replace('[/origin_country_id]', '/' + args['origin_country_id'])
			if (args['origin_country_id']) delete args['origin_country_id']
		}
		var rgx = new RegExp('\{destination_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		if (url.indexOf('[/destination_country_id]') !== -1) {
			url = url.replace('[/destination_country_id]', '/' + args['destination_country_id'])
			if (args['destination_country_id']) delete args['destination_country_id']
		}
		if (args['primary_cost'] == null) throw new Error('primary_cost is a required parameter')
		var rgx = new RegExp('\{primary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		if (url.indexOf('[/primary_cost]') !== -1) {
			url = url.replace('[/primary_cost]', '/' + args['primary_cost'])
			if (args['primary_cost']) delete args['primary_cost']
		}
		if (args['secondary_cost'] == null) throw new Error('secondary_cost is a required parameter')
		var rgx = new RegExp('\{secondary_cost\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		if (url.indexOf('[/secondary_cost]') !== -1) {
			url = url.replace('[/secondary_cost]', '/' + args['secondary_cost'])
			if (args['secondary_cost']) delete args['secondary_cost']
		}
		var rgx = new RegExp('\{destination_region_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['destination_region_id'])
			if (args['destination_region_id']) delete args['destination_region_id']
		}
		if (url.indexOf('[/destination_region_id]') !== -1) {
			url = url.replace('[/destination_region_id]', '/' + args['destination_region_id'])
			if (args['destination_region_id']) delete args['destination_region_id']
		}
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/origin_country_id]') !== -1) url = url.replace('[/origin_country_id]', '')
		if (url.indexOf('[/destination_country_id]') !== -1) url = url.replace('[/destination_country_id]', '')
		if (url.indexOf('[/primary_cost]') !== -1) url = url.replace('[/primary_cost]', '')
		if (url.indexOf('[/secondary_cost]') !== -1) url = url.replace('[/secondary_cost]', '')
		if (url.indexOf('[/destination_region_id]') !== -1) url = url.replace('[/destination_region_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'updateShippingTemplate': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shipping/templates/{shipping_template_id}'
		args = args || {}
		if (args['shipping_template_id'] == null) throw new Error('shipping_template_id is a required parameter')
		var rgx = new RegExp('\{shipping_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) {
			url = url.replace('[/shipping_template_id]', '/' + args['shipping_template_id'])
			if (args['shipping_template_id']) delete args['shipping_template_id']
		}
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		var rgx = new RegExp('\{origin_country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['origin_country_id'])
			if (args['origin_country_id']) delete args['origin_country_id']
		}
		if (url.indexOf('[/origin_country_id]') !== -1) {
			url = url.replace('[/origin_country_id]', '/' + args['origin_country_id'])
			if (args['origin_country_id']) delete args['origin_country_id']
		}
		if (url.indexOf('[/shipping_template_id]') !== -1) url = url.replace('[/shipping_template_id]', '')
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/origin_country_id]') !== -1) url = url.replace('[/origin_country_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'getShop': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShopReceipts': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/receipts'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShopTransactions': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/transactions'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShopSections': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/sections'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShops': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops'
		args = args || {}
		var rgx = new RegExp('\{shop_name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_name'])
			if (args['shop_name']) delete args['shop_name']
		}
		if (url.indexOf('[/shop_name]') !== -1) {
			url = url.replace('[/shop_name]', '/' + args['shop_name'])
			if (args['shop_name']) delete args['shop_name']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/shop_name]') !== -1) url = url.replace('[/shop_name]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShopListingsFeatured': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/listings/featured'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShopListingsInactive': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/listings/inactive'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllShopListingsExpired': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/listings/expired'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getShopListingInactive': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/listings/inactive/{listing_id}'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getShopListingExpired': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/listings/expired/{listing_id}'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (args['listing_id'] == null) throw new Error('listing_id is a required parameter')
		var rgx = new RegExp('\{listing_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/listing_id]') !== -1) {
			url = url.replace('[/listing_id]', '/' + args['listing_id'])
			if (args['listing_id']) delete args['listing_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/listing_id]') !== -1) url = url.replace('[/listing_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'uploadShopBanner': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/appearance/banner'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (args['image'] == null) throw new Error('image is a required parameter')
		var rgx = new RegExp('\{image\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['image'])
			if (args['image']) delete args['image']
		}
		if (url.indexOf('[/image]') !== -1) {
			url = url.replace('[/image]', '/' + args['image'])
			if (args['image']) delete args['image']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/image]') !== -1) url = url.replace('[/image]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'deleteShopBanner': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}/appearance/banner/{shop_banner_id}'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (args['shop_banner_id'] == null) throw new Error('shop_banner_id is a required parameter')
		var rgx = new RegExp('\{shop_banner_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_banner_id'])
			if (args['shop_banner_id']) delete args['shop_banner_id']
		}
		if (url.indexOf('[/shop_banner_id]') !== -1) {
			url = url.replace('[/shop_banner_id]', '/' + args['shop_banner_id'])
			if (args['shop_banner_id']) delete args['shop_banner_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/shop_banner_id]') !== -1) url = url.replace('[/shop_banner_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'updateShop': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/shops/{shop_id}'
		args = args || {}
		if (args['shop_id'] == null) throw new Error('shop_id is a required parameter')
		var rgx = new RegExp('\{shop_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		if (url.indexOf('[/shop_id]') !== -1) {
			url = url.replace('[/shop_id]', '/' + args['shop_id'])
			if (args['shop_id']) delete args['shop_id']
		}
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		var rgx = new RegExp('\{announcement\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['announcement'])
			if (args['announcement']) delete args['announcement']
		}
		if (url.indexOf('[/announcement]') !== -1) {
			url = url.replace('[/announcement]', '/' + args['announcement'])
			if (args['announcement']) delete args['announcement']
		}
		var rgx = new RegExp('\{is_refusing_alchemy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['is_refusing_alchemy'])
			if (args['is_refusing_alchemy']) delete args['is_refusing_alchemy']
		}
		if (url.indexOf('[/is_refusing_alchemy]') !== -1) {
			url = url.replace('[/is_refusing_alchemy]', '/' + args['is_refusing_alchemy'])
			if (args['is_refusing_alchemy']) delete args['is_refusing_alchemy']
		}
		var rgx = new RegExp('\{alchemy_message\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['alchemy_message'])
			if (args['alchemy_message']) delete args['alchemy_message']
		}
		if (url.indexOf('[/alchemy_message]') !== -1) {
			url = url.replace('[/alchemy_message]', '/' + args['alchemy_message'])
			if (args['alchemy_message']) delete args['alchemy_message']
		}
		var rgx = new RegExp('\{sale_message\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sale_message'])
			if (args['sale_message']) delete args['sale_message']
		}
		if (url.indexOf('[/sale_message]') !== -1) {
			url = url.replace('[/sale_message]', '/' + args['sale_message'])
			if (args['sale_message']) delete args['sale_message']
		}
		var rgx = new RegExp('\{policy_welcome\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['policy_welcome'])
			if (args['policy_welcome']) delete args['policy_welcome']
		}
		if (url.indexOf('[/policy_welcome]') !== -1) {
			url = url.replace('[/policy_welcome]', '/' + args['policy_welcome'])
			if (args['policy_welcome']) delete args['policy_welcome']
		}
		var rgx = new RegExp('\{policy_payment\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['policy_payment'])
			if (args['policy_payment']) delete args['policy_payment']
		}
		if (url.indexOf('[/policy_payment]') !== -1) {
			url = url.replace('[/policy_payment]', '/' + args['policy_payment'])
			if (args['policy_payment']) delete args['policy_payment']
		}
		var rgx = new RegExp('\{policy_shipping\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['policy_shipping'])
			if (args['policy_shipping']) delete args['policy_shipping']
		}
		if (url.indexOf('[/policy_shipping]') !== -1) {
			url = url.replace('[/policy_shipping]', '/' + args['policy_shipping'])
			if (args['policy_shipping']) delete args['policy_shipping']
		}
		var rgx = new RegExp('\{policy_refunds\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['policy_refunds'])
			if (args['policy_refunds']) delete args['policy_refunds']
		}
		if (url.indexOf('[/policy_refunds]') !== -1) {
			url = url.replace('[/policy_refunds]', '/' + args['policy_refunds'])
			if (args['policy_refunds']) delete args['policy_refunds']
		}
		var rgx = new RegExp('\{policy_additional\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['policy_additional'])
			if (args['policy_additional']) delete args['policy_additional']
		}
		if (url.indexOf('[/policy_additional]') !== -1) {
			url = url.replace('[/policy_additional]', '/' + args['policy_additional'])
			if (args['policy_additional']) delete args['policy_additional']
		}
		if (url.indexOf('[/shop_id]') !== -1) url = url.replace('[/shop_id]', '')
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/announcement]') !== -1) url = url.replace('[/announcement]', '')
		if (url.indexOf('[/is_refusing_alchemy]') !== -1) url = url.replace('[/is_refusing_alchemy]', '')
		if (url.indexOf('[/alchemy_message]') !== -1) url = url.replace('[/alchemy_message]', '')
		if (url.indexOf('[/sale_message]') !== -1) url = url.replace('[/sale_message]', '')
		if (url.indexOf('[/policy_welcome]') !== -1) url = url.replace('[/policy_welcome]', '')
		if (url.indexOf('[/policy_payment]') !== -1) url = url.replace('[/policy_payment]', '')
		if (url.indexOf('[/policy_shipping]') !== -1) url = url.replace('[/policy_shipping]', '')
		if (url.indexOf('[/policy_refunds]') !== -1) url = url.replace('[/policy_refunds]', '')
		if (url.indexOf('[/policy_additional]') !== -1) url = url.replace('[/policy_additional]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'getShopSection': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/sections/{shop_section_id}'
		args = args || {}
		if (args['shop_section_id'] == null) throw new Error('shop_section_id is a required parameter')
		var rgx = new RegExp('\{shop_section_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		if (url.indexOf('[/shop_section_id]') !== -1) {
			url = url.replace('[/shop_section_id]', '/' + args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		if (url.indexOf('[/shop_section_id]') !== -1) url = url.replace('[/shop_section_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'createShopSection': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/sections'
		args = args || {}
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'updateShopSection': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/sections/{shop_section_id}'
		args = args || {}
		if (args['shop_section_id'] == null) throw new Error('shop_section_id is a required parameter')
		var rgx = new RegExp('\{shop_section_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		if (url.indexOf('[/shop_section_id]') !== -1) {
			url = url.replace('[/shop_section_id]', '/' + args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		var rgx = new RegExp('\{rank\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['rank'])
			if (args['rank']) delete args['rank']
		}
		if (url.indexOf('[/rank]') !== -1) {
			url = url.replace('[/rank]', '/' + args['rank'])
			if (args['rank']) delete args['rank']
		}
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/shop_section_id]') !== -1) url = url.replace('[/shop_section_id]', '')
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/rank]') !== -1) url = url.replace('[/rank]', '')
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteShopSection': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/sections/{shop_section_id}'
		args = args || {}
		if (args['shop_section_id'] == null) throw new Error('shop_section_id is a required parameter')
		var rgx = new RegExp('\{shop_section_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		if (url.indexOf('[/shop_section_id]') !== -1) {
			url = url.replace('[/shop_section_id]', '/' + args['shop_section_id'])
			if (args['shop_section_id']) delete args['shop_section_id']
		}
		if (url.indexOf('[/shop_section_id]') !== -1) url = url.replace('[/shop_section_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'getCategory': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/categories/{tag}'
		args = args || {}
		if (args['tag'] == null) throw new Error('tag is a required parameter')
		var rgx = new RegExp('\{tag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (url.indexOf('[/tag]') !== -1) {
			url = url.replace('[/tag]', '/' + args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (url.indexOf('[/tag]') !== -1) url = url.replace('[/tag]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getSubCategory': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/categories/{tag}/{subtag}'
		args = args || {}
		if (args['tag'] == null) throw new Error('tag is a required parameter')
		var rgx = new RegExp('\{tag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (url.indexOf('[/tag]') !== -1) {
			url = url.replace('[/tag]', '/' + args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (args['subtag'] == null) throw new Error('subtag is a required parameter')
		var rgx = new RegExp('\{subtag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subtag'])
			if (args['subtag']) delete args['subtag']
		}
		if (url.indexOf('[/subtag]') !== -1) {
			url = url.replace('[/subtag]', '/' + args['subtag'])
			if (args['subtag']) delete args['subtag']
		}
		if (url.indexOf('[/tag]') !== -1) url = url.replace('[/tag]', '')
		if (url.indexOf('[/subtag]') !== -1) url = url.replace('[/subtag]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getSubSubCategory': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/categories/{tag}/{subtag}/{subsubtag}'
		args = args || {}
		if (args['tag'] == null) throw new Error('tag is a required parameter')
		var rgx = new RegExp('\{tag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (url.indexOf('[/tag]') !== -1) {
			url = url.replace('[/tag]', '/' + args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (args['subtag'] == null) throw new Error('subtag is a required parameter')
		var rgx = new RegExp('\{subtag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subtag'])
			if (args['subtag']) delete args['subtag']
		}
		if (url.indexOf('[/subtag]') !== -1) {
			url = url.replace('[/subtag]', '/' + args['subtag'])
			if (args['subtag']) delete args['subtag']
		}
		if (args['subsubtag'] == null) throw new Error('subsubtag is a required parameter')
		var rgx = new RegExp('\{subsubtag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subsubtag'])
			if (args['subsubtag']) delete args['subsubtag']
		}
		if (url.indexOf('[/subsubtag]') !== -1) {
			url = url.replace('[/subsubtag]', '/' + args['subsubtag'])
			if (args['subsubtag']) delete args['subsubtag']
		}
		if (url.indexOf('[/tag]') !== -1) url = url.replace('[/tag]', '')
		if (url.indexOf('[/subtag]') !== -1) url = url.replace('[/subtag]', '')
		if (url.indexOf('[/subsubtag]') !== -1) url = url.replace('[/subsubtag]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllTopCategory': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/taxonomy/categories'
		args = args || {}
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllTopCategoryChildren': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/taxonomy/categories/{tag}'
		args = args || {}
		if (args['tag'] == null) throw new Error('tag is a required parameter')
		var rgx = new RegExp('\{tag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (url.indexOf('[/tag]') !== -1) {
			url = url.replace('[/tag]', '/' + args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (url.indexOf('[/tag]') !== -1) url = url.replace('[/tag]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllSubCategoryChildren': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/taxonomy/categories/{tag}/{subtag}'
		args = args || {}
		if (args['tag'] == null) throw new Error('tag is a required parameter')
		var rgx = new RegExp('\{tag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (url.indexOf('[/tag]') !== -1) {
			url = url.replace('[/tag]', '/' + args['tag'])
			if (args['tag']) delete args['tag']
		}
		if (args['subtag'] == null) throw new Error('subtag is a required parameter')
		var rgx = new RegExp('\{subtag\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subtag'])
			if (args['subtag']) delete args['subtag']
		}
		if (url.indexOf('[/subtag]') !== -1) {
			url = url.replace('[/subtag]', '/' + args['subtag'])
			if (args['subtag']) delete args['subtag']
		}
		if (url.indexOf('[/tag]') !== -1) url = url.replace('[/tag]', '')
		if (url.indexOf('[/subtag]') !== -1) url = url.replace('[/subtag]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findPopularTags': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/taxonomy/tags'
		args = args || {}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllRelatedTags': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/taxonomy/tags/{tags}'
		args = args || {}
		if (args['tags'] == null) throw new Error('tags is a required parameter')
		var rgx = new RegExp('\{tags\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tags'])
			if (args['tags']) delete args['tags']
		}
		if (url.indexOf('[/tags]') !== -1) {
			url = url.replace('[/tags]', '/' + args['tags'])
			if (args['tags']) delete args['tags']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/tags]') !== -1) url = url.replace('[/tags]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getTransaction': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/transactions/{transaction_id}'
		args = args || {}
		if (args['transaction_id'] == null) throw new Error('transaction_id is a required parameter')
		var rgx = new RegExp('\{transaction_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['transaction_id'])
			if (args['transaction_id']) delete args['transaction_id']
		}
		if (url.indexOf('[/transaction_id]') !== -1) {
			url = url.replace('[/transaction_id]', '/' + args['transaction_id'])
			if (args['transaction_id']) delete args['transaction_id']
		}
		if (url.indexOf('[/transaction_id]') !== -1) url = url.replace('[/transaction_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getTreasury': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/treasuries/{treasury_id}'
		args = args || {}
		if (args['treasury_id'] == null) throw new Error('treasury_id is a required parameter')
		var rgx = new RegExp('\{treasury_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['treasury_id'])
			if (args['treasury_id']) delete args['treasury_id']
		}
		if (url.indexOf('[/treasury_id]') !== -1) {
			url = url.replace('[/treasury_id]', '/' + args['treasury_id'])
			if (args['treasury_id']) delete args['treasury_id']
		}
		if (url.indexOf('[/treasury_id]') !== -1) url = url.replace('[/treasury_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllTreasuries': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/treasuries'
		args = args || {}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{sort_on\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_on'])
			if (args['sort_on']) delete args['sort_on']
		}
		if (url.indexOf('[/sort_on]') !== -1) {
			url = url.replace('[/sort_on]', '/' + args['sort_on'])
			if (args['sort_on']) delete args['sort_on']
		}
		var rgx = new RegExp('\{sort_order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_order'])
			if (args['sort_order']) delete args['sort_order']
		}
		if (url.indexOf('[/sort_order]') !== -1) {
			url = url.replace('[/sort_order]', '/' + args['sort_order'])
			if (args['sort_order']) delete args['sort_order']
		}
		var rgx = new RegExp('\{maturity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maturity'])
			if (args['maturity']) delete args['maturity']
		}
		if (url.indexOf('[/maturity]') !== -1) {
			url = url.replace('[/maturity]', '/' + args['maturity'])
			if (args['maturity']) delete args['maturity']
		}
		var rgx = new RegExp('\{detail_level\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['detail_level'])
			if (args['detail_level']) delete args['detail_level']
		}
		if (url.indexOf('[/detail_level]') !== -1) {
			url = url.replace('[/detail_level]', '/' + args['detail_level'])
			if (args['detail_level']) delete args['detail_level']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/sort_on]') !== -1) url = url.replace('[/sort_on]', '')
		if (url.indexOf('[/sort_order]') !== -1) url = url.replace('[/sort_order]', '')
		if (url.indexOf('[/maturity]') !== -1) url = url.replace('[/maturity]', '')
		if (url.indexOf('[/detail_level]') !== -1) url = url.replace('[/detail_level]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserTreasuries': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/treasuries'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{sort_on\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_on'])
			if (args['sort_on']) delete args['sort_on']
		}
		if (url.indexOf('[/sort_on]') !== -1) {
			url = url.replace('[/sort_on]', '/' + args['sort_on'])
			if (args['sort_on']) delete args['sort_on']
		}
		var rgx = new RegExp('\{sort_order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort_order'])
			if (args['sort_order']) delete args['sort_order']
		}
		if (url.indexOf('[/sort_order]') !== -1) {
			url = url.replace('[/sort_order]', '/' + args['sort_order'])
			if (args['sort_order']) delete args['sort_order']
		}
		var rgx = new RegExp('\{maturity\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['maturity'])
			if (args['maturity']) delete args['maturity']
		}
		if (url.indexOf('[/maturity]') !== -1) {
			url = url.replace('[/maturity]', '/' + args['maturity'])
			if (args['maturity']) delete args['maturity']
		}
		var rgx = new RegExp('\{detail_level\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['detail_level'])
			if (args['detail_level']) delete args['detail_level']
		}
		if (url.indexOf('[/detail_level]') !== -1) {
			url = url.replace('[/detail_level]', '/' + args['detail_level'])
			if (args['detail_level']) delete args['detail_level']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/sort_on]') !== -1) url = url.replace('[/sort_on]', '')
		if (url.indexOf('[/sort_order]') !== -1) url = url.replace('[/sort_order]', '')
		if (url.indexOf('[/maturity]') !== -1) url = url.replace('[/maturity]', '')
		if (url.indexOf('[/detail_level]') !== -1) url = url.replace('[/detail_level]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getUser': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserShops': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/shops'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserFavoredBy': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/favored-by'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserFeedbackAsSubject': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/feedback/as-subject'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserFeedbackAsAuthor': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/feedback/as-author'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserFeedbackAsBuyer': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/feedback/as-buyer'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserFeedbackAsSeller': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/feedback/as-seller'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserOrders': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/orders'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserBuyerReceipts': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/receipts'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserBuyerTransactions': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/transactions'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserCharges': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/charges'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserPayments': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/payments'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserShippingTemplates': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/shipping/templates'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserPaymentTemplates': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/payments/templates'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'findAllUserAddresses': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/addresses'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getPaymentTemplate': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/payments/templates/{payment_template_id}'
		args = args || {}
		if (args['payment_template_id'] == null) throw new Error('payment_template_id is a required parameter')
		var rgx = new RegExp('\{payment_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['payment_template_id'])
			if (args['payment_template_id']) delete args['payment_template_id']
		}
		if (url.indexOf('[/payment_template_id]') !== -1) {
			url = url.replace('[/payment_template_id]', '/' + args['payment_template_id'])
			if (args['payment_template_id']) delete args['payment_template_id']
		}
		if (url.indexOf('[/payment_template_id]') !== -1) url = url.replace('[/payment_template_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'createPaymentTemplate': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/payments/templates'
		args = args || {}
		var rgx = new RegExp('\{allow_check\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['allow_check'])
			if (args['allow_check']) delete args['allow_check']
		}
		if (url.indexOf('[/allow_check]') !== -1) {
			url = url.replace('[/allow_check]', '/' + args['allow_check'])
			if (args['allow_check']) delete args['allow_check']
		}
		var rgx = new RegExp('\{allow_mo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['allow_mo'])
			if (args['allow_mo']) delete args['allow_mo']
		}
		if (url.indexOf('[/allow_mo]') !== -1) {
			url = url.replace('[/allow_mo]', '/' + args['allow_mo'])
			if (args['allow_mo']) delete args['allow_mo']
		}
		var rgx = new RegExp('\{allow_other\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['allow_other'])
			if (args['allow_other']) delete args['allow_other']
		}
		if (url.indexOf('[/allow_other]') !== -1) {
			url = url.replace('[/allow_other]', '/' + args['allow_other'])
			if (args['allow_other']) delete args['allow_other']
		}
		var rgx = new RegExp('\{allow_paypal\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['allow_paypal'])
			if (args['allow_paypal']) delete args['allow_paypal']
		}
		if (url.indexOf('[/allow_paypal]') !== -1) {
			url = url.replace('[/allow_paypal]', '/' + args['allow_paypal'])
			if (args['allow_paypal']) delete args['allow_paypal']
		}
		var rgx = new RegExp('\{paypal_email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['paypal_email'])
			if (args['paypal_email']) delete args['paypal_email']
		}
		if (url.indexOf('[/paypal_email]') !== -1) {
			url = url.replace('[/paypal_email]', '/' + args['paypal_email'])
			if (args['paypal_email']) delete args['paypal_email']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{first_line\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_line'])
			if (args['first_line']) delete args['first_line']
		}
		if (url.indexOf('[/first_line]') !== -1) {
			url = url.replace('[/first_line]', '/' + args['first_line'])
			if (args['first_line']) delete args['first_line']
		}
		var rgx = new RegExp('\{second_line\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['second_line'])
			if (args['second_line']) delete args['second_line']
		}
		if (url.indexOf('[/second_line]') !== -1) {
			url = url.replace('[/second_line]', '/' + args['second_line'])
			if (args['second_line']) delete args['second_line']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/country_id]') !== -1) {
			url = url.replace('[/country_id]', '/' + args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/allow_check]') !== -1) url = url.replace('[/allow_check]', '')
		if (url.indexOf('[/allow_mo]') !== -1) url = url.replace('[/allow_mo]', '')
		if (url.indexOf('[/allow_other]') !== -1) url = url.replace('[/allow_other]', '')
		if (url.indexOf('[/allow_paypal]') !== -1) url = url.replace('[/allow_paypal]', '')
		if (url.indexOf('[/paypal_email]') !== -1) url = url.replace('[/paypal_email]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/first_line]') !== -1) url = url.replace('[/first_line]', '')
		if (url.indexOf('[/second_line]') !== -1) url = url.replace('[/second_line]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country_id]') !== -1) url = url.replace('[/country_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'updatePaymentTemplate': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/payments/templates/{payment_template_id}'
		args = args || {}
		if (args['payment_template_id'] == null) throw new Error('payment_template_id is a required parameter')
		var rgx = new RegExp('\{payment_template_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['payment_template_id'])
			if (args['payment_template_id']) delete args['payment_template_id']
		}
		if (url.indexOf('[/payment_template_id]') !== -1) {
			url = url.replace('[/payment_template_id]', '/' + args['payment_template_id'])
			if (args['payment_template_id']) delete args['payment_template_id']
		}
		var rgx = new RegExp('\{allow_check\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['allow_check'])
			if (args['allow_check']) delete args['allow_check']
		}
		if (url.indexOf('[/allow_check]') !== -1) {
			url = url.replace('[/allow_check]', '/' + args['allow_check'])
			if (args['allow_check']) delete args['allow_check']
		}
		var rgx = new RegExp('\{allow_mo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['allow_mo'])
			if (args['allow_mo']) delete args['allow_mo']
		}
		if (url.indexOf('[/allow_mo]') !== -1) {
			url = url.replace('[/allow_mo]', '/' + args['allow_mo'])
			if (args['allow_mo']) delete args['allow_mo']
		}
		var rgx = new RegExp('\{allow_other\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['allow_other'])
			if (args['allow_other']) delete args['allow_other']
		}
		if (url.indexOf('[/allow_other]') !== -1) {
			url = url.replace('[/allow_other]', '/' + args['allow_other'])
			if (args['allow_other']) delete args['allow_other']
		}
		var rgx = new RegExp('\{allow_paypal\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['allow_paypal'])
			if (args['allow_paypal']) delete args['allow_paypal']
		}
		if (url.indexOf('[/allow_paypal]') !== -1) {
			url = url.replace('[/allow_paypal]', '/' + args['allow_paypal'])
			if (args['allow_paypal']) delete args['allow_paypal']
		}
		var rgx = new RegExp('\{paypal_email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['paypal_email'])
			if (args['paypal_email']) delete args['paypal_email']
		}
		if (url.indexOf('[/paypal_email]') !== -1) {
			url = url.replace('[/paypal_email]', '/' + args['paypal_email'])
			if (args['paypal_email']) delete args['paypal_email']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{first_line\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_line'])
			if (args['first_line']) delete args['first_line']
		}
		if (url.indexOf('[/first_line]') !== -1) {
			url = url.replace('[/first_line]', '/' + args['first_line'])
			if (args['first_line']) delete args['first_line']
		}
		var rgx = new RegExp('\{second_line\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['second_line'])
			if (args['second_line']) delete args['second_line']
		}
		if (url.indexOf('[/second_line]') !== -1) {
			url = url.replace('[/second_line]', '/' + args['second_line'])
			if (args['second_line']) delete args['second_line']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/country_id]') !== -1) {
			url = url.replace('[/country_id]', '/' + args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/payment_template_id]') !== -1) url = url.replace('[/payment_template_id]', '')
		if (url.indexOf('[/allow_check]') !== -1) url = url.replace('[/allow_check]', '')
		if (url.indexOf('[/allow_mo]') !== -1) url = url.replace('[/allow_mo]', '')
		if (url.indexOf('[/allow_other]') !== -1) url = url.replace('[/allow_other]', '')
		if (url.indexOf('[/allow_paypal]') !== -1) url = url.replace('[/allow_paypal]', '')
		if (url.indexOf('[/paypal_email]') !== -1) url = url.replace('[/paypal_email]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/first_line]') !== -1) url = url.replace('[/first_line]', '')
		if (url.indexOf('[/second_line]') !== -1) url = url.replace('[/second_line]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country_id]') !== -1) url = url.replace('[/country_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'getListingPayment': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/payments/{listing_payment_id}'
		args = args || {}
		if (args['listing_payment_id'] == null) throw new Error('listing_payment_id is a required parameter')
		var rgx = new RegExp('\{listing_payment_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['listing_payment_id'])
			if (args['listing_payment_id']) delete args['listing_payment_id']
		}
		if (url.indexOf('[/listing_payment_id]') !== -1) {
			url = url.replace('[/listing_payment_id]', '/' + args['listing_payment_id'])
			if (args['listing_payment_id']) delete args['listing_payment_id']
		}
		if (url.indexOf('[/listing_payment_id]') !== -1) url = url.replace('[/listing_payment_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'uploadAvatar': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/avatar'
		args = args || {}
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		var rgx = new RegExp('\{src\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['src'])
			if (args['src']) delete args['src']
		}
		if (url.indexOf('[/src]') !== -1) {
			url = url.replace('[/src]', '/' + args['src'])
			if (args['src']) delete args['src']
		}
		var rgx = new RegExp('\{image\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['image'])
			if (args['image']) delete args['image']
		}
		if (url.indexOf('[/image]') !== -1) {
			url = url.replace('[/image]', '/' + args['image'])
			if (args['image']) delete args['image']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/src]') !== -1) url = url.replace('[/src]', '')
		if (url.indexOf('[/image]') !== -1) url = url.replace('[/image]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'getAvatarImgSrc': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/avatar/src'
		args = args || {}
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getUserAddress': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/addresses/{user_address_id}'
		args = args || {}
		if (args['user_address_id'] == null) throw new Error('user_address_id is a required parameter')
		var rgx = new RegExp('\{user_address_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_address_id'])
			if (args['user_address_id']) delete args['user_address_id']
		}
		if (url.indexOf('[/user_address_id]') !== -1) {
			url = url.replace('[/user_address_id]', '/' + args['user_address_id'])
			if (args['user_address_id']) delete args['user_address_id']
		}
		if (url.indexOf('[/user_address_id]') !== -1) url = url.replace('[/user_address_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'createUserAddress': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/addresses'
		args = args || {}
		if (args['user_id'] == null) args['user_id'] = "__SELF__"
		var rgx = new RegExp('\{user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (url.indexOf('[/user_id]') !== -1) {
			url = url.replace('[/user_id]', '/' + args['user_id'])
			if (args['user_id']) delete args['user_id']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['first_line'] == null) throw new Error('first_line is a required parameter')
		var rgx = new RegExp('\{first_line\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_line'])
			if (args['first_line']) delete args['first_line']
		}
		if (url.indexOf('[/first_line]') !== -1) {
			url = url.replace('[/first_line]', '/' + args['first_line'])
			if (args['first_line']) delete args['first_line']
		}
		var rgx = new RegExp('\{second_line\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['second_line'])
			if (args['second_line']) delete args['second_line']
		}
		if (url.indexOf('[/second_line]') !== -1) {
			url = url.replace('[/second_line]', '/' + args['second_line'])
			if (args['second_line']) delete args['second_line']
		}
		if (args['city'] == null) throw new Error('city is a required parameter')
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		if (args['zip'] == null) throw new Error('zip is a required parameter')
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (args['country_id'] == null) throw new Error('country_id is a required parameter')
		var rgx = new RegExp('\{country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/country_id]') !== -1) {
			url = url.replace('[/country_id]', '/' + args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/user_id]') !== -1) url = url.replace('[/user_id]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/first_line]') !== -1) url = url.replace('[/first_line]', '')
		if (url.indexOf('[/second_line]') !== -1) url = url.replace('[/second_line]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country_id]') !== -1) url = url.replace('[/country_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'POST',params:args}, opts)
	},
	'updateUserAddress': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/addresses/{user_address_id}'
		args = args || {}
		if (args['user_address_id'] == null) throw new Error('user_address_id is a required parameter')
		var rgx = new RegExp('\{user_address_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_address_id'])
			if (args['user_address_id']) delete args['user_address_id']
		}
		if (url.indexOf('[/user_address_id]') !== -1) {
			url = url.replace('[/user_address_id]', '/' + args['user_address_id'])
			if (args['user_address_id']) delete args['user_address_id']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{first_line\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first_line'])
			if (args['first_line']) delete args['first_line']
		}
		if (url.indexOf('[/first_line]') !== -1) {
			url = url.replace('[/first_line]', '/' + args['first_line'])
			if (args['first_line']) delete args['first_line']
		}
		var rgx = new RegExp('\{second_line\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['second_line'])
			if (args['second_line']) delete args['second_line']
		}
		if (url.indexOf('[/second_line]') !== -1) {
			url = url.replace('[/second_line]', '/' + args['second_line'])
			if (args['second_line']) delete args['second_line']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{country_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/country_id]') !== -1) {
			url = url.replace('[/country_id]', '/' + args['country_id'])
			if (args['country_id']) delete args['country_id']
		}
		if (url.indexOf('[/user_address_id]') !== -1) url = url.replace('[/user_address_id]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/first_line]') !== -1) url = url.replace('[/first_line]', '')
		if (url.indexOf('[/second_line]') !== -1) url = url.replace('[/second_line]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/country_id]') !== -1) url = url.replace('[/country_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'PUT',params:args}, opts)
	},
	'deleteUserAddress': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/users/{user_id}/addresses/{user_address_id}'
		args = args || {}
		if (args['user_address_id'] == null) throw new Error('user_address_id is a required parameter')
		var rgx = new RegExp('\{user_address_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user_address_id'])
			if (args['user_address_id']) delete args['user_address_id']
		}
		if (url.indexOf('[/user_address_id]') !== -1) {
			url = url.replace('[/user_address_id]', '/' + args['user_address_id'])
			if (args['user_address_id']) delete args['user_address_id']
		}
		if (url.indexOf('[/user_address_id]') !== -1) url = url.replace('[/user_address_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'DELETE',params:args}, opts)
	},
	'findAllFeaturedUsers': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/featured/users'
		args = args || {}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getFeaturedUser': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/featured/users/{featured_user_id}'
		args = args || {}
		if (args['featured_user_id'] == null) throw new Error('featured_user_id is a required parameter')
		var rgx = new RegExp('\{featured_user_id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['featured_user_id'])
			if (args['featured_user_id']) delete args['featured_user_id']
		}
		if (url.indexOf('[/featured_user_id]') !== -1) {
			url = url.replace('[/featured_user_id]', '/' + args['featured_user_id'])
			if (args['featured_user_id']) delete args['featured_user_id']
		}
		if (url.indexOf('[/featured_user_id]') !== -1) url = url.replace('[/featured_user_id]', '')
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getMethodTable': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/'
		args = args || {}
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'getServerEpoch': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/server/epoch'
		args = args || {}
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	},
	'ping': function(args, opts) {
		var url = 'http://sandbox.openapi.etsy.com/v2/private/server/ping'
		args = args || {}
		return http({provider:'etsy_sandbox',url:url,method:'GET',params:args}, opts)
	}
})