/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'donorschoose'})},
	'search': function(args, opts) {
		var url = 'http://api.donorschoose.org/common/json_feed.html'
		args = args || {}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{index\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['index'])
			if (args['index']) delete args['index']
		}
		if (url.indexOf('[/index]') !== -1) {
			url = url.replace('[/index]', '/' + args['index'])
			if (args['index']) delete args['index']
		}
		var rgx = new RegExp('\{max\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max'])
			if (args['max']) delete args['max']
		}
		if (url.indexOf('[/max]') !== -1) {
			url = url.replace('[/max]', '/' + args['max'])
			if (args['max']) delete args['max']
		}
		var rgx = new RegExp('\{showSynopsis\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		if (url.indexOf('[/showSynopsis]') !== -1) {
			url = url.replace('[/showSynopsis]', '/' + args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		var rgx = new RegExp('\{showFacetCounts\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		if (url.indexOf('[/showFacetCounts]') !== -1) {
			url = url.replace('[/showFacetCounts]', '/' + args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		var rgx = new RegExp('\{showZeroFacetCountsForSchools\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) {
			url = url.replace('[/showZeroFacetCountsForSchools]', '/' + args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{subject1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		if (url.indexOf('[/subject1]') !== -1) {
			url = url.replace('[/subject1]', '/' + args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		var rgx = new RegExp('\{subject2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		if (url.indexOf('[/subject2]') !== -1) {
			url = url.replace('[/subject2]', '/' + args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		var rgx = new RegExp('\{subject3\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		if (url.indexOf('[/subject3]') !== -1) {
			url = url.replace('[/subject3]', '/' + args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		var rgx = new RegExp('\{subject4\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		if (url.indexOf('[/subject4]') !== -1) {
			url = url.replace('[/subject4]', '/' + args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		var rgx = new RegExp('\{subject5\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		if (url.indexOf('[/subject5]') !== -1) {
			url = url.replace('[/subject5]', '/' + args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		var rgx = new RegExp('\{subject6\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		if (url.indexOf('[/subject6]') !== -1) {
			url = url.replace('[/subject6]', '/' + args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		var rgx = new RegExp('\{subject7\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		if (url.indexOf('[/subject7]') !== -1) {
			url = url.replace('[/subject7]', '/' + args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{teacherNotFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		if (url.indexOf('[/teacherNotFunded]') !== -1) {
			url = url.replace('[/teacherNotFunded]', '/' + args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		var rgx = new RegExp('\{costToComplete\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		if (url.indexOf('[/costToComplete]') !== -1) {
			url = url.replace('[/costToComplete]', '/' + args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		var rgx = new RegExp('\{costToCompleteRange\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		if (url.indexOf('[/costToCompleteRange]') !== -1) {
			url = url.replace('[/costToCompleteRange]', '/' + args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		var rgx = new RegExp('\{proposalType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		if (url.indexOf('[/proposalType]') !== -1) {
			url = url.replace('[/proposalType]', '/' + args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		var rgx = new RegExp('\{proposalTypeCombo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		if (url.indexOf('[/proposalTypeCombo]') !== -1) {
			url = url.replace('[/proposalTypeCombo]', '/' + args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		var rgx = new RegExp('\{gradeType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		if (url.indexOf('[/gradeType]') !== -1) {
			url = url.replace('[/gradeType]', '/' + args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		var rgx = new RegExp('\{resourceUsage\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		if (url.indexOf('[/resourceUsage]') !== -1) {
			url = url.replace('[/resourceUsage]', '/' + args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		var rgx = new RegExp('\{teacherType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		if (url.indexOf('[/teacherType]') !== -1) {
			url = url.replace('[/teacherType]', '/' + args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		var rgx = new RegExp('\{schoolType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		if (url.indexOf('[/schoolType]') !== -1) {
			url = url.replace('[/schoolType]', '/' + args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		var rgx = new RegExp('\{challengeId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		if (url.indexOf('[/challengeId]') !== -1) {
			url = url.replace('[/challengeId]', '/' + args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		var rgx = new RegExp('\{matchingId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		if (url.indexOf('[/matchingId]') !== -1) {
			url = url.replace('[/matchingId]', '/' + args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{community\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['community'])
			if (args['community']) delete args['community']
		}
		if (url.indexOf('[/community]') !== -1) {
			url = url.replace('[/community]', '/' + args['community'])
			if (args['community']) delete args['community']
		}
		var rgx = new RegExp('\{cityName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		if (url.indexOf('[/cityName]') !== -1) {
			url = url.replace('[/cityName]', '/' + args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		var rgx = new RegExp('\{countyName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		if (url.indexOf('[/countyName]') !== -1) {
			url = url.replace('[/countyName]', '/' + args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		var rgx = new RegExp('\{school\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['school'])
			if (args['school']) delete args['school']
		}
		if (url.indexOf('[/school]') !== -1) {
			url = url.replace('[/school]', '/' + args['school'])
			if (args['school']) delete args['school']
		}
		var rgx = new RegExp('\{sortBy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		if (url.indexOf('[/sortBy]') !== -1) {
			url = url.replace('[/sortBy]', '/' + args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		var rgx = new RegExp('\{historical\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['historical'])
			if (args['historical']) delete args['historical']
		}
		if (url.indexOf('[/historical]') !== -1) {
			url = url.replace('[/historical]', '/' + args['historical'])
			if (args['historical']) delete args['historical']
		}
		var rgx = new RegExp('\{nwLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		if (url.indexOf('[/nwLat]') !== -1) {
			url = url.replace('[/nwLat]', '/' + args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		var rgx = new RegExp('\{nwLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		if (url.indexOf('[/nwLng]') !== -1) {
			url = url.replace('[/nwLng]', '/' + args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		var rgx = new RegExp('\{seLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		if (url.indexOf('[/seLat]') !== -1) {
			url = url.replace('[/seLat]', '/' + args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		var rgx = new RegExp('\{seLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		if (url.indexOf('[/seLng]') !== -1) {
			url = url.replace('[/seLng]', '/' + args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		var rgx = new RegExp('\{centerLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		if (url.indexOf('[/centerLat]') !== -1) {
			url = url.replace('[/centerLat]', '/' + args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		var rgx = new RegExp('\{centerLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		if (url.indexOf('[/centerLng]') !== -1) {
			url = url.replace('[/centerLng]', '/' + args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		var rgx = new RegExp('\{radius\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (url.indexOf('[/radius]') !== -1) {
			url = url.replace('[/radius]', '/' + args['radius'])
			if (args['radius']) delete args['radius']
		}
		var rgx = new RegExp('\{concise\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/concise]') !== -1) {
			url = url.replace('[/concise]', '/' + args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/index]') !== -1) url = url.replace('[/index]', '')
		if (url.indexOf('[/max]') !== -1) url = url.replace('[/max]', '')
		if (url.indexOf('[/showSynopsis]') !== -1) url = url.replace('[/showSynopsis]', '')
		if (url.indexOf('[/showFacetCounts]') !== -1) url = url.replace('[/showFacetCounts]', '')
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) url = url.replace('[/showZeroFacetCountsForSchools]', '')
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/subject1]') !== -1) url = url.replace('[/subject1]', '')
		if (url.indexOf('[/subject2]') !== -1) url = url.replace('[/subject2]', '')
		if (url.indexOf('[/subject3]') !== -1) url = url.replace('[/subject3]', '')
		if (url.indexOf('[/subject4]') !== -1) url = url.replace('[/subject4]', '')
		if (url.indexOf('[/subject5]') !== -1) url = url.replace('[/subject5]', '')
		if (url.indexOf('[/subject6]') !== -1) url = url.replace('[/subject6]', '')
		if (url.indexOf('[/subject7]') !== -1) url = url.replace('[/subject7]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/teacherNotFunded]') !== -1) url = url.replace('[/teacherNotFunded]', '')
		if (url.indexOf('[/costToComplete]') !== -1) url = url.replace('[/costToComplete]', '')
		if (url.indexOf('[/costToCompleteRange]') !== -1) url = url.replace('[/costToCompleteRange]', '')
		if (url.indexOf('[/proposalType]') !== -1) url = url.replace('[/proposalType]', '')
		if (url.indexOf('[/proposalTypeCombo]') !== -1) url = url.replace('[/proposalTypeCombo]', '')
		if (url.indexOf('[/gradeType]') !== -1) url = url.replace('[/gradeType]', '')
		if (url.indexOf('[/resourceUsage]') !== -1) url = url.replace('[/resourceUsage]', '')
		if (url.indexOf('[/teacherType]') !== -1) url = url.replace('[/teacherType]', '')
		if (url.indexOf('[/schoolType]') !== -1) url = url.replace('[/schoolType]', '')
		if (url.indexOf('[/challengeId]') !== -1) url = url.replace('[/challengeId]', '')
		if (url.indexOf('[/matchingId]') !== -1) url = url.replace('[/matchingId]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/community]') !== -1) url = url.replace('[/community]', '')
		if (url.indexOf('[/cityName]') !== -1) url = url.replace('[/cityName]', '')
		if (url.indexOf('[/countyName]') !== -1) url = url.replace('[/countyName]', '')
		if (url.indexOf('[/school]') !== -1) url = url.replace('[/school]', '')
		if (url.indexOf('[/sortBy]') !== -1) url = url.replace('[/sortBy]', '')
		if (url.indexOf('[/historical]') !== -1) url = url.replace('[/historical]', '')
		if (url.indexOf('[/nwLat]') !== -1) url = url.replace('[/nwLat]', '')
		if (url.indexOf('[/nwLng]') !== -1) url = url.replace('[/nwLng]', '')
		if (url.indexOf('[/seLat]') !== -1) url = url.replace('[/seLat]', '')
		if (url.indexOf('[/seLng]') !== -1) url = url.replace('[/seLng]', '')
		if (url.indexOf('[/centerLat]') !== -1) url = url.replace('[/centerLat]', '')
		if (url.indexOf('[/centerLng]') !== -1) url = url.replace('[/centerLng]', '')
		if (url.indexOf('[/radius]') !== -1) url = url.replace('[/radius]', '')
		if (url.indexOf('[/concise]') !== -1) url = url.replace('[/concise]', '')
		return http({provider:'donorschoose',url:url,method:'GET',params:args}, opts)
	},
	'keyword.search': function(args, opts) {
		var url = 'http://api.donorschoose.org/common/json_feed.html'
		args = args || {}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{index\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['index'])
			if (args['index']) delete args['index']
		}
		if (url.indexOf('[/index]') !== -1) {
			url = url.replace('[/index]', '/' + args['index'])
			if (args['index']) delete args['index']
		}
		var rgx = new RegExp('\{max\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max'])
			if (args['max']) delete args['max']
		}
		if (url.indexOf('[/max]') !== -1) {
			url = url.replace('[/max]', '/' + args['max'])
			if (args['max']) delete args['max']
		}
		var rgx = new RegExp('\{showSynopsis\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		if (url.indexOf('[/showSynopsis]') !== -1) {
			url = url.replace('[/showSynopsis]', '/' + args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		var rgx = new RegExp('\{showFacetCounts\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		if (url.indexOf('[/showFacetCounts]') !== -1) {
			url = url.replace('[/showFacetCounts]', '/' + args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		var rgx = new RegExp('\{showZeroFacetCountsForSchools\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) {
			url = url.replace('[/showZeroFacetCountsForSchools]', '/' + args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{subject1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		if (url.indexOf('[/subject1]') !== -1) {
			url = url.replace('[/subject1]', '/' + args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		var rgx = new RegExp('\{subject2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		if (url.indexOf('[/subject2]') !== -1) {
			url = url.replace('[/subject2]', '/' + args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		var rgx = new RegExp('\{subject3\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		if (url.indexOf('[/subject3]') !== -1) {
			url = url.replace('[/subject3]', '/' + args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		var rgx = new RegExp('\{subject4\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		if (url.indexOf('[/subject4]') !== -1) {
			url = url.replace('[/subject4]', '/' + args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		var rgx = new RegExp('\{subject5\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		if (url.indexOf('[/subject5]') !== -1) {
			url = url.replace('[/subject5]', '/' + args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		var rgx = new RegExp('\{subject6\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		if (url.indexOf('[/subject6]') !== -1) {
			url = url.replace('[/subject6]', '/' + args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		var rgx = new RegExp('\{subject7\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		if (url.indexOf('[/subject7]') !== -1) {
			url = url.replace('[/subject7]', '/' + args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{teacherNotFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		if (url.indexOf('[/teacherNotFunded]') !== -1) {
			url = url.replace('[/teacherNotFunded]', '/' + args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		var rgx = new RegExp('\{costToComplete\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		if (url.indexOf('[/costToComplete]') !== -1) {
			url = url.replace('[/costToComplete]', '/' + args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		var rgx = new RegExp('\{costToCompleteRange\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		if (url.indexOf('[/costToCompleteRange]') !== -1) {
			url = url.replace('[/costToCompleteRange]', '/' + args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		var rgx = new RegExp('\{proposalType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		if (url.indexOf('[/proposalType]') !== -1) {
			url = url.replace('[/proposalType]', '/' + args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		var rgx = new RegExp('\{proposalTypeCombo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		if (url.indexOf('[/proposalTypeCombo]') !== -1) {
			url = url.replace('[/proposalTypeCombo]', '/' + args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		var rgx = new RegExp('\{gradeType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		if (url.indexOf('[/gradeType]') !== -1) {
			url = url.replace('[/gradeType]', '/' + args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		var rgx = new RegExp('\{resourceUsage\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		if (url.indexOf('[/resourceUsage]') !== -1) {
			url = url.replace('[/resourceUsage]', '/' + args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		var rgx = new RegExp('\{teacherType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		if (url.indexOf('[/teacherType]') !== -1) {
			url = url.replace('[/teacherType]', '/' + args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		var rgx = new RegExp('\{schoolType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		if (url.indexOf('[/schoolType]') !== -1) {
			url = url.replace('[/schoolType]', '/' + args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		var rgx = new RegExp('\{challengeId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		if (url.indexOf('[/challengeId]') !== -1) {
			url = url.replace('[/challengeId]', '/' + args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		var rgx = new RegExp('\{matchingId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		if (url.indexOf('[/matchingId]') !== -1) {
			url = url.replace('[/matchingId]', '/' + args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{community\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['community'])
			if (args['community']) delete args['community']
		}
		if (url.indexOf('[/community]') !== -1) {
			url = url.replace('[/community]', '/' + args['community'])
			if (args['community']) delete args['community']
		}
		var rgx = new RegExp('\{cityName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		if (url.indexOf('[/cityName]') !== -1) {
			url = url.replace('[/cityName]', '/' + args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		var rgx = new RegExp('\{countyName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		if (url.indexOf('[/countyName]') !== -1) {
			url = url.replace('[/countyName]', '/' + args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		var rgx = new RegExp('\{school\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['school'])
			if (args['school']) delete args['school']
		}
		if (url.indexOf('[/school]') !== -1) {
			url = url.replace('[/school]', '/' + args['school'])
			if (args['school']) delete args['school']
		}
		var rgx = new RegExp('\{sortBy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		if (url.indexOf('[/sortBy]') !== -1) {
			url = url.replace('[/sortBy]', '/' + args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		var rgx = new RegExp('\{historical\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['historical'])
			if (args['historical']) delete args['historical']
		}
		if (url.indexOf('[/historical]') !== -1) {
			url = url.replace('[/historical]', '/' + args['historical'])
			if (args['historical']) delete args['historical']
		}
		var rgx = new RegExp('\{nwLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		if (url.indexOf('[/nwLat]') !== -1) {
			url = url.replace('[/nwLat]', '/' + args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		var rgx = new RegExp('\{nwLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		if (url.indexOf('[/nwLng]') !== -1) {
			url = url.replace('[/nwLng]', '/' + args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		var rgx = new RegExp('\{seLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		if (url.indexOf('[/seLat]') !== -1) {
			url = url.replace('[/seLat]', '/' + args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		var rgx = new RegExp('\{seLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		if (url.indexOf('[/seLng]') !== -1) {
			url = url.replace('[/seLng]', '/' + args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		var rgx = new RegExp('\{centerLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		if (url.indexOf('[/centerLat]') !== -1) {
			url = url.replace('[/centerLat]', '/' + args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		var rgx = new RegExp('\{centerLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		if (url.indexOf('[/centerLng]') !== -1) {
			url = url.replace('[/centerLng]', '/' + args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		var rgx = new RegExp('\{radius\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (url.indexOf('[/radius]') !== -1) {
			url = url.replace('[/radius]', '/' + args['radius'])
			if (args['radius']) delete args['radius']
		}
		var rgx = new RegExp('\{concise\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/concise]') !== -1) {
			url = url.replace('[/concise]', '/' + args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/index]') !== -1) url = url.replace('[/index]', '')
		if (url.indexOf('[/max]') !== -1) url = url.replace('[/max]', '')
		if (url.indexOf('[/showSynopsis]') !== -1) url = url.replace('[/showSynopsis]', '')
		if (url.indexOf('[/showFacetCounts]') !== -1) url = url.replace('[/showFacetCounts]', '')
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) url = url.replace('[/showZeroFacetCountsForSchools]', '')
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/subject1]') !== -1) url = url.replace('[/subject1]', '')
		if (url.indexOf('[/subject2]') !== -1) url = url.replace('[/subject2]', '')
		if (url.indexOf('[/subject3]') !== -1) url = url.replace('[/subject3]', '')
		if (url.indexOf('[/subject4]') !== -1) url = url.replace('[/subject4]', '')
		if (url.indexOf('[/subject5]') !== -1) url = url.replace('[/subject5]', '')
		if (url.indexOf('[/subject6]') !== -1) url = url.replace('[/subject6]', '')
		if (url.indexOf('[/subject7]') !== -1) url = url.replace('[/subject7]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/teacherNotFunded]') !== -1) url = url.replace('[/teacherNotFunded]', '')
		if (url.indexOf('[/costToComplete]') !== -1) url = url.replace('[/costToComplete]', '')
		if (url.indexOf('[/costToCompleteRange]') !== -1) url = url.replace('[/costToCompleteRange]', '')
		if (url.indexOf('[/proposalType]') !== -1) url = url.replace('[/proposalType]', '')
		if (url.indexOf('[/proposalTypeCombo]') !== -1) url = url.replace('[/proposalTypeCombo]', '')
		if (url.indexOf('[/gradeType]') !== -1) url = url.replace('[/gradeType]', '')
		if (url.indexOf('[/resourceUsage]') !== -1) url = url.replace('[/resourceUsage]', '')
		if (url.indexOf('[/teacherType]') !== -1) url = url.replace('[/teacherType]', '')
		if (url.indexOf('[/schoolType]') !== -1) url = url.replace('[/schoolType]', '')
		if (url.indexOf('[/challengeId]') !== -1) url = url.replace('[/challengeId]', '')
		if (url.indexOf('[/matchingId]') !== -1) url = url.replace('[/matchingId]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/community]') !== -1) url = url.replace('[/community]', '')
		if (url.indexOf('[/cityName]') !== -1) url = url.replace('[/cityName]', '')
		if (url.indexOf('[/countyName]') !== -1) url = url.replace('[/countyName]', '')
		if (url.indexOf('[/school]') !== -1) url = url.replace('[/school]', '')
		if (url.indexOf('[/sortBy]') !== -1) url = url.replace('[/sortBy]', '')
		if (url.indexOf('[/historical]') !== -1) url = url.replace('[/historical]', '')
		if (url.indexOf('[/nwLat]') !== -1) url = url.replace('[/nwLat]', '')
		if (url.indexOf('[/nwLng]') !== -1) url = url.replace('[/nwLng]', '')
		if (url.indexOf('[/seLat]') !== -1) url = url.replace('[/seLat]', '')
		if (url.indexOf('[/seLng]') !== -1) url = url.replace('[/seLng]', '')
		if (url.indexOf('[/centerLat]') !== -1) url = url.replace('[/centerLat]', '')
		if (url.indexOf('[/centerLng]') !== -1) url = url.replace('[/centerLng]', '')
		if (url.indexOf('[/radius]') !== -1) url = url.replace('[/radius]', '')
		if (url.indexOf('[/concise]') !== -1) url = url.replace('[/concise]', '')
		return http({provider:'donorschoose',url:url,method:'GET',params:args}, opts)
	},
	'subject.search': function(args, opts) {
		var url = 'http://api.donorschoose.org/common/json_feed.html'
		args = args || {}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{index\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['index'])
			if (args['index']) delete args['index']
		}
		if (url.indexOf('[/index]') !== -1) {
			url = url.replace('[/index]', '/' + args['index'])
			if (args['index']) delete args['index']
		}
		var rgx = new RegExp('\{max\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max'])
			if (args['max']) delete args['max']
		}
		if (url.indexOf('[/max]') !== -1) {
			url = url.replace('[/max]', '/' + args['max'])
			if (args['max']) delete args['max']
		}
		var rgx = new RegExp('\{showSynopsis\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		if (url.indexOf('[/showSynopsis]') !== -1) {
			url = url.replace('[/showSynopsis]', '/' + args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		var rgx = new RegExp('\{showFacetCounts\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		if (url.indexOf('[/showFacetCounts]') !== -1) {
			url = url.replace('[/showFacetCounts]', '/' + args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		var rgx = new RegExp('\{showZeroFacetCountsForSchools\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) {
			url = url.replace('[/showZeroFacetCountsForSchools]', '/' + args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{subject1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		if (url.indexOf('[/subject1]') !== -1) {
			url = url.replace('[/subject1]', '/' + args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		var rgx = new RegExp('\{subject2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		if (url.indexOf('[/subject2]') !== -1) {
			url = url.replace('[/subject2]', '/' + args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		var rgx = new RegExp('\{subject3\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		if (url.indexOf('[/subject3]') !== -1) {
			url = url.replace('[/subject3]', '/' + args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		var rgx = new RegExp('\{subject4\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		if (url.indexOf('[/subject4]') !== -1) {
			url = url.replace('[/subject4]', '/' + args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		var rgx = new RegExp('\{subject5\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		if (url.indexOf('[/subject5]') !== -1) {
			url = url.replace('[/subject5]', '/' + args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		var rgx = new RegExp('\{subject6\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		if (url.indexOf('[/subject6]') !== -1) {
			url = url.replace('[/subject6]', '/' + args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		var rgx = new RegExp('\{subject7\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		if (url.indexOf('[/subject7]') !== -1) {
			url = url.replace('[/subject7]', '/' + args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{teacherNotFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		if (url.indexOf('[/teacherNotFunded]') !== -1) {
			url = url.replace('[/teacherNotFunded]', '/' + args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		var rgx = new RegExp('\{costToComplete\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		if (url.indexOf('[/costToComplete]') !== -1) {
			url = url.replace('[/costToComplete]', '/' + args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		var rgx = new RegExp('\{costToCompleteRange\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		if (url.indexOf('[/costToCompleteRange]') !== -1) {
			url = url.replace('[/costToCompleteRange]', '/' + args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		var rgx = new RegExp('\{proposalType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		if (url.indexOf('[/proposalType]') !== -1) {
			url = url.replace('[/proposalType]', '/' + args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		var rgx = new RegExp('\{proposalTypeCombo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		if (url.indexOf('[/proposalTypeCombo]') !== -1) {
			url = url.replace('[/proposalTypeCombo]', '/' + args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		var rgx = new RegExp('\{gradeType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		if (url.indexOf('[/gradeType]') !== -1) {
			url = url.replace('[/gradeType]', '/' + args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		var rgx = new RegExp('\{resourceUsage\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		if (url.indexOf('[/resourceUsage]') !== -1) {
			url = url.replace('[/resourceUsage]', '/' + args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		var rgx = new RegExp('\{teacherType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		if (url.indexOf('[/teacherType]') !== -1) {
			url = url.replace('[/teacherType]', '/' + args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		var rgx = new RegExp('\{schoolType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		if (url.indexOf('[/schoolType]') !== -1) {
			url = url.replace('[/schoolType]', '/' + args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		var rgx = new RegExp('\{challengeId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		if (url.indexOf('[/challengeId]') !== -1) {
			url = url.replace('[/challengeId]', '/' + args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		var rgx = new RegExp('\{matchingId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		if (url.indexOf('[/matchingId]') !== -1) {
			url = url.replace('[/matchingId]', '/' + args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{community\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['community'])
			if (args['community']) delete args['community']
		}
		if (url.indexOf('[/community]') !== -1) {
			url = url.replace('[/community]', '/' + args['community'])
			if (args['community']) delete args['community']
		}
		var rgx = new RegExp('\{cityName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		if (url.indexOf('[/cityName]') !== -1) {
			url = url.replace('[/cityName]', '/' + args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		var rgx = new RegExp('\{countyName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		if (url.indexOf('[/countyName]') !== -1) {
			url = url.replace('[/countyName]', '/' + args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		var rgx = new RegExp('\{school\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['school'])
			if (args['school']) delete args['school']
		}
		if (url.indexOf('[/school]') !== -1) {
			url = url.replace('[/school]', '/' + args['school'])
			if (args['school']) delete args['school']
		}
		var rgx = new RegExp('\{sortBy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		if (url.indexOf('[/sortBy]') !== -1) {
			url = url.replace('[/sortBy]', '/' + args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		var rgx = new RegExp('\{historical\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['historical'])
			if (args['historical']) delete args['historical']
		}
		if (url.indexOf('[/historical]') !== -1) {
			url = url.replace('[/historical]', '/' + args['historical'])
			if (args['historical']) delete args['historical']
		}
		var rgx = new RegExp('\{nwLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		if (url.indexOf('[/nwLat]') !== -1) {
			url = url.replace('[/nwLat]', '/' + args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		var rgx = new RegExp('\{nwLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		if (url.indexOf('[/nwLng]') !== -1) {
			url = url.replace('[/nwLng]', '/' + args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		var rgx = new RegExp('\{seLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		if (url.indexOf('[/seLat]') !== -1) {
			url = url.replace('[/seLat]', '/' + args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		var rgx = new RegExp('\{seLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		if (url.indexOf('[/seLng]') !== -1) {
			url = url.replace('[/seLng]', '/' + args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		var rgx = new RegExp('\{centerLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		if (url.indexOf('[/centerLat]') !== -1) {
			url = url.replace('[/centerLat]', '/' + args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		var rgx = new RegExp('\{centerLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		if (url.indexOf('[/centerLng]') !== -1) {
			url = url.replace('[/centerLng]', '/' + args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		var rgx = new RegExp('\{radius\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (url.indexOf('[/radius]') !== -1) {
			url = url.replace('[/radius]', '/' + args['radius'])
			if (args['radius']) delete args['radius']
		}
		var rgx = new RegExp('\{concise\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/concise]') !== -1) {
			url = url.replace('[/concise]', '/' + args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/index]') !== -1) url = url.replace('[/index]', '')
		if (url.indexOf('[/max]') !== -1) url = url.replace('[/max]', '')
		if (url.indexOf('[/showSynopsis]') !== -1) url = url.replace('[/showSynopsis]', '')
		if (url.indexOf('[/showFacetCounts]') !== -1) url = url.replace('[/showFacetCounts]', '')
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) url = url.replace('[/showZeroFacetCountsForSchools]', '')
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/subject1]') !== -1) url = url.replace('[/subject1]', '')
		if (url.indexOf('[/subject2]') !== -1) url = url.replace('[/subject2]', '')
		if (url.indexOf('[/subject3]') !== -1) url = url.replace('[/subject3]', '')
		if (url.indexOf('[/subject4]') !== -1) url = url.replace('[/subject4]', '')
		if (url.indexOf('[/subject5]') !== -1) url = url.replace('[/subject5]', '')
		if (url.indexOf('[/subject6]') !== -1) url = url.replace('[/subject6]', '')
		if (url.indexOf('[/subject7]') !== -1) url = url.replace('[/subject7]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/teacherNotFunded]') !== -1) url = url.replace('[/teacherNotFunded]', '')
		if (url.indexOf('[/costToComplete]') !== -1) url = url.replace('[/costToComplete]', '')
		if (url.indexOf('[/costToCompleteRange]') !== -1) url = url.replace('[/costToCompleteRange]', '')
		if (url.indexOf('[/proposalType]') !== -1) url = url.replace('[/proposalType]', '')
		if (url.indexOf('[/proposalTypeCombo]') !== -1) url = url.replace('[/proposalTypeCombo]', '')
		if (url.indexOf('[/gradeType]') !== -1) url = url.replace('[/gradeType]', '')
		if (url.indexOf('[/resourceUsage]') !== -1) url = url.replace('[/resourceUsage]', '')
		if (url.indexOf('[/teacherType]') !== -1) url = url.replace('[/teacherType]', '')
		if (url.indexOf('[/schoolType]') !== -1) url = url.replace('[/schoolType]', '')
		if (url.indexOf('[/challengeId]') !== -1) url = url.replace('[/challengeId]', '')
		if (url.indexOf('[/matchingId]') !== -1) url = url.replace('[/matchingId]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/community]') !== -1) url = url.replace('[/community]', '')
		if (url.indexOf('[/cityName]') !== -1) url = url.replace('[/cityName]', '')
		if (url.indexOf('[/countyName]') !== -1) url = url.replace('[/countyName]', '')
		if (url.indexOf('[/school]') !== -1) url = url.replace('[/school]', '')
		if (url.indexOf('[/sortBy]') !== -1) url = url.replace('[/sortBy]', '')
		if (url.indexOf('[/historical]') !== -1) url = url.replace('[/historical]', '')
		if (url.indexOf('[/nwLat]') !== -1) url = url.replace('[/nwLat]', '')
		if (url.indexOf('[/nwLng]') !== -1) url = url.replace('[/nwLng]', '')
		if (url.indexOf('[/seLat]') !== -1) url = url.replace('[/seLat]', '')
		if (url.indexOf('[/seLng]') !== -1) url = url.replace('[/seLng]', '')
		if (url.indexOf('[/centerLat]') !== -1) url = url.replace('[/centerLat]', '')
		if (url.indexOf('[/centerLng]') !== -1) url = url.replace('[/centerLng]', '')
		if (url.indexOf('[/radius]') !== -1) url = url.replace('[/radius]', '')
		if (url.indexOf('[/concise]') !== -1) url = url.replace('[/concise]', '')
		return http({provider:'donorschoose',url:url,method:'GET',params:args}, opts)
	},
	'geo.bounding.box': function(args, opts) {
		var url = 'http://api.donorschoose.org/common/json_feed.html'
		args = args || {}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{index\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['index'])
			if (args['index']) delete args['index']
		}
		if (url.indexOf('[/index]') !== -1) {
			url = url.replace('[/index]', '/' + args['index'])
			if (args['index']) delete args['index']
		}
		var rgx = new RegExp('\{max\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max'])
			if (args['max']) delete args['max']
		}
		if (url.indexOf('[/max]') !== -1) {
			url = url.replace('[/max]', '/' + args['max'])
			if (args['max']) delete args['max']
		}
		var rgx = new RegExp('\{showSynopsis\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		if (url.indexOf('[/showSynopsis]') !== -1) {
			url = url.replace('[/showSynopsis]', '/' + args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		var rgx = new RegExp('\{showFacetCounts\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		if (url.indexOf('[/showFacetCounts]') !== -1) {
			url = url.replace('[/showFacetCounts]', '/' + args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		var rgx = new RegExp('\{showZeroFacetCountsForSchools\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) {
			url = url.replace('[/showZeroFacetCountsForSchools]', '/' + args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{subject1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		if (url.indexOf('[/subject1]') !== -1) {
			url = url.replace('[/subject1]', '/' + args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		var rgx = new RegExp('\{subject2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		if (url.indexOf('[/subject2]') !== -1) {
			url = url.replace('[/subject2]', '/' + args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		var rgx = new RegExp('\{subject3\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		if (url.indexOf('[/subject3]') !== -1) {
			url = url.replace('[/subject3]', '/' + args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		var rgx = new RegExp('\{subject4\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		if (url.indexOf('[/subject4]') !== -1) {
			url = url.replace('[/subject4]', '/' + args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		var rgx = new RegExp('\{subject5\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		if (url.indexOf('[/subject5]') !== -1) {
			url = url.replace('[/subject5]', '/' + args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		var rgx = new RegExp('\{subject6\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		if (url.indexOf('[/subject6]') !== -1) {
			url = url.replace('[/subject6]', '/' + args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		var rgx = new RegExp('\{subject7\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		if (url.indexOf('[/subject7]') !== -1) {
			url = url.replace('[/subject7]', '/' + args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{teacherNotFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		if (url.indexOf('[/teacherNotFunded]') !== -1) {
			url = url.replace('[/teacherNotFunded]', '/' + args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		var rgx = new RegExp('\{costToComplete\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		if (url.indexOf('[/costToComplete]') !== -1) {
			url = url.replace('[/costToComplete]', '/' + args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		var rgx = new RegExp('\{costToCompleteRange\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		if (url.indexOf('[/costToCompleteRange]') !== -1) {
			url = url.replace('[/costToCompleteRange]', '/' + args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		var rgx = new RegExp('\{proposalType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		if (url.indexOf('[/proposalType]') !== -1) {
			url = url.replace('[/proposalType]', '/' + args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		var rgx = new RegExp('\{proposalTypeCombo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		if (url.indexOf('[/proposalTypeCombo]') !== -1) {
			url = url.replace('[/proposalTypeCombo]', '/' + args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		var rgx = new RegExp('\{gradeType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		if (url.indexOf('[/gradeType]') !== -1) {
			url = url.replace('[/gradeType]', '/' + args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		var rgx = new RegExp('\{resourceUsage\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		if (url.indexOf('[/resourceUsage]') !== -1) {
			url = url.replace('[/resourceUsage]', '/' + args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		var rgx = new RegExp('\{teacherType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		if (url.indexOf('[/teacherType]') !== -1) {
			url = url.replace('[/teacherType]', '/' + args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		var rgx = new RegExp('\{schoolType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		if (url.indexOf('[/schoolType]') !== -1) {
			url = url.replace('[/schoolType]', '/' + args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		var rgx = new RegExp('\{challengeId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		if (url.indexOf('[/challengeId]') !== -1) {
			url = url.replace('[/challengeId]', '/' + args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		var rgx = new RegExp('\{matchingId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		if (url.indexOf('[/matchingId]') !== -1) {
			url = url.replace('[/matchingId]', '/' + args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{community\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['community'])
			if (args['community']) delete args['community']
		}
		if (url.indexOf('[/community]') !== -1) {
			url = url.replace('[/community]', '/' + args['community'])
			if (args['community']) delete args['community']
		}
		var rgx = new RegExp('\{cityName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		if (url.indexOf('[/cityName]') !== -1) {
			url = url.replace('[/cityName]', '/' + args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		var rgx = new RegExp('\{countyName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		if (url.indexOf('[/countyName]') !== -1) {
			url = url.replace('[/countyName]', '/' + args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		var rgx = new RegExp('\{school\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['school'])
			if (args['school']) delete args['school']
		}
		if (url.indexOf('[/school]') !== -1) {
			url = url.replace('[/school]', '/' + args['school'])
			if (args['school']) delete args['school']
		}
		var rgx = new RegExp('\{sortBy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		if (url.indexOf('[/sortBy]') !== -1) {
			url = url.replace('[/sortBy]', '/' + args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		var rgx = new RegExp('\{historical\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['historical'])
			if (args['historical']) delete args['historical']
		}
		if (url.indexOf('[/historical]') !== -1) {
			url = url.replace('[/historical]', '/' + args['historical'])
			if (args['historical']) delete args['historical']
		}
		var rgx = new RegExp('\{nwLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		if (url.indexOf('[/nwLat]') !== -1) {
			url = url.replace('[/nwLat]', '/' + args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		var rgx = new RegExp('\{nwLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		if (url.indexOf('[/nwLng]') !== -1) {
			url = url.replace('[/nwLng]', '/' + args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		var rgx = new RegExp('\{seLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		if (url.indexOf('[/seLat]') !== -1) {
			url = url.replace('[/seLat]', '/' + args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		var rgx = new RegExp('\{seLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		if (url.indexOf('[/seLng]') !== -1) {
			url = url.replace('[/seLng]', '/' + args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		var rgx = new RegExp('\{centerLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		if (url.indexOf('[/centerLat]') !== -1) {
			url = url.replace('[/centerLat]', '/' + args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		var rgx = new RegExp('\{centerLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		if (url.indexOf('[/centerLng]') !== -1) {
			url = url.replace('[/centerLng]', '/' + args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		var rgx = new RegExp('\{radius\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (url.indexOf('[/radius]') !== -1) {
			url = url.replace('[/radius]', '/' + args['radius'])
			if (args['radius']) delete args['radius']
		}
		var rgx = new RegExp('\{concise\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/concise]') !== -1) {
			url = url.replace('[/concise]', '/' + args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/index]') !== -1) url = url.replace('[/index]', '')
		if (url.indexOf('[/max]') !== -1) url = url.replace('[/max]', '')
		if (url.indexOf('[/showSynopsis]') !== -1) url = url.replace('[/showSynopsis]', '')
		if (url.indexOf('[/showFacetCounts]') !== -1) url = url.replace('[/showFacetCounts]', '')
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) url = url.replace('[/showZeroFacetCountsForSchools]', '')
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/subject1]') !== -1) url = url.replace('[/subject1]', '')
		if (url.indexOf('[/subject2]') !== -1) url = url.replace('[/subject2]', '')
		if (url.indexOf('[/subject3]') !== -1) url = url.replace('[/subject3]', '')
		if (url.indexOf('[/subject4]') !== -1) url = url.replace('[/subject4]', '')
		if (url.indexOf('[/subject5]') !== -1) url = url.replace('[/subject5]', '')
		if (url.indexOf('[/subject6]') !== -1) url = url.replace('[/subject6]', '')
		if (url.indexOf('[/subject7]') !== -1) url = url.replace('[/subject7]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/teacherNotFunded]') !== -1) url = url.replace('[/teacherNotFunded]', '')
		if (url.indexOf('[/costToComplete]') !== -1) url = url.replace('[/costToComplete]', '')
		if (url.indexOf('[/costToCompleteRange]') !== -1) url = url.replace('[/costToCompleteRange]', '')
		if (url.indexOf('[/proposalType]') !== -1) url = url.replace('[/proposalType]', '')
		if (url.indexOf('[/proposalTypeCombo]') !== -1) url = url.replace('[/proposalTypeCombo]', '')
		if (url.indexOf('[/gradeType]') !== -1) url = url.replace('[/gradeType]', '')
		if (url.indexOf('[/resourceUsage]') !== -1) url = url.replace('[/resourceUsage]', '')
		if (url.indexOf('[/teacherType]') !== -1) url = url.replace('[/teacherType]', '')
		if (url.indexOf('[/schoolType]') !== -1) url = url.replace('[/schoolType]', '')
		if (url.indexOf('[/challengeId]') !== -1) url = url.replace('[/challengeId]', '')
		if (url.indexOf('[/matchingId]') !== -1) url = url.replace('[/matchingId]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/community]') !== -1) url = url.replace('[/community]', '')
		if (url.indexOf('[/cityName]') !== -1) url = url.replace('[/cityName]', '')
		if (url.indexOf('[/countyName]') !== -1) url = url.replace('[/countyName]', '')
		if (url.indexOf('[/school]') !== -1) url = url.replace('[/school]', '')
		if (url.indexOf('[/sortBy]') !== -1) url = url.replace('[/sortBy]', '')
		if (url.indexOf('[/historical]') !== -1) url = url.replace('[/historical]', '')
		if (url.indexOf('[/nwLat]') !== -1) url = url.replace('[/nwLat]', '')
		if (url.indexOf('[/nwLng]') !== -1) url = url.replace('[/nwLng]', '')
		if (url.indexOf('[/seLat]') !== -1) url = url.replace('[/seLat]', '')
		if (url.indexOf('[/seLng]') !== -1) url = url.replace('[/seLng]', '')
		if (url.indexOf('[/centerLat]') !== -1) url = url.replace('[/centerLat]', '')
		if (url.indexOf('[/centerLng]') !== -1) url = url.replace('[/centerLng]', '')
		if (url.indexOf('[/radius]') !== -1) url = url.replace('[/radius]', '')
		if (url.indexOf('[/concise]') !== -1) url = url.replace('[/concise]', '')
		return http({provider:'donorschoose',url:url,method:'GET',params:args}, opts)
	},
	'geo.center.distance': function(args, opts) {
		var url = 'http://api.donorschoose.org/common/json_feed.html'
		args = args || {}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{index\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['index'])
			if (args['index']) delete args['index']
		}
		if (url.indexOf('[/index]') !== -1) {
			url = url.replace('[/index]', '/' + args['index'])
			if (args['index']) delete args['index']
		}
		var rgx = new RegExp('\{max\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max'])
			if (args['max']) delete args['max']
		}
		if (url.indexOf('[/max]') !== -1) {
			url = url.replace('[/max]', '/' + args['max'])
			if (args['max']) delete args['max']
		}
		var rgx = new RegExp('\{showSynopsis\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		if (url.indexOf('[/showSynopsis]') !== -1) {
			url = url.replace('[/showSynopsis]', '/' + args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		var rgx = new RegExp('\{showFacetCounts\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		if (url.indexOf('[/showFacetCounts]') !== -1) {
			url = url.replace('[/showFacetCounts]', '/' + args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		var rgx = new RegExp('\{showZeroFacetCountsForSchools\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) {
			url = url.replace('[/showZeroFacetCountsForSchools]', '/' + args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{subject1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		if (url.indexOf('[/subject1]') !== -1) {
			url = url.replace('[/subject1]', '/' + args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		var rgx = new RegExp('\{subject2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		if (url.indexOf('[/subject2]') !== -1) {
			url = url.replace('[/subject2]', '/' + args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		var rgx = new RegExp('\{subject3\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		if (url.indexOf('[/subject3]') !== -1) {
			url = url.replace('[/subject3]', '/' + args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		var rgx = new RegExp('\{subject4\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		if (url.indexOf('[/subject4]') !== -1) {
			url = url.replace('[/subject4]', '/' + args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		var rgx = new RegExp('\{subject5\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		if (url.indexOf('[/subject5]') !== -1) {
			url = url.replace('[/subject5]', '/' + args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		var rgx = new RegExp('\{subject6\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		if (url.indexOf('[/subject6]') !== -1) {
			url = url.replace('[/subject6]', '/' + args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		var rgx = new RegExp('\{subject7\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		if (url.indexOf('[/subject7]') !== -1) {
			url = url.replace('[/subject7]', '/' + args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{teacherNotFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		if (url.indexOf('[/teacherNotFunded]') !== -1) {
			url = url.replace('[/teacherNotFunded]', '/' + args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		var rgx = new RegExp('\{costToComplete\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		if (url.indexOf('[/costToComplete]') !== -1) {
			url = url.replace('[/costToComplete]', '/' + args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		var rgx = new RegExp('\{costToCompleteRange\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		if (url.indexOf('[/costToCompleteRange]') !== -1) {
			url = url.replace('[/costToCompleteRange]', '/' + args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		var rgx = new RegExp('\{proposalType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		if (url.indexOf('[/proposalType]') !== -1) {
			url = url.replace('[/proposalType]', '/' + args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		var rgx = new RegExp('\{proposalTypeCombo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		if (url.indexOf('[/proposalTypeCombo]') !== -1) {
			url = url.replace('[/proposalTypeCombo]', '/' + args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		var rgx = new RegExp('\{gradeType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		if (url.indexOf('[/gradeType]') !== -1) {
			url = url.replace('[/gradeType]', '/' + args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		var rgx = new RegExp('\{resourceUsage\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		if (url.indexOf('[/resourceUsage]') !== -1) {
			url = url.replace('[/resourceUsage]', '/' + args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		var rgx = new RegExp('\{teacherType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		if (url.indexOf('[/teacherType]') !== -1) {
			url = url.replace('[/teacherType]', '/' + args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		var rgx = new RegExp('\{schoolType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		if (url.indexOf('[/schoolType]') !== -1) {
			url = url.replace('[/schoolType]', '/' + args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		var rgx = new RegExp('\{challengeId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		if (url.indexOf('[/challengeId]') !== -1) {
			url = url.replace('[/challengeId]', '/' + args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		var rgx = new RegExp('\{matchingId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		if (url.indexOf('[/matchingId]') !== -1) {
			url = url.replace('[/matchingId]', '/' + args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{community\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['community'])
			if (args['community']) delete args['community']
		}
		if (url.indexOf('[/community]') !== -1) {
			url = url.replace('[/community]', '/' + args['community'])
			if (args['community']) delete args['community']
		}
		var rgx = new RegExp('\{cityName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		if (url.indexOf('[/cityName]') !== -1) {
			url = url.replace('[/cityName]', '/' + args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		var rgx = new RegExp('\{countyName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		if (url.indexOf('[/countyName]') !== -1) {
			url = url.replace('[/countyName]', '/' + args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		var rgx = new RegExp('\{school\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['school'])
			if (args['school']) delete args['school']
		}
		if (url.indexOf('[/school]') !== -1) {
			url = url.replace('[/school]', '/' + args['school'])
			if (args['school']) delete args['school']
		}
		var rgx = new RegExp('\{sortBy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		if (url.indexOf('[/sortBy]') !== -1) {
			url = url.replace('[/sortBy]', '/' + args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		var rgx = new RegExp('\{historical\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['historical'])
			if (args['historical']) delete args['historical']
		}
		if (url.indexOf('[/historical]') !== -1) {
			url = url.replace('[/historical]', '/' + args['historical'])
			if (args['historical']) delete args['historical']
		}
		var rgx = new RegExp('\{nwLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		if (url.indexOf('[/nwLat]') !== -1) {
			url = url.replace('[/nwLat]', '/' + args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		var rgx = new RegExp('\{nwLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		if (url.indexOf('[/nwLng]') !== -1) {
			url = url.replace('[/nwLng]', '/' + args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		var rgx = new RegExp('\{seLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		if (url.indexOf('[/seLat]') !== -1) {
			url = url.replace('[/seLat]', '/' + args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		var rgx = new RegExp('\{seLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		if (url.indexOf('[/seLng]') !== -1) {
			url = url.replace('[/seLng]', '/' + args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		var rgx = new RegExp('\{centerLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		if (url.indexOf('[/centerLat]') !== -1) {
			url = url.replace('[/centerLat]', '/' + args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		var rgx = new RegExp('\{centerLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		if (url.indexOf('[/centerLng]') !== -1) {
			url = url.replace('[/centerLng]', '/' + args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		var rgx = new RegExp('\{radius\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (url.indexOf('[/radius]') !== -1) {
			url = url.replace('[/radius]', '/' + args['radius'])
			if (args['radius']) delete args['radius']
		}
		var rgx = new RegExp('\{concise\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/concise]') !== -1) {
			url = url.replace('[/concise]', '/' + args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/index]') !== -1) url = url.replace('[/index]', '')
		if (url.indexOf('[/max]') !== -1) url = url.replace('[/max]', '')
		if (url.indexOf('[/showSynopsis]') !== -1) url = url.replace('[/showSynopsis]', '')
		if (url.indexOf('[/showFacetCounts]') !== -1) url = url.replace('[/showFacetCounts]', '')
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) url = url.replace('[/showZeroFacetCountsForSchools]', '')
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/subject1]') !== -1) url = url.replace('[/subject1]', '')
		if (url.indexOf('[/subject2]') !== -1) url = url.replace('[/subject2]', '')
		if (url.indexOf('[/subject3]') !== -1) url = url.replace('[/subject3]', '')
		if (url.indexOf('[/subject4]') !== -1) url = url.replace('[/subject4]', '')
		if (url.indexOf('[/subject5]') !== -1) url = url.replace('[/subject5]', '')
		if (url.indexOf('[/subject6]') !== -1) url = url.replace('[/subject6]', '')
		if (url.indexOf('[/subject7]') !== -1) url = url.replace('[/subject7]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/teacherNotFunded]') !== -1) url = url.replace('[/teacherNotFunded]', '')
		if (url.indexOf('[/costToComplete]') !== -1) url = url.replace('[/costToComplete]', '')
		if (url.indexOf('[/costToCompleteRange]') !== -1) url = url.replace('[/costToCompleteRange]', '')
		if (url.indexOf('[/proposalType]') !== -1) url = url.replace('[/proposalType]', '')
		if (url.indexOf('[/proposalTypeCombo]') !== -1) url = url.replace('[/proposalTypeCombo]', '')
		if (url.indexOf('[/gradeType]') !== -1) url = url.replace('[/gradeType]', '')
		if (url.indexOf('[/resourceUsage]') !== -1) url = url.replace('[/resourceUsage]', '')
		if (url.indexOf('[/teacherType]') !== -1) url = url.replace('[/teacherType]', '')
		if (url.indexOf('[/schoolType]') !== -1) url = url.replace('[/schoolType]', '')
		if (url.indexOf('[/challengeId]') !== -1) url = url.replace('[/challengeId]', '')
		if (url.indexOf('[/matchingId]') !== -1) url = url.replace('[/matchingId]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/community]') !== -1) url = url.replace('[/community]', '')
		if (url.indexOf('[/cityName]') !== -1) url = url.replace('[/cityName]', '')
		if (url.indexOf('[/countyName]') !== -1) url = url.replace('[/countyName]', '')
		if (url.indexOf('[/school]') !== -1) url = url.replace('[/school]', '')
		if (url.indexOf('[/sortBy]') !== -1) url = url.replace('[/sortBy]', '')
		if (url.indexOf('[/historical]') !== -1) url = url.replace('[/historical]', '')
		if (url.indexOf('[/nwLat]') !== -1) url = url.replace('[/nwLat]', '')
		if (url.indexOf('[/nwLng]') !== -1) url = url.replace('[/nwLng]', '')
		if (url.indexOf('[/seLat]') !== -1) url = url.replace('[/seLat]', '')
		if (url.indexOf('[/seLng]') !== -1) url = url.replace('[/seLng]', '')
		if (url.indexOf('[/centerLat]') !== -1) url = url.replace('[/centerLat]', '')
		if (url.indexOf('[/centerLng]') !== -1) url = url.replace('[/centerLng]', '')
		if (url.indexOf('[/radius]') !== -1) url = url.replace('[/radius]', '')
		if (url.indexOf('[/concise]') !== -1) url = url.replace('[/concise]', '')
		return http({provider:'donorschoose',url:url,method:'GET',params:args}, opts)
	},
	'geo.projects.near.me': function(args, opts) {
		var url = 'http://api.donorschoose.org/common/json_feed.html'
		args = args || {}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		var rgx = new RegExp('\{index\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['index'])
			if (args['index']) delete args['index']
		}
		if (url.indexOf('[/index]') !== -1) {
			url = url.replace('[/index]', '/' + args['index'])
			if (args['index']) delete args['index']
		}
		var rgx = new RegExp('\{max\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max'])
			if (args['max']) delete args['max']
		}
		if (url.indexOf('[/max]') !== -1) {
			url = url.replace('[/max]', '/' + args['max'])
			if (args['max']) delete args['max']
		}
		var rgx = new RegExp('\{showSynopsis\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		if (url.indexOf('[/showSynopsis]') !== -1) {
			url = url.replace('[/showSynopsis]', '/' + args['showSynopsis'])
			if (args['showSynopsis']) delete args['showSynopsis']
		}
		var rgx = new RegExp('\{showFacetCounts\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		if (url.indexOf('[/showFacetCounts]') !== -1) {
			url = url.replace('[/showFacetCounts]', '/' + args['showFacetCounts'])
			if (args['showFacetCounts']) delete args['showFacetCounts']
		}
		var rgx = new RegExp('\{showZeroFacetCountsForSchools\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) {
			url = url.replace('[/showZeroFacetCountsForSchools]', '/' + args['showZeroFacetCountsForSchools'])
			if (args['showZeroFacetCountsForSchools']) delete args['showZeroFacetCountsForSchools']
		}
		var rgx = new RegExp('\{keywords\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		if (url.indexOf('[/keywords]') !== -1) {
			url = url.replace('[/keywords]', '/' + args['keywords'])
			if (args['keywords']) delete args['keywords']
		}
		var rgx = new RegExp('\{subject1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		if (url.indexOf('[/subject1]') !== -1) {
			url = url.replace('[/subject1]', '/' + args['subject1'])
			if (args['subject1']) delete args['subject1']
		}
		var rgx = new RegExp('\{subject2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		if (url.indexOf('[/subject2]') !== -1) {
			url = url.replace('[/subject2]', '/' + args['subject2'])
			if (args['subject2']) delete args['subject2']
		}
		var rgx = new RegExp('\{subject3\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		if (url.indexOf('[/subject3]') !== -1) {
			url = url.replace('[/subject3]', '/' + args['subject3'])
			if (args['subject3']) delete args['subject3']
		}
		var rgx = new RegExp('\{subject4\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		if (url.indexOf('[/subject4]') !== -1) {
			url = url.replace('[/subject4]', '/' + args['subject4'])
			if (args['subject4']) delete args['subject4']
		}
		var rgx = new RegExp('\{subject5\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		if (url.indexOf('[/subject5]') !== -1) {
			url = url.replace('[/subject5]', '/' + args['subject5'])
			if (args['subject5']) delete args['subject5']
		}
		var rgx = new RegExp('\{subject6\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		if (url.indexOf('[/subject6]') !== -1) {
			url = url.replace('[/subject6]', '/' + args['subject6'])
			if (args['subject6']) delete args['subject6']
		}
		var rgx = new RegExp('\{subject7\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		if (url.indexOf('[/subject7]') !== -1) {
			url = url.replace('[/subject7]', '/' + args['subject7'])
			if (args['subject7']) delete args['subject7']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{partiallyFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		if (url.indexOf('[/partiallyFunded]') !== -1) {
			url = url.replace('[/partiallyFunded]', '/' + args['partiallyFunded'])
			if (args['partiallyFunded']) delete args['partiallyFunded']
		}
		var rgx = new RegExp('\{teacherNotFunded\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		if (url.indexOf('[/teacherNotFunded]') !== -1) {
			url = url.replace('[/teacherNotFunded]', '/' + args['teacherNotFunded'])
			if (args['teacherNotFunded']) delete args['teacherNotFunded']
		}
		var rgx = new RegExp('\{costToComplete\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		if (url.indexOf('[/costToComplete]') !== -1) {
			url = url.replace('[/costToComplete]', '/' + args['costToComplete'])
			if (args['costToComplete']) delete args['costToComplete']
		}
		var rgx = new RegExp('\{costToCompleteRange\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		if (url.indexOf('[/costToCompleteRange]') !== -1) {
			url = url.replace('[/costToCompleteRange]', '/' + args['costToCompleteRange'])
			if (args['costToCompleteRange']) delete args['costToCompleteRange']
		}
		var rgx = new RegExp('\{proposalType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		if (url.indexOf('[/proposalType]') !== -1) {
			url = url.replace('[/proposalType]', '/' + args['proposalType'])
			if (args['proposalType']) delete args['proposalType']
		}
		var rgx = new RegExp('\{proposalTypeCombo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		if (url.indexOf('[/proposalTypeCombo]') !== -1) {
			url = url.replace('[/proposalTypeCombo]', '/' + args['proposalTypeCombo'])
			if (args['proposalTypeCombo']) delete args['proposalTypeCombo']
		}
		var rgx = new RegExp('\{gradeType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		if (url.indexOf('[/gradeType]') !== -1) {
			url = url.replace('[/gradeType]', '/' + args['gradeType'])
			if (args['gradeType']) delete args['gradeType']
		}
		var rgx = new RegExp('\{resourceUsage\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		if (url.indexOf('[/resourceUsage]') !== -1) {
			url = url.replace('[/resourceUsage]', '/' + args['resourceUsage'])
			if (args['resourceUsage']) delete args['resourceUsage']
		}
		var rgx = new RegExp('\{teacherType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		if (url.indexOf('[/teacherType]') !== -1) {
			url = url.replace('[/teacherType]', '/' + args['teacherType'])
			if (args['teacherType']) delete args['teacherType']
		}
		var rgx = new RegExp('\{schoolType\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		if (url.indexOf('[/schoolType]') !== -1) {
			url = url.replace('[/schoolType]', '/' + args['schoolType'])
			if (args['schoolType']) delete args['schoolType']
		}
		var rgx = new RegExp('\{challengeId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		if (url.indexOf('[/challengeId]') !== -1) {
			url = url.replace('[/challengeId]', '/' + args['challengeId'])
			if (args['challengeId']) delete args['challengeId']
		}
		var rgx = new RegExp('\{matchingId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		if (url.indexOf('[/matchingId]') !== -1) {
			url = url.replace('[/matchingId]', '/' + args['matchingId'])
			if (args['matchingId']) delete args['matchingId']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{community\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['community'])
			if (args['community']) delete args['community']
		}
		if (url.indexOf('[/community]') !== -1) {
			url = url.replace('[/community]', '/' + args['community'])
			if (args['community']) delete args['community']
		}
		var rgx = new RegExp('\{cityName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		if (url.indexOf('[/cityName]') !== -1) {
			url = url.replace('[/cityName]', '/' + args['cityName'])
			if (args['cityName']) delete args['cityName']
		}
		var rgx = new RegExp('\{countyName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		if (url.indexOf('[/countyName]') !== -1) {
			url = url.replace('[/countyName]', '/' + args['countyName'])
			if (args['countyName']) delete args['countyName']
		}
		var rgx = new RegExp('\{school\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['school'])
			if (args['school']) delete args['school']
		}
		if (url.indexOf('[/school]') !== -1) {
			url = url.replace('[/school]', '/' + args['school'])
			if (args['school']) delete args['school']
		}
		var rgx = new RegExp('\{sortBy\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		if (url.indexOf('[/sortBy]') !== -1) {
			url = url.replace('[/sortBy]', '/' + args['sortBy'])
			if (args['sortBy']) delete args['sortBy']
		}
		var rgx = new RegExp('\{historical\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['historical'])
			if (args['historical']) delete args['historical']
		}
		if (url.indexOf('[/historical]') !== -1) {
			url = url.replace('[/historical]', '/' + args['historical'])
			if (args['historical']) delete args['historical']
		}
		var rgx = new RegExp('\{nwLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		if (url.indexOf('[/nwLat]') !== -1) {
			url = url.replace('[/nwLat]', '/' + args['nwLat'])
			if (args['nwLat']) delete args['nwLat']
		}
		var rgx = new RegExp('\{nwLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		if (url.indexOf('[/nwLng]') !== -1) {
			url = url.replace('[/nwLng]', '/' + args['nwLng'])
			if (args['nwLng']) delete args['nwLng']
		}
		var rgx = new RegExp('\{seLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		if (url.indexOf('[/seLat]') !== -1) {
			url = url.replace('[/seLat]', '/' + args['seLat'])
			if (args['seLat']) delete args['seLat']
		}
		var rgx = new RegExp('\{seLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		if (url.indexOf('[/seLng]') !== -1) {
			url = url.replace('[/seLng]', '/' + args['seLng'])
			if (args['seLng']) delete args['seLng']
		}
		var rgx = new RegExp('\{centerLat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		if (url.indexOf('[/centerLat]') !== -1) {
			url = url.replace('[/centerLat]', '/' + args['centerLat'])
			if (args['centerLat']) delete args['centerLat']
		}
		var rgx = new RegExp('\{centerLng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		if (url.indexOf('[/centerLng]') !== -1) {
			url = url.replace('[/centerLng]', '/' + args['centerLng'])
			if (args['centerLng']) delete args['centerLng']
		}
		var rgx = new RegExp('\{radius\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['radius'])
			if (args['radius']) delete args['radius']
		}
		if (url.indexOf('[/radius]') !== -1) {
			url = url.replace('[/radius]', '/' + args['radius'])
			if (args['radius']) delete args['radius']
		}
		var rgx = new RegExp('\{concise\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/concise]') !== -1) {
			url = url.replace('[/concise]', '/' + args['concise'])
			if (args['concise']) delete args['concise']
		}
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/index]') !== -1) url = url.replace('[/index]', '')
		if (url.indexOf('[/max]') !== -1) url = url.replace('[/max]', '')
		if (url.indexOf('[/showSynopsis]') !== -1) url = url.replace('[/showSynopsis]', '')
		if (url.indexOf('[/showFacetCounts]') !== -1) url = url.replace('[/showFacetCounts]', '')
		if (url.indexOf('[/showZeroFacetCountsForSchools]') !== -1) url = url.replace('[/showZeroFacetCountsForSchools]', '')
		if (url.indexOf('[/keywords]') !== -1) url = url.replace('[/keywords]', '')
		if (url.indexOf('[/subject1]') !== -1) url = url.replace('[/subject1]', '')
		if (url.indexOf('[/subject2]') !== -1) url = url.replace('[/subject2]', '')
		if (url.indexOf('[/subject3]') !== -1) url = url.replace('[/subject3]', '')
		if (url.indexOf('[/subject4]') !== -1) url = url.replace('[/subject4]', '')
		if (url.indexOf('[/subject5]') !== -1) url = url.replace('[/subject5]', '')
		if (url.indexOf('[/subject6]') !== -1) url = url.replace('[/subject6]', '')
		if (url.indexOf('[/subject7]') !== -1) url = url.replace('[/subject7]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/partiallyFunded]') !== -1) url = url.replace('[/partiallyFunded]', '')
		if (url.indexOf('[/teacherNotFunded]') !== -1) url = url.replace('[/teacherNotFunded]', '')
		if (url.indexOf('[/costToComplete]') !== -1) url = url.replace('[/costToComplete]', '')
		if (url.indexOf('[/costToCompleteRange]') !== -1) url = url.replace('[/costToCompleteRange]', '')
		if (url.indexOf('[/proposalType]') !== -1) url = url.replace('[/proposalType]', '')
		if (url.indexOf('[/proposalTypeCombo]') !== -1) url = url.replace('[/proposalTypeCombo]', '')
		if (url.indexOf('[/gradeType]') !== -1) url = url.replace('[/gradeType]', '')
		if (url.indexOf('[/resourceUsage]') !== -1) url = url.replace('[/resourceUsage]', '')
		if (url.indexOf('[/teacherType]') !== -1) url = url.replace('[/teacherType]', '')
		if (url.indexOf('[/schoolType]') !== -1) url = url.replace('[/schoolType]', '')
		if (url.indexOf('[/challengeId]') !== -1) url = url.replace('[/challengeId]', '')
		if (url.indexOf('[/matchingId]') !== -1) url = url.replace('[/matchingId]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/community]') !== -1) url = url.replace('[/community]', '')
		if (url.indexOf('[/cityName]') !== -1) url = url.replace('[/cityName]', '')
		if (url.indexOf('[/countyName]') !== -1) url = url.replace('[/countyName]', '')
		if (url.indexOf('[/school]') !== -1) url = url.replace('[/school]', '')
		if (url.indexOf('[/sortBy]') !== -1) url = url.replace('[/sortBy]', '')
		if (url.indexOf('[/historical]') !== -1) url = url.replace('[/historical]', '')
		if (url.indexOf('[/nwLat]') !== -1) url = url.replace('[/nwLat]', '')
		if (url.indexOf('[/nwLng]') !== -1) url = url.replace('[/nwLng]', '')
		if (url.indexOf('[/seLat]') !== -1) url = url.replace('[/seLat]', '')
		if (url.indexOf('[/seLng]') !== -1) url = url.replace('[/seLng]', '')
		if (url.indexOf('[/centerLat]') !== -1) url = url.replace('[/centerLat]', '')
		if (url.indexOf('[/centerLng]') !== -1) url = url.replace('[/centerLng]', '')
		if (url.indexOf('[/radius]') !== -1) url = url.replace('[/radius]', '')
		if (url.indexOf('[/concise]') !== -1) url = url.replace('[/concise]', '')
		return http({provider:'donorschoose',url:url,method:'GET',params:args}, opts)
	},
	'giving.page': function(args, opts) {
		var url = 'http://api.donorschoose.org/common/json_challenge.html'
		args = args || {}
		if (args['id'] == null) throw new Error('id is a required parameter')
		var rgx = new RegExp('\{id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) {
			url = url.replace('[/id]', '/' + args['id'])
			if (args['id']) delete args['id']
		}
		if (url.indexOf('[/id]') !== -1) url = url.replace('[/id]', '')
		return http({provider:'donorschoose',url:url,method:'GET',params:args}, opts)
	},
	'generate.gift.code': function(args, opts) {
		var url = 'https://apisecure.donorschoose.org/common/json_api.html'
		args = args || {}
		if (args['action'] == null) throw new Error('action is a required parameter')
		var rgx = new RegExp('\{action\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['action'])
			if (args['action']) delete args['action']
		}
		if (url.indexOf('[/action]') !== -1) {
			url = url.replace('[/action]', '/' + args['action'])
			if (args['action']) delete args['action']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (args['amount'] == null) throw new Error('amount is a required parameter')
		var rgx = new RegExp('\{amount\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['amount'])
			if (args['amount']) delete args['amount']
		}
		if (url.indexOf('[/amount]') !== -1) {
			url = url.replace('[/amount]', '/' + args['amount'])
			if (args['amount']) delete args['amount']
		}
		var rgx = new RegExp('\{expirationMonths\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['expirationMonths'])
			if (args['expirationMonths']) delete args['expirationMonths']
		}
		if (url.indexOf('[/expirationMonths]') !== -1) {
			url = url.replace('[/expirationMonths]', '/' + args['expirationMonths'])
			if (args['expirationMonths']) delete args['expirationMonths']
		}
		if (url.indexOf('[/action]') !== -1) url = url.replace('[/action]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/amount]') !== -1) url = url.replace('[/amount]', '')
		if (url.indexOf('[/expirationMonths]') !== -1) url = url.replace('[/expirationMonths]', '')
		return http({provider:'donorschoose',url:url,method:'POST',params:args}, opts)
	},
	'project.donation': function(args, opts) {
		var url = 'https://apisecure.donorschoose.org/common/json_api.html'
		args = args || {}
		if (args['action'] == null) throw new Error('action is a required parameter')
		var rgx = new RegExp('\{action\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['action'])
			if (args['action']) delete args['action']
		}
		if (url.indexOf('[/action]') !== -1) {
			url = url.replace('[/action]', '/' + args['action'])
			if (args['action']) delete args['action']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (args['amount'] == null) throw new Error('amount is a required parameter')
		var rgx = new RegExp('\{amount\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['amount'])
			if (args['amount']) delete args['amount']
		}
		if (url.indexOf('[/amount]') !== -1) {
			url = url.replace('[/amount]', '/' + args['amount'])
			if (args['amount']) delete args['amount']
		}
		if (args['proposalId'] == null) throw new Error('proposalId is a required parameter')
		var rgx = new RegExp('\{proposalId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['proposalId'])
			if (args['proposalId']) delete args['proposalId']
		}
		if (url.indexOf('[/proposalId]') !== -1) {
			url = url.replace('[/proposalId]', '/' + args['proposalId'])
			if (args['proposalId']) delete args['proposalId']
		}
		if (args['email'] == null) throw new Error('email is a required parameter')
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		if (args['first'] == null) throw new Error('first is a required parameter')
		var rgx = new RegExp('\{first\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first'])
			if (args['first']) delete args['first']
		}
		if (url.indexOf('[/first]') !== -1) {
			url = url.replace('[/first]', '/' + args['first'])
			if (args['first']) delete args['first']
		}
		if (args['last'] == null) throw new Error('last is a required parameter')
		var rgx = new RegExp('\{last\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['last'])
			if (args['last']) delete args['last']
		}
		if (url.indexOf('[/last]') !== -1) {
			url = url.replace('[/last]', '/' + args['last'])
			if (args['last']) delete args['last']
		}
		var rgx = new RegExp('\{salutation\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['salutation'])
			if (args['salutation']) delete args['salutation']
		}
		if (url.indexOf('[/salutation]') !== -1) {
			url = url.replace('[/salutation]', '/' + args['salutation'])
			if (args['salutation']) delete args['salutation']
		}
		var rgx = new RegExp('\{address1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address1'])
			if (args['address1']) delete args['address1']
		}
		if (url.indexOf('[/address1]') !== -1) {
			url = url.replace('[/address1]', '/' + args['address1'])
			if (args['address1']) delete args['address1']
		}
		var rgx = new RegExp('\{address2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address2'])
			if (args['address2']) delete args['address2']
		}
		if (url.indexOf('[/address2]') !== -1) {
			url = url.replace('[/address2]', '/' + args['address2'])
			if (args['address2']) delete args['address2']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/action]') !== -1) url = url.replace('[/action]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/amount]') !== -1) url = url.replace('[/amount]', '')
		if (url.indexOf('[/proposalId]') !== -1) url = url.replace('[/proposalId]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/first]') !== -1) url = url.replace('[/first]', '')
		if (url.indexOf('[/last]') !== -1) url = url.replace('[/last]', '')
		if (url.indexOf('[/salutation]') !== -1) url = url.replace('[/salutation]', '')
		if (url.indexOf('[/address1]') !== -1) url = url.replace('[/address1]', '')
		if (url.indexOf('[/address2]') !== -1) url = url.replace('[/address2]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		return http({provider:'donorschoose',url:url,method:'POST',params:args}, opts)
	}
})