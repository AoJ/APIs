/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'foursquare'})},
	'getUser': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'searchUser': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/search'
		args = args || {}
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		var rgx = new RegExp('\{email\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['email'])
			if (args['email']) delete args['email']
		}
		if (url.indexOf('[/email]') !== -1) {
			url = url.replace('[/email]', '/' + args['email'])
			if (args['email']) delete args['email']
		}
		var rgx = new RegExp('\{twitter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['twitter'])
			if (args['twitter']) delete args['twitter']
		}
		if (url.indexOf('[/twitter]') !== -1) {
			url = url.replace('[/twitter]', '/' + args['twitter'])
			if (args['twitter']) delete args['twitter']
		}
		var rgx = new RegExp('\{twitterSource\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['twitterSource'])
			if (args['twitterSource']) delete args['twitterSource']
		}
		if (url.indexOf('[/twitterSource]') !== -1) {
			url = url.replace('[/twitterSource]', '/' + args['twitterSource'])
			if (args['twitterSource']) delete args['twitterSource']
		}
		var rgx = new RegExp('\{fbid\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fbid'])
			if (args['fbid']) delete args['fbid']
		}
		if (url.indexOf('[/fbid]') !== -1) {
			url = url.replace('[/fbid]', '/' + args['fbid'])
			if (args['fbid']) delete args['fbid']
		}
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/email]') !== -1) url = url.replace('[/email]', '')
		if (url.indexOf('[/twitter]') !== -1) url = url.replace('[/twitter]', '')
		if (url.indexOf('[/twitterSource]') !== -1) url = url.replace('[/twitterSource]', '')
		if (url.indexOf('[/fbid]') !== -1) url = url.replace('[/fbid]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getRequests': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/requests'
		args = args || {}
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getBadges': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/badges'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getUserCheckins': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/checkins'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{afterTimestamp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['afterTimestamp'])
			if (args['afterTimestamp']) delete args['afterTimestamp']
		}
		if (url.indexOf('[/afterTimestamp]') !== -1) {
			url = url.replace('[/afterTimestamp]', '/' + args['afterTimestamp'])
			if (args['afterTimestamp']) delete args['afterTimestamp']
		}
		var rgx = new RegExp('\{beforeTimestamp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['beforeTimestamp'])
			if (args['beforeTimestamp']) delete args['beforeTimestamp']
		}
		if (url.indexOf('[/beforeTimestamp]') !== -1) {
			url = url.replace('[/beforeTimestamp]', '/' + args['beforeTimestamp'])
			if (args['beforeTimestamp']) delete args['beforeTimestamp']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/afterTimestamp]') !== -1) url = url.replace('[/afterTimestamp]', '')
		if (url.indexOf('[/beforeTimestamp]') !== -1) url = url.replace('[/beforeTimestamp]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getFriends': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/friends'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getUserTips': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/tips'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getTodos': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/todos'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (args['ll'] == null) throw new Error('ll is a required parameter')
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getVenueHistory': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/venuehistory'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'sendRequest': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/request'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'unfriendUser': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/unfriend'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'approveFriend': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/approve'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'denyFriend': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/deny'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'setPings': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/users/{user}/setpings'
		args = args || {}
		if (args['user'] == null) throw new Error('user is a required parameter')
		var rgx = new RegExp('\{user\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user'])
			if (args['user']) delete args['user']
		}
		if (url.indexOf('[/user]') !== -1) {
			url = url.replace('[/user]', '/' + args['user'])
			if (args['user']) delete args['user']
		}
		if (args['value'] == null) throw new Error('value is a required parameter')
		var rgx = new RegExp('\{value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['value'])
			if (args['value']) delete args['value']
		}
		if (url.indexOf('[/value]') !== -1) {
			url = url.replace('[/value]', '/' + args['value'])
			if (args['value']) delete args['value']
		}
		if (url.indexOf('[/user]') !== -1) url = url.replace('[/user]', '')
		if (url.indexOf('[/value]') !== -1) url = url.replace('[/value]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'getVenue': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/{venue}'
		args = args || {}
		if (args['venue'] == null) throw new Error('venue is a required parameter')
		var rgx = new RegExp('\{venue\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) {
			url = url.replace('[/venue]', '/' + args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) url = url.replace('[/venue]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'addVenue': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/add'
		args = args || {}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		var rgx = new RegExp('\{crossStreet\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['crossStreet'])
			if (args['crossStreet']) delete args['crossStreet']
		}
		if (url.indexOf('[/crossStreet]') !== -1) {
			url = url.replace('[/crossStreet]', '/' + args['crossStreet'])
			if (args['crossStreet']) delete args['crossStreet']
		}
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (args['ll'] == null) throw new Error('ll is a required parameter')
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		var rgx = new RegExp('\{primaryCategoryId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['primaryCategoryId'])
			if (args['primaryCategoryId']) delete args['primaryCategoryId']
		}
		if (url.indexOf('[/primaryCategoryId]') !== -1) {
			url = url.replace('[/primaryCategoryId]', '/' + args['primaryCategoryId'])
			if (args['primaryCategoryId']) delete args['primaryCategoryId']
		}
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/crossStreet]') !== -1) url = url.replace('[/crossStreet]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		if (url.indexOf('[/primaryCategoryId]') !== -1) url = url.replace('[/primaryCategoryId]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'getCategories': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/categories'
		args = args || {}
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'searchVenue': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/search'
		args = args || {}
		if (args['ll'] == null) throw new Error('ll is a required parameter')
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		var rgx = new RegExp('\{llAcc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['llAcc'])
			if (args['llAcc']) delete args['llAcc']
		}
		if (url.indexOf('[/llAcc]') !== -1) {
			url = url.replace('[/llAcc]', '/' + args['llAcc'])
			if (args['llAcc']) delete args['llAcc']
		}
		var rgx = new RegExp('\{alt\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['alt'])
			if (args['alt']) delete args['alt']
		}
		if (url.indexOf('[/alt]') !== -1) {
			url = url.replace('[/alt]', '/' + args['alt'])
			if (args['alt']) delete args['alt']
		}
		var rgx = new RegExp('\{altAcc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['altAcc'])
			if (args['altAcc']) delete args['altAcc']
		}
		if (url.indexOf('[/altAcc]') !== -1) {
			url = url.replace('[/altAcc]', '/' + args['altAcc'])
			if (args['altAcc']) delete args['altAcc']
		}
		var rgx = new RegExp('\{query\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['query'])
			if (args['query']) delete args['query']
		}
		if (url.indexOf('[/query]') !== -1) {
			url = url.replace('[/query]', '/' + args['query'])
			if (args['query']) delete args['query']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		if (url.indexOf('[/llAcc]') !== -1) url = url.replace('[/llAcc]', '')
		if (url.indexOf('[/alt]') !== -1) url = url.replace('[/alt]', '')
		if (url.indexOf('[/altAcc]') !== -1) url = url.replace('[/altAcc]', '')
		if (url.indexOf('[/query]') !== -1) url = url.replace('[/query]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getVenueDetails': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/{venue}/herenow'
		args = args || {}
		if (args['venue'] == null) throw new Error('venue is a required parameter')
		var rgx = new RegExp('\{venue\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) {
			url = url.replace('[/venue]', '/' + args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) url = url.replace('[/venue]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getVenueTips': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/{venue}/tips'
		args = args || {}
		if (args['venue'] == null) throw new Error('venue is a required parameter')
		var rgx = new RegExp('\{venue\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) {
			url = url.replace('[/venue]', '/' + args['venue'])
			if (args['venue']) delete args['venue']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/venue]') !== -1) url = url.replace('[/venue]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getVenuePhotos': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/{venue}/photos'
		args = args || {}
		if (args['venue'] == null) throw new Error('venue is a required parameter')
		var rgx = new RegExp('\{venue\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) {
			url = url.replace('[/venue]', '/' + args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (args['group'] == null) throw new Error('group is a required parameter')
		var rgx = new RegExp('\{group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['group'])
			if (args['group']) delete args['group']
		}
		if (url.indexOf('[/group]') !== -1) {
			url = url.replace('[/group]', '/' + args['group'])
			if (args['group']) delete args['group']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/venue]') !== -1) url = url.replace('[/venue]', '')
		if (url.indexOf('[/group]') !== -1) url = url.replace('[/group]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'markToDo': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/{venue}/marktodo'
		args = args || {}
		if (args['venue'] == null) throw new Error('venue is a required parameter')
		var rgx = new RegExp('\{venue\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) {
			url = url.replace('[/venue]', '/' + args['venue'])
			if (args['venue']) delete args['venue']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/venue]') !== -1) url = url.replace('[/venue]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'flagVenue': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/{venue}/flag'
		args = args || {}
		if (args['venue'] == null) throw new Error('venue is a required parameter')
		var rgx = new RegExp('\{venue\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) {
			url = url.replace('[/venue]', '/' + args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (args['problem'] == null) throw new Error('problem is a required parameter')
		var rgx = new RegExp('\{problem\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['problem'])
			if (args['problem']) delete args['problem']
		}
		if (url.indexOf('[/problem]') !== -1) {
			url = url.replace('[/problem]', '/' + args['problem'])
			if (args['problem']) delete args['problem']
		}
		if (url.indexOf('[/venue]') !== -1) url = url.replace('[/venue]', '')
		if (url.indexOf('[/problem]') !== -1) url = url.replace('[/problem]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'editVenue': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/venues/{venue}/proposeedit'
		args = args || {}
		if (args['venue'] == null) throw new Error('venue is a required parameter')
		var rgx = new RegExp('\{venue\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) {
			url = url.replace('[/venue]', '/' + args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		if (args['address'] == null) throw new Error('address is a required parameter')
		var rgx = new RegExp('\{address\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['address'])
			if (args['address']) delete args['address']
		}
		if (url.indexOf('[/address]') !== -1) {
			url = url.replace('[/address]', '/' + args['address'])
			if (args['address']) delete args['address']
		}
		var rgx = new RegExp('\{crossStreet\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['crossStreet'])
			if (args['crossStreet']) delete args['crossStreet']
		}
		if (url.indexOf('[/crossStreet]') !== -1) {
			url = url.replace('[/crossStreet]', '/' + args['crossStreet'])
			if (args['crossStreet']) delete args['crossStreet']
		}
		if (args['city'] == null) throw new Error('city is a required parameter')
		var rgx = new RegExp('\{city\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['city'])
			if (args['city']) delete args['city']
		}
		if (url.indexOf('[/city]') !== -1) {
			url = url.replace('[/city]', '/' + args['city'])
			if (args['city']) delete args['city']
		}
		if (args['state'] == null) throw new Error('state is a required parameter')
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{phone\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (url.indexOf('[/phone]') !== -1) {
			url = url.replace('[/phone]', '/' + args['phone'])
			if (args['phone']) delete args['phone']
		}
		if (args['ll'] == null) throw new Error('ll is a required parameter')
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		var rgx = new RegExp('\{primaryCategoryId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['primaryCategoryId'])
			if (args['primaryCategoryId']) delete args['primaryCategoryId']
		}
		if (url.indexOf('[/primaryCategoryId]') !== -1) {
			url = url.replace('[/primaryCategoryId]', '/' + args['primaryCategoryId'])
			if (args['primaryCategoryId']) delete args['primaryCategoryId']
		}
		if (url.indexOf('[/venue]') !== -1) url = url.replace('[/venue]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/address]') !== -1) url = url.replace('[/address]', '')
		if (url.indexOf('[/crossStreet]') !== -1) url = url.replace('[/crossStreet]', '')
		if (url.indexOf('[/city]') !== -1) url = url.replace('[/city]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/phone]') !== -1) url = url.replace('[/phone]', '')
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		if (url.indexOf('[/primaryCategoryId]') !== -1) url = url.replace('[/primaryCategoryId]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'getTip': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/tips/{tip}'
		args = args || {}
		if (args['tip'] == null) throw new Error('tip is a required parameter')
		var rgx = new RegExp('\{tip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tip'])
			if (args['tip']) delete args['tip']
		}
		if (url.indexOf('[/tip]') !== -1) {
			url = url.replace('[/tip]', '/' + args['tip'])
			if (args['tip']) delete args['tip']
		}
		if (url.indexOf('[/tip]') !== -1) url = url.replace('[/tip]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'addTip': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/tips/add'
		args = args || {}
		if (args['venueId'] == null) throw new Error('venueId is a required parameter')
		var rgx = new RegExp('\{venueId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venueId'])
			if (args['venueId']) delete args['venueId']
		}
		if (url.indexOf('[/venueId]') !== -1) {
			url = url.replace('[/venueId]', '/' + args['venueId'])
			if (args['venueId']) delete args['venueId']
		}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/venueId]') !== -1) url = url.replace('[/venueId]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'getTips': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/tips/search'
		args = args || {}
		if (args['ll'] == null) throw new Error('ll is a required parameter')
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{query\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['query'])
			if (args['query']) delete args['query']
		}
		if (url.indexOf('[/query]') !== -1) {
			url = url.replace('[/query]', '/' + args['query'])
			if (args['query']) delete args['query']
		}
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/query]') !== -1) url = url.replace('[/query]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'markToDoTip': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/tips/{tip}/marktodo'
		args = args || {}
		if (args['tip'] == null) throw new Error('tip is a required parameter')
		var rgx = new RegExp('\{tip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tip'])
			if (args['tip']) delete args['tip']
		}
		if (url.indexOf('[/tip]') !== -1) {
			url = url.replace('[/tip]', '/' + args['tip'])
			if (args['tip']) delete args['tip']
		}
		if (url.indexOf('[/tip]') !== -1) url = url.replace('[/tip]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'markdoneTip': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/tips/{tip}/markdone'
		args = args || {}
		if (args['tip'] == null) throw new Error('tip is a required parameter')
		var rgx = new RegExp('\{tip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tip'])
			if (args['tip']) delete args['tip']
		}
		if (url.indexOf('[/tip]') !== -1) {
			url = url.replace('[/tip]', '/' + args['tip'])
			if (args['tip']) delete args['tip']
		}
		if (url.indexOf('[/tip]') !== -1) url = url.replace('[/tip]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'unmarkTip': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/tips/{tip}/unmark'
		args = args || {}
		if (args['tip'] == null) throw new Error('tip is a required parameter')
		var rgx = new RegExp('\{tip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tip'])
			if (args['tip']) delete args['tip']
		}
		if (url.indexOf('[/tip]') !== -1) {
			url = url.replace('[/tip]', '/' + args['tip'])
			if (args['tip']) delete args['tip']
		}
		if (url.indexOf('[/tip]') !== -1) url = url.replace('[/tip]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'getCheckinDetails': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/checkins/{checkin}'
		args = args || {}
		if (args['checkin'] == null) throw new Error('checkin is a required parameter')
		var rgx = new RegExp('\{checkin\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['checkin'])
			if (args['checkin']) delete args['checkin']
		}
		if (url.indexOf('[/checkin]') !== -1) {
			url = url.replace('[/checkin]', '/' + args['checkin'])
			if (args['checkin']) delete args['checkin']
		}
		if (url.indexOf('[/checkin]') !== -1) url = url.replace('[/checkin]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'checkin': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/checkins/add'
		args = args || {}
		if (args['venueId'] == null) throw new Error('venueId is a required parameter')
		var rgx = new RegExp('\{venueId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venueId'])
			if (args['venueId']) delete args['venueId']
		}
		if (url.indexOf('[/venueId]') !== -1) {
			url = url.replace('[/venueId]', '/' + args['venueId'])
			if (args['venueId']) delete args['venueId']
		}
		var rgx = new RegExp('\{venue\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venue'])
			if (args['venue']) delete args['venue']
		}
		if (url.indexOf('[/venue]') !== -1) {
			url = url.replace('[/venue]', '/' + args['venue'])
			if (args['venue']) delete args['venue']
		}
		var rgx = new RegExp('\{shout\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['shout'])
			if (args['shout']) delete args['shout']
		}
		if (url.indexOf('[/shout]') !== -1) {
			url = url.replace('[/shout]', '/' + args['shout'])
			if (args['shout']) delete args['shout']
		}
		if (args['broadcast'] == null) throw new Error('broadcast is a required parameter')
		var rgx = new RegExp('\{broadcast\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['broadcast'])
			if (args['broadcast']) delete args['broadcast']
		}
		if (url.indexOf('[/broadcast]') !== -1) {
			url = url.replace('[/broadcast]', '/' + args['broadcast'])
			if (args['broadcast']) delete args['broadcast']
		}
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		var rgx = new RegExp('\{llAcc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['llAcc'])
			if (args['llAcc']) delete args['llAcc']
		}
		if (url.indexOf('[/llAcc]') !== -1) {
			url = url.replace('[/llAcc]', '/' + args['llAcc'])
			if (args['llAcc']) delete args['llAcc']
		}
		var rgx = new RegExp('\{alt\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['alt'])
			if (args['alt']) delete args['alt']
		}
		if (url.indexOf('[/alt]') !== -1) {
			url = url.replace('[/alt]', '/' + args['alt'])
			if (args['alt']) delete args['alt']
		}
		var rgx = new RegExp('\{altAcc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['altAcc'])
			if (args['altAcc']) delete args['altAcc']
		}
		if (url.indexOf('[/altAcc]') !== -1) {
			url = url.replace('[/altAcc]', '/' + args['altAcc'])
			if (args['altAcc']) delete args['altAcc']
		}
		if (url.indexOf('[/venueId]') !== -1) url = url.replace('[/venueId]', '')
		if (url.indexOf('[/venue]') !== -1) url = url.replace('[/venue]', '')
		if (url.indexOf('[/shout]') !== -1) url = url.replace('[/shout]', '')
		if (url.indexOf('[/broadcast]') !== -1) url = url.replace('[/broadcast]', '')
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		if (url.indexOf('[/llAcc]') !== -1) url = url.replace('[/llAcc]', '')
		if (url.indexOf('[/alt]') !== -1) url = url.replace('[/alt]', '')
		if (url.indexOf('[/altAcc]') !== -1) url = url.replace('[/altAcc]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'getCheckins': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/checkins/recent'
		args = args || {}
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{afterTimestamp\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['afterTimestamp'])
			if (args['afterTimestamp']) delete args['afterTimestamp']
		}
		if (url.indexOf('[/afterTimestamp]') !== -1) {
			url = url.replace('[/afterTimestamp]', '/' + args['afterTimestamp'])
			if (args['afterTimestamp']) delete args['afterTimestamp']
		}
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/afterTimestamp]') !== -1) url = url.replace('[/afterTimestamp]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'addCheckinComment': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/checkins/{checkin}/addcomment'
		args = args || {}
		if (args['checkin'] == null) throw new Error('checkin is a required parameter')
		var rgx = new RegExp('\{checkin\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['checkin'])
			if (args['checkin']) delete args['checkin']
		}
		if (url.indexOf('[/checkin]') !== -1) {
			url = url.replace('[/checkin]', '/' + args['checkin'])
			if (args['checkin']) delete args['checkin']
		}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/checkin]') !== -1) url = url.replace('[/checkin]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'removeCheckinComment': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/checkins/{checkin}/deletecomment'
		args = args || {}
		if (args['checkin'] == null) throw new Error('checkin is a required parameter')
		var rgx = new RegExp('\{checkin\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['checkin'])
			if (args['checkin']) delete args['checkin']
		}
		if (url.indexOf('[/checkin]') !== -1) {
			url = url.replace('[/checkin]', '/' + args['checkin'])
			if (args['checkin']) delete args['checkin']
		}
		if (args['commentId'] == null) throw new Error('commentId is a required parameter')
		var rgx = new RegExp('\{commentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['commentId'])
			if (args['commentId']) delete args['commentId']
		}
		if (url.indexOf('[/commentId]') !== -1) {
			url = url.replace('[/commentId]', '/' + args['commentId'])
			if (args['commentId']) delete args['commentId']
		}
		if (url.indexOf('[/checkin]') !== -1) url = url.replace('[/checkin]', '')
		if (url.indexOf('[/commentId]') !== -1) url = url.replace('[/commentId]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'getPhotoDetails': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/photos/{photo}'
		args = args || {}
		if (args['photo'] == null) throw new Error('photo is a required parameter')
		var rgx = new RegExp('\{photo\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['photo'])
			if (args['photo']) delete args['photo']
		}
		if (url.indexOf('[/photo]') !== -1) {
			url = url.replace('[/photo]', '/' + args['photo'])
			if (args['photo']) delete args['photo']
		}
		if (url.indexOf('[/photo]') !== -1) url = url.replace('[/photo]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'addPhoto': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/photos/add'
		args = args || {}
		var rgx = new RegExp('\{checkinId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['checkinId'])
			if (args['checkinId']) delete args['checkinId']
		}
		if (url.indexOf('[/checkinId]') !== -1) {
			url = url.replace('[/checkinId]', '/' + args['checkinId'])
			if (args['checkinId']) delete args['checkinId']
		}
		var rgx = new RegExp('\{tipId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['tipId'])
			if (args['tipId']) delete args['tipId']
		}
		if (url.indexOf('[/tipId]') !== -1) {
			url = url.replace('[/tipId]', '/' + args['tipId'])
			if (args['tipId']) delete args['tipId']
		}
		var rgx = new RegExp('\{venueId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['venueId'])
			if (args['venueId']) delete args['venueId']
		}
		if (url.indexOf('[/venueId]') !== -1) {
			url = url.replace('[/venueId]', '/' + args['venueId'])
			if (args['venueId']) delete args['venueId']
		}
		var rgx = new RegExp('\{broadcast\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['broadcast'])
			if (args['broadcast']) delete args['broadcast']
		}
		if (url.indexOf('[/broadcast]') !== -1) {
			url = url.replace('[/broadcast]', '/' + args['broadcast'])
			if (args['broadcast']) delete args['broadcast']
		}
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		var rgx = new RegExp('\{llAcc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['llAcc'])
			if (args['llAcc']) delete args['llAcc']
		}
		if (url.indexOf('[/llAcc]') !== -1) {
			url = url.replace('[/llAcc]', '/' + args['llAcc'])
			if (args['llAcc']) delete args['llAcc']
		}
		var rgx = new RegExp('\{alt\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['alt'])
			if (args['alt']) delete args['alt']
		}
		if (url.indexOf('[/alt]') !== -1) {
			url = url.replace('[/alt]', '/' + args['alt'])
			if (args['alt']) delete args['alt']
		}
		var rgx = new RegExp('\{altAcc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['altAcc'])
			if (args['altAcc']) delete args['altAcc']
		}
		if (url.indexOf('[/altAcc]') !== -1) {
			url = url.replace('[/altAcc]', '/' + args['altAcc'])
			if (args['altAcc']) delete args['altAcc']
		}
		if (url.indexOf('[/checkinId]') !== -1) url = url.replace('[/checkinId]', '')
		if (url.indexOf('[/tipId]') !== -1) url = url.replace('[/tipId]', '')
		if (url.indexOf('[/venueId]') !== -1) url = url.replace('[/venueId]', '')
		if (url.indexOf('[/broadcast]') !== -1) url = url.replace('[/broadcast]', '')
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		if (url.indexOf('[/llAcc]') !== -1) url = url.replace('[/llAcc]', '')
		if (url.indexOf('[/alt]') !== -1) url = url.replace('[/alt]', '')
		if (url.indexOf('[/altAcc]') !== -1) url = url.replace('[/altAcc]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'getSpecialDetails': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/specials/{special}'
		args = args || {}
		if (args['special'] == null) throw new Error('special is a required parameter')
		var rgx = new RegExp('\{special\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['special'])
			if (args['special']) delete args['special']
		}
		if (url.indexOf('[/special]') !== -1) {
			url = url.replace('[/special]', '/' + args['special'])
			if (args['special']) delete args['special']
		}
		if (url.indexOf('[/special]') !== -1) url = url.replace('[/special]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getSpecials': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/specials/search'
		args = args || {}
		if (args['ll'] == null) throw new Error('ll is a required parameter')
		var rgx = new RegExp('\{ll\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['ll'])
			if (args['ll']) delete args['ll']
		}
		if (url.indexOf('[/ll]') !== -1) {
			url = url.replace('[/ll]', '/' + args['ll'])
			if (args['ll']) delete args['ll']
		}
		var rgx = new RegExp('\{llAcc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['llAcc'])
			if (args['llAcc']) delete args['llAcc']
		}
		if (url.indexOf('[/llAcc]') !== -1) {
			url = url.replace('[/llAcc]', '/' + args['llAcc'])
			if (args['llAcc']) delete args['llAcc']
		}
		var rgx = new RegExp('\{alt\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['alt'])
			if (args['alt']) delete args['alt']
		}
		if (url.indexOf('[/alt]') !== -1) {
			url = url.replace('[/alt]', '/' + args['alt'])
			if (args['alt']) delete args['alt']
		}
		var rgx = new RegExp('\{altAcc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['altAcc'])
			if (args['altAcc']) delete args['altAcc']
		}
		if (url.indexOf('[/altAcc]') !== -1) {
			url = url.replace('[/altAcc]', '/' + args['altAcc'])
			if (args['altAcc']) delete args['altAcc']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/ll]') !== -1) url = url.replace('[/ll]', '')
		if (url.indexOf('[/llAcc]') !== -1) url = url.replace('[/llAcc]', '')
		if (url.indexOf('[/alt]') !== -1) url = url.replace('[/alt]', '')
		if (url.indexOf('[/altAcc]') !== -1) url = url.replace('[/altAcc]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getSetting': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/settings/{setting}'
		args = args || {}
		if (args['setting'] == null) throw new Error('setting is a required parameter')
		var rgx = new RegExp('\{setting\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['setting'])
			if (args['setting']) delete args['setting']
		}
		if (url.indexOf('[/setting]') !== -1) {
			url = url.replace('[/setting]', '/' + args['setting'])
			if (args['setting']) delete args['setting']
		}
		if (url.indexOf('[/setting]') !== -1) url = url.replace('[/setting]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'getAllSettings': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/settings/all'
		args = args || {}
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	},
	'setSetting': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/settings/{setting}/set'
		args = args || {}
		if (args['setting'] == null) throw new Error('setting is a required parameter')
		var rgx = new RegExp('\{setting\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['setting'])
			if (args['setting']) delete args['setting']
		}
		if (url.indexOf('[/setting]') !== -1) {
			url = url.replace('[/setting]', '/' + args['setting'])
			if (args['setting']) delete args['setting']
		}
		if (args['value'] == null) throw new Error('value is a required parameter')
		var rgx = new RegExp('\{value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['value'])
			if (args['value']) delete args['value']
		}
		if (url.indexOf('[/value]') !== -1) {
			url = url.replace('[/value]', '/' + args['value'])
			if (args['value']) delete args['value']
		}
		if (url.indexOf('[/setting]') !== -1) url = url.replace('[/setting]', '')
		if (url.indexOf('[/value]') !== -1) url = url.replace('[/value]', '')
		return http({provider:'foursquare',url:url,method:'POST',params:args}, opts)
	},
	'multipleRequests': function(args, opts) {
		var url = 'https://api.foursquare.com/v2/multi'
		args = args || {}
		if (args['requests'] == null) throw new Error('requests is a required parameter')
		var rgx = new RegExp('\{requests\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['requests'])
			if (args['requests']) delete args['requests']
		}
		if (url.indexOf('[/requests]') !== -1) {
			url = url.replace('[/requests]', '/' + args['requests'])
			if (args['requests']) delete args['requests']
		}
		if (url.indexOf('[/requests]') !== -1) url = url.replace('[/requests]', '')
		return http({provider:'foursquare',url:url,method:'GET',params:args}, opts)
	}
})