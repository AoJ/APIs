/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'salesforcechatter'})},
	'commentGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/comments/{commentId}'
		args = args || {}
		if (args['commentId'] == null) throw new Error('commentId is a required parameter')
		var rgx = new RegExp('\{commentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['commentId'])
			if (args['commentId']) delete args['commentId']
		}
		if (url.indexOf('[/commentId]') !== -1) {
			url = url.replace('[/commentId]', '/' + args['commentId'])
			if (args['commentId']) delete args['commentId']
		}
		if (url.indexOf('[/commentId]') !== -1) url = url.replace('[/commentId]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'commentDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/comments/{commentId}'
		args = args || {}
		if (args['commentId'] == null) throw new Error('commentId is a required parameter')
		var rgx = new RegExp('\{commentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['commentId'])
			if (args['commentId']) delete args['commentId']
		}
		if (url.indexOf('[/commentId]') !== -1) {
			url = url.replace('[/commentId]', '/' + args['commentId'])
			if (args['commentId']) delete args['commentId']
		}
		if (url.indexOf('[/commentId]') !== -1) url = url.replace('[/commentId]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'feedItemGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feed-items/{feedItemId}'
		args = args || {}
		if (args['feedItemId'] == null) throw new Error('feedItemId is a required parameter')
		var rgx = new RegExp('\{feedItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (url.indexOf('[/feedItemId]') !== -1) {
			url = url.replace('[/feedItemId]', '/' + args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/feedItemId]') !== -1) url = url.replace('[/feedItemId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'feedItemDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feed-items/{feedItemId}'
		args = args || {}
		if (args['feedItemId'] == null) throw new Error('feedItemId is a required parameter')
		var rgx = new RegExp('\{feedItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (url.indexOf('[/feedItemId]') !== -1) {
			url = url.replace('[/feedItemId]', '/' + args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (url.indexOf('[/feedItemId]') !== -1) url = url.replace('[/feedItemId]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'feedItemCommentGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feed-items/{feedItemId}/comments'
		args = args || {}
		if (args['feedItemId'] == null) throw new Error('feedItemId is a required parameter')
		var rgx = new RegExp('\{feedItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (url.indexOf('[/feedItemId]') !== -1) {
			url = url.replace('[/feedItemId]', '/' + args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/feedItemId]') !== -1) url = url.replace('[/feedItemId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'feedItemCommentPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feed-items/{feedItemId}/comments'
		args = args || {}
		if (args['feedItemId'] == null) throw new Error('feedItemId is a required parameter')
		var rgx = new RegExp('\{feedItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (url.indexOf('[/feedItemId]') !== -1) {
			url = url.replace('[/feedItemId]', '/' + args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/feedItemId]') !== -1) url = url.replace('[/feedItemId]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'feedItemLikeGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feed-items/{feedItemId}/likes'
		args = args || {}
		if (args['feedItemId'] == null) throw new Error('feedItemId is a required parameter')
		var rgx = new RegExp('\{feedItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (url.indexOf('[/feedItemId]') !== -1) {
			url = url.replace('[/feedItemId]', '/' + args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/feedItemId]') !== -1) url = url.replace('[/feedItemId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'feedItemLikePost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feed-items/{feedItemId}/likes'
		args = args || {}
		if (args['feedItemId'] == null) throw new Error('feedItemId is a required parameter')
		var rgx = new RegExp('\{feedItemId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (url.indexOf('[/feedItemId]') !== -1) {
			url = url.replace('[/feedItemId]', '/' + args['feedItemId'])
			if (args['feedItemId']) delete args['feedItemId']
		}
		if (url.indexOf('[/feedItemId]') !== -1) url = url.replace('[/feedItemId]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'membershipGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/group-memberships/{membershipId}'
		args = args || {}
		if (args['membershipId'] == null) throw new Error('membershipId is a required parameter')
		var rgx = new RegExp('\{membershipId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['membershipId'])
			if (args['membershipId']) delete args['membershipId']
		}
		if (url.indexOf('[/membershipId]') !== -1) {
			url = url.replace('[/membershipId]', '/' + args['membershipId'])
			if (args['membershipId']) delete args['membershipId']
		}
		if (url.indexOf('[/membershipId]') !== -1) url = url.replace('[/membershipId]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'membershipDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/group-memberships/{membershipId}'
		args = args || {}
		if (args['membershipId'] == null) throw new Error('membershipId is a required parameter')
		var rgx = new RegExp('\{membershipId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['membershipId'])
			if (args['membershipId']) delete args['membershipId']
		}
		if (url.indexOf('[/membershipId]') !== -1) {
			url = url.replace('[/membershipId]', '/' + args['membershipId'])
			if (args['membershipId']) delete args['membershipId']
		}
		if (url.indexOf('[/membershipId]') !== -1) url = url.replace('[/membershipId]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'groupGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/groups/{groupId}'
		args = args || {}
		if (args['groupId'] == null) throw new Error('groupId is a required parameter')
		var rgx = new RegExp('\{groupId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) {
			url = url.replace('[/groupId]', '/' + args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) url = url.replace('[/groupId]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'groupMembersGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/groups/{groupId}/members'
		args = args || {}
		if (args['groupId'] == null) throw new Error('groupId is a required parameter')
		var rgx = new RegExp('\{groupId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) {
			url = url.replace('[/groupId]', '/' + args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/groupId]') !== -1) url = url.replace('[/groupId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'groupMembersPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/groups/{groupId}/members'
		args = args || {}
		if (args['groupId'] == null) throw new Error('groupId is a required parameter')
		var rgx = new RegExp('\{groupId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) {
			url = url.replace('[/groupId]', '/' + args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/groupId]') !== -1) url = url.replace('[/groupId]', '')
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'groupPhotosGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/groups/{groupId}/photos'
		args = args || {}
		if (args['groupId'] == null) throw new Error('groupId is a required parameter')
		var rgx = new RegExp('\{groupId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) {
			url = url.replace('[/groupId]', '/' + args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) url = url.replace('[/groupId]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'groupPhotosPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/groups/{groupId}/photos'
		args = args || {}
		if (args['groupId'] == null) throw new Error('groupId is a required parameter')
		var rgx = new RegExp('\{groupId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) {
			url = url.replace('[/groupId]', '/' + args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) url = url.replace('[/groupId]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'groupPhotosDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/groups/{groupId}/photos'
		args = args || {}
		if (args['groupId'] == null) throw new Error('groupId is a required parameter')
		var rgx = new RegExp('\{groupId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) {
			url = url.replace('[/groupId]', '/' + args['groupId'])
			if (args['groupId']) delete args['groupId']
		}
		if (url.indexOf('[/groupId]') !== -1) url = url.replace('[/groupId]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'likeGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/likes/{likeId}'
		args = args || {}
		if (args['likeId'] == null) throw new Error('likeId is a required parameter')
		var rgx = new RegExp('\{likeId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['likeId'])
			if (args['likeId']) delete args['likeId']
		}
		if (url.indexOf('[/likeId]') !== -1) {
			url = url.replace('[/likeId]', '/' + args['likeId'])
			if (args['likeId']) delete args['likeId']
		}
		if (url.indexOf('[/likeId]') !== -1) url = url.replace('[/likeId]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'likeDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/likes/{likeId}'
		args = args || {}
		if (args['likeId'] == null) throw new Error('likeId is a required parameter')
		var rgx = new RegExp('\{likeId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['likeId'])
			if (args['likeId']) delete args['likeId']
		}
		if (url.indexOf('[/likeId]') !== -1) {
			url = url.replace('[/likeId]', '/' + args['likeId'])
			if (args['likeId']) delete args['likeId']
		}
		if (url.indexOf('[/likeId]') !== -1) url = url.replace('[/likeId]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'newsGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/news/me/feed-items'
		args = args || {}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'newsPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/news/me/feed-items'
		args = args || {}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'unFeedGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/news/{userId}/feed-items'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'unFeedPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/news/{userId}/feed-items'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'recordGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/record/me/feed-items'
		args = args || {}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (args['recordId'] == null) throw new Error('recordId is a required parameter')
		var rgx = new RegExp('\{recordId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['recordId'])
			if (args['recordId']) delete args['recordId']
		}
		if (url.indexOf('[/recordId]') !== -1) {
			url = url.replace('[/recordId]', '/' + args['recordId'])
			if (args['recordId']) delete args['recordId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		if (url.indexOf('[/recordId]') !== -1) url = url.replace('[/recordId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'recordPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/record/me/feed-items'
		args = args || {}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (args['recordId'] == null) throw new Error('recordId is a required parameter')
		var rgx = new RegExp('\{recordId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['recordId'])
			if (args['recordId']) delete args['recordId']
		}
		if (url.indexOf('[/recordId]') !== -1) {
			url = url.replace('[/recordId]', '/' + args['recordId'])
			if (args['recordId']) delete args['recordId']
		}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		if (url.indexOf('[/recordId]') !== -1) url = url.replace('[/recordId]', '')
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'recordFeedGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/record/{userId}/feed-items'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'recordFeedPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/record/{userId}/feed-items'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'subscriptionGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/subscriptions/{subscriptionId}'
		args = args || {}
		if (args['subscriptionId'] == null) throw new Error('subscriptionId is a required parameter')
		var rgx = new RegExp('\{subscriptionId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subscriptionId'])
			if (args['subscriptionId']) delete args['subscriptionId']
		}
		if (url.indexOf('[/subscriptionId]') !== -1) {
			url = url.replace('[/subscriptionId]', '/' + args['subscriptionId'])
			if (args['subscriptionId']) delete args['subscriptionId']
		}
		if (url.indexOf('[/subscriptionId]') !== -1) url = url.replace('[/subscriptionId]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'subscriptionDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/subscriptions/{subscriptionId}'
		args = args || {}
		if (args['subscriptionId'] == null) throw new Error('subscriptionId is a required parameter')
		var rgx = new RegExp('\{subscriptionId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subscriptionId'])
			if (args['subscriptionId']) delete args['subscriptionId']
		}
		if (url.indexOf('[/subscriptionId]') !== -1) {
			url = url.replace('[/subscriptionId]', '/' + args['subscriptionId'])
			if (args['subscriptionId']) delete args['subscriptionId']
		}
		if (url.indexOf('[/subscriptionId]') !== -1) url = url.replace('[/subscriptionId]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'mentionGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/to/me/feed-items'
		args = args || {}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'mentionPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/to/me/feed-items'
		args = args || {}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userMentionGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/to/{userId}/feed-items'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userMentionPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/to/{userId}/feed-items'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'profileGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/user-profile/me/feed-items'
		args = args || {}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'profilePost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/user-profile/me/feed-items'
		args = args || {}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userProfileGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/user-profile/{userId}/feed-items'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userProfilePost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/feeds/user-profile/{userId}/feed-items'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{contentDocumentId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		if (url.indexOf('[/contentDocumentId]') !== -1) {
			url = url.replace('[/contentDocumentId]', '/' + args['contentDocumentId'])
			if (args['contentDocumentId']) delete args['contentDocumentId']
		}
		var rgx = new RegExp('\{fileName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		if (url.indexOf('[/fileName]') !== -1) {
			url = url.replace('[/fileName]', '/' + args['fileName'])
			if (args['fileName']) delete args['fileName']
		}
		var rgx = new RegExp('\{feedItemFileUpload\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		if (url.indexOf('[/feedItemFileUpload]') !== -1) {
			url = url.replace('[/feedItemFileUpload]', '/' + args['feedItemFileUpload'])
			if (args['feedItemFileUpload']) delete args['feedItemFileUpload']
		}
		var rgx = new RegExp('\{desc\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['desc'])
			if (args['desc']) delete args['desc']
		}
		if (url.indexOf('[/desc]') !== -1) {
			url = url.replace('[/desc]', '/' + args['desc'])
			if (args['desc']) delete args['desc']
		}
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{urlName\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/urlName]') !== -1) {
			url = url.replace('[/urlName]', '/' + args['urlName'])
			if (args['urlName']) delete args['urlName']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/contentDocumentId]') !== -1) url = url.replace('[/contentDocumentId]', '')
		if (url.indexOf('[/fileName]') !== -1) url = url.replace('[/fileName]', '')
		if (url.indexOf('[/feedItemFileUpload]') !== -1) url = url.replace('[/feedItemFileUpload]', '')
		if (url.indexOf('[/desc]') !== -1) url = url.replace('[/desc]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/urlName]') !== -1) url = url.replace('[/urlName]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me'
		args = args || {}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userFollowersGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/followers'
		args = args || {}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userFollowingGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/following'
		args = args || {}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userFollowingPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/following'
		args = args || {}
		if (args['subjectId'] == null) throw new Error('subjectId is a required parameter')
		var rgx = new RegExp('\{subjectId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subjectId'])
			if (args['subjectId']) delete args['subjectId']
		}
		if (url.indexOf('[/subjectId]') !== -1) {
			url = url.replace('[/subjectId]', '/' + args['subjectId'])
			if (args['subjectId']) delete args['subjectId']
		}
		if (url.indexOf('[/subjectId]') !== -1) url = url.replace('[/subjectId]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userGroupGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/groups'
		args = args || {}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userPhotoGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/photo'
		args = args || {}
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userPhotoPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/photo'
		args = args || {}
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userPhotoDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/photo'
		args = args || {}
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'userStatusGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/status'
		args = args || {}
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userStatusPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/status'
		args = args || {}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userStatusDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/me/status'
		args = args || {}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'userIdGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userIdFollowersGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/followers'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userIdFollowingGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/following'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userIdFollowingPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/following'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (args['subjectId'] == null) throw new Error('subjectId is a required parameter')
		var rgx = new RegExp('\{subjectId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['subjectId'])
			if (args['subjectId']) delete args['subjectId']
		}
		if (url.indexOf('[/subjectId]') !== -1) {
			url = url.replace('[/subjectId]', '/' + args['subjectId'])
			if (args['subjectId']) delete args['subjectId']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/subjectId]') !== -1) url = url.replace('[/subjectId]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userIdGroupGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/groups'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		var rgx = new RegExp('\{page\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/page]') !== -1) {
			url = url.replace('[/page]', '/' + args['page'])
			if (args['page']) delete args['page']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/page]') !== -1) url = url.replace('[/page]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userIdPhotoGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/photo'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userIdPhotoPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/photo'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userIdPhotoDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/photo'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	},
	'userIdStatusGet': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/status'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		return http({provider:'salesforcechatter',url:url,method:'GET',params:args}, opts)
	},
	'userIdStatusPost': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/status'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		return http({provider:'salesforcechatter',url:url,method:'POST',params:args}, opts)
	},
	'userIdStatusDelete': function(args, opts) {
		var url = 'https://na1.salesforce.com/services/data/v23.0//chatter/users/{userId}/status'
		args = args || {}
		if (args['userId'] == null) throw new Error('userId is a required parameter')
		var rgx = new RegExp('\{userId\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (url.indexOf('[/userId]') !== -1) {
			url = url.replace('[/userId]', '/' + args['userId'])
			if (args['userId']) delete args['userId']
		}
		if (args['text'] == null) throw new Error('text is a required parameter')
		var rgx = new RegExp('\{text\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/text]') !== -1) {
			url = url.replace('[/text]', '/' + args['text'])
			if (args['text']) delete args['text']
		}
		if (url.indexOf('[/userId]') !== -1) url = url.replace('[/userId]', '')
		if (url.indexOf('[/text]') !== -1) url = url.replace('[/text]', '')
		return http({provider:'salesforcechatter',url:url,method:'DELETE',params:args}, opts)
	}
})