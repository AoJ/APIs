/* 
# Webshell APIs
# Copyright (C) 2013 Webshell SAS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

({
	auth:function(){return auth({provider:'nytimes'})},
	'articleSearch': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//search/v1/article'
		args = args || {}
		if (args['query'] == null) throw new Error('query is a required parameter')
		var rgx = new RegExp('\{query\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['query'])
			if (args['query']) delete args['query']
		}
		if (url.indexOf('[/query]') !== -1) {
			url = url.replace('[/query]', '/' + args['query'])
			if (args['query']) delete args['query']
		}
		if (args['api-key'] == null) args['api-key'] = "629a39d0768609d31fee424b52fbb704:5:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{begin_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['begin_date'])
			if (args['begin_date']) delete args['begin_date']
		}
		if (url.indexOf('[/begin_date]') !== -1) {
			url = url.replace('[/begin_date]', '/' + args['begin_date'])
			if (args['begin_date']) delete args['begin_date']
		}
		var rgx = new RegExp('\{end_date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		if (url.indexOf('[/end_date]') !== -1) {
			url = url.replace('[/end_date]', '/' + args['end_date'])
			if (args['end_date']) delete args['end_date']
		}
		var rgx = new RegExp('\{facets\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['facets'])
			if (args['facets']) delete args['facets']
		}
		if (url.indexOf('[/facets]') !== -1) {
			url = url.replace('[/facets]', '/' + args['facets'])
			if (args['facets']) delete args['facets']
		}
		var rgx = new RegExp('\{fields\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fields'])
			if (args['fields']) delete args['fields']
		}
		if (url.indexOf('[/fields]') !== -1) {
			url = url.replace('[/fields]', '/' + args['fields'])
			if (args['fields']) delete args['fields']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{rank\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['rank'])
			if (args['rank']) delete args['rank']
		}
		if (url.indexOf('[/rank]') !== -1) {
			url = url.replace('[/rank]', '/' + args['rank'])
			if (args['rank']) delete args['rank']
		}
		if (url.indexOf('[/query]') !== -1) url = url.replace('[/query]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/begin_date]') !== -1) url = url.replace('[/begin_date]', '')
		if (url.indexOf('[/end_date]') !== -1) url = url.replace('[/end_date]', '')
		if (url.indexOf('[/facets]') !== -1) url = url.replace('[/facets]', '')
		if (url.indexOf('[/fields]') !== -1) url = url.replace('[/fields]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/rank]') !== -1) url = url.replace('[/rank]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getBestSellerList': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//books/{version}/lists{.format}'
		args = args || {}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['api-key'] == null) args['api-key'] = "d28cb3126eae332c6279f9dedf4bb830:10:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		if (args['list-name'] == null) throw new Error('list-name is a required parameter')
		var rgx = new RegExp('\{list-name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list-name'])
			if (args['list-name']) delete args['list-name']
		}
		if (url.indexOf('[/list-name]') !== -1) {
			url = url.replace('[/list-name]', '/' + args['list-name'])
			if (args['list-name']) delete args['list-name']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{sort-by\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort-by'])
			if (args['sort-by']) delete args['sort-by']
		}
		if (url.indexOf('[/sort-by]') !== -1) {
			url = url.replace('[/sort-by]', '/' + args['sort-by'])
			if (args['sort-by']) delete args['sort-by']
		}
		var rgx = new RegExp('\{sort-order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort-order'])
			if (args['sort-order']) delete args['sort-order']
		}
		if (url.indexOf('[/sort-order]') !== -1) {
			url = url.replace('[/sort-order]', '/' + args['sort-order'])
			if (args['sort-order']) delete args['sort-order']
		}
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		if (url.indexOf('[/list-name]') !== -1) url = url.replace('[/list-name]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/sort-by]') !== -1) url = url.replace('[/sort-by]', '')
		if (url.indexOf('[/sort-order]') !== -1) url = url.replace('[/sort-order]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'searchBestSellerLists': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//books/{version}/lists{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['list-name'] == null) throw new Error('list-name is a required parameter')
		var rgx = new RegExp('\{list-name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list-name'])
			if (args['list-name']) delete args['list-name']
		}
		if (url.indexOf('[/list-name]') !== -1) {
			url = url.replace('[/list-name]', '/' + args['list-name'])
			if (args['list-name']) delete args['list-name']
		}
		if (args['api-key'] == null) args['api-key'] = "d28cb3126eae332c6279f9dedf4bb830:10:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{bestsellers-date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bestsellers-date'])
			if (args['bestsellers-date']) delete args['bestsellers-date']
		}
		if (url.indexOf('[/bestsellers-date]') !== -1) {
			url = url.replace('[/bestsellers-date]', '/' + args['bestsellers-date'])
			if (args['bestsellers-date']) delete args['bestsellers-date']
		}
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		var rgx = new RegExp('\{isbn\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['isbn'])
			if (args['isbn']) delete args['isbn']
		}
		if (url.indexOf('[/isbn]') !== -1) {
			url = url.replace('[/isbn]', '/' + args['isbn'])
			if (args['isbn']) delete args['isbn']
		}
		var rgx = new RegExp('\{list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list'])
			if (args['list']) delete args['list']
		}
		if (url.indexOf('[/list]') !== -1) {
			url = url.replace('[/list]', '/' + args['list'])
			if (args['list']) delete args['list']
		}
		var rgx = new RegExp('\{list-name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['list-name'])
			if (args['list-name']) delete args['list-name']
		}
		if (url.indexOf('[/list-name]') !== -1) {
			url = url.replace('[/list-name]', '/' + args['list-name'])
			if (args['list-name']) delete args['list-name']
		}
		var rgx = new RegExp('\{published-date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['published-date'])
			if (args['published-date']) delete args['published-date']
		}
		if (url.indexOf('[/published-date]') !== -1) {
			url = url.replace('[/published-date]', '/' + args['published-date'])
			if (args['published-date']) delete args['published-date']
		}
		var rgx = new RegExp('\{rank\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['rank'])
			if (args['rank']) delete args['rank']
		}
		if (url.indexOf('[/rank]') !== -1) {
			url = url.replace('[/rank]', '/' + args['rank'])
			if (args['rank']) delete args['rank']
		}
		var rgx = new RegExp('\{rank-last-week\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['rank-last-week'])
			if (args['rank-last-week']) delete args['rank-last-week']
		}
		if (url.indexOf('[/rank-last-week]') !== -1) {
			url = url.replace('[/rank-last-week]', '/' + args['rank-last-week'])
			if (args['rank-last-week']) delete args['rank-last-week']
		}
		var rgx = new RegExp('\{weeks-on-list\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['weeks-on-list'])
			if (args['weeks-on-list']) delete args['weeks-on-list']
		}
		if (url.indexOf('[/weeks-on-list]') !== -1) {
			url = url.replace('[/weeks-on-list]', '/' + args['weeks-on-list'])
			if (args['weeks-on-list']) delete args['weeks-on-list']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{sort-by\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort-by'])
			if (args['sort-by']) delete args['sort-by']
		}
		if (url.indexOf('[/sort-by]') !== -1) {
			url = url.replace('[/sort-by]', '/' + args['sort-by'])
			if (args['sort-by']) delete args['sort-by']
		}
		var rgx = new RegExp('\{sort-order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort-order'])
			if (args['sort-order']) delete args['sort-order']
		}
		if (url.indexOf('[/sort-order]') !== -1) {
			url = url.replace('[/sort-order]', '/' + args['sort-order'])
			if (args['sort-order']) delete args['sort-order']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/list-name]') !== -1) url = url.replace('[/list-name]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/bestsellers-date]') !== -1) url = url.replace('[/bestsellers-date]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		if (url.indexOf('[/isbn]') !== -1) url = url.replace('[/isbn]', '')
		if (url.indexOf('[/list]') !== -1) url = url.replace('[/list]', '')
		if (url.indexOf('[/list-name]') !== -1) url = url.replace('[/list-name]', '')
		if (url.indexOf('[/published-date]') !== -1) url = url.replace('[/published-date]', '')
		if (url.indexOf('[/rank]') !== -1) url = url.replace('[/rank]', '')
		if (url.indexOf('[/rank-last-week]') !== -1) url = url.replace('[/rank-last-week]', '')
		if (url.indexOf('[/weeks-on-list]') !== -1) url = url.replace('[/weeks-on-list]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/sort-by]') !== -1) url = url.replace('[/sort-by]', '')
		if (url.indexOf('[/sort-order]') !== -1) url = url.replace('[/sort-order]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getBestSellerHistory': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//books/{version}/lists/best-sellers/history{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "d28cb3126eae332c6279f9dedf4bb830:10:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{age-group\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['age-group'])
			if (args['age-group']) delete args['age-group']
		}
		if (url.indexOf('[/age-group]') !== -1) {
			url = url.replace('[/age-group]', '/' + args['age-group'])
			if (args['age-group']) delete args['age-group']
		}
		var rgx = new RegExp('\{author\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['author'])
			if (args['author']) delete args['author']
		}
		if (url.indexOf('[/author]') !== -1) {
			url = url.replace('[/author]', '/' + args['author'])
			if (args['author']) delete args['author']
		}
		var rgx = new RegExp('\{contributor\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['contributor'])
			if (args['contributor']) delete args['contributor']
		}
		if (url.indexOf('[/contributor]') !== -1) {
			url = url.replace('[/contributor]', '/' + args['contributor'])
			if (args['contributor']) delete args['contributor']
		}
		var rgx = new RegExp('\{isbn\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['isbn'])
			if (args['isbn']) delete args['isbn']
		}
		if (url.indexOf('[/isbn]') !== -1) {
			url = url.replace('[/isbn]', '/' + args['isbn'])
			if (args['isbn']) delete args['isbn']
		}
		var rgx = new RegExp('\{price\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['price'])
			if (args['price']) delete args['price']
		}
		if (url.indexOf('[/price]') !== -1) {
			url = url.replace('[/price]', '/' + args['price'])
			if (args['price']) delete args['price']
		}
		var rgx = new RegExp('\{publisher\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['publisher'])
			if (args['publisher']) delete args['publisher']
		}
		if (url.indexOf('[/publisher]') !== -1) {
			url = url.replace('[/publisher]', '/' + args['publisher'])
			if (args['publisher']) delete args['publisher']
		}
		var rgx = new RegExp('\{title\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['title'])
			if (args['title']) delete args['title']
		}
		if (url.indexOf('[/title]') !== -1) {
			url = url.replace('[/title]', '/' + args['title'])
			if (args['title']) delete args['title']
		}
		var rgx = new RegExp('\{sort-by\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort-by'])
			if (args['sort-by']) delete args['sort-by']
		}
		if (url.indexOf('[/sort-by]') !== -1) {
			url = url.replace('[/sort-by]', '/' + args['sort-by'])
			if (args['sort-by']) delete args['sort-by']
		}
		var rgx = new RegExp('\{sort-order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort-order'])
			if (args['sort-order']) delete args['sort-order']
		}
		if (url.indexOf('[/sort-order]') !== -1) {
			url = url.replace('[/sort-order]', '/' + args['sort-order'])
			if (args['sort-order']) delete args['sort-order']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/age-group]') !== -1) url = url.replace('[/age-group]', '')
		if (url.indexOf('[/author]') !== -1) url = url.replace('[/author]', '')
		if (url.indexOf('[/contributor]') !== -1) url = url.replace('[/contributor]', '')
		if (url.indexOf('[/isbn]') !== -1) url = url.replace('[/isbn]', '')
		if (url.indexOf('[/price]') !== -1) url = url.replace('[/price]', '')
		if (url.indexOf('[/publisher]') !== -1) url = url.replace('[/publisher]', '')
		if (url.indexOf('[/title]') !== -1) url = url.replace('[/title]', '')
		if (url.indexOf('[/sort-by]') !== -1) url = url.replace('[/sort-by]', '')
		if (url.indexOf('[/sort-order]') !== -1) url = url.replace('[/sort-order]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getBestSellerListNames': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//books/{version}/lists/names{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "d28cb3126eae332c6279f9dedf4bb830:10:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'candidateSearch': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/candidates/search{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['lname'] == null) throw new Error('lname is a required parameter')
		var rgx = new RegExp('\{lname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['lname'])
			if (args['lname']) delete args['lname']
		}
		if (url.indexOf('[/lname]') !== -1) {
			url = url.replace('[/lname]', '/' + args['lname'])
			if (args['lname']) delete args['lname']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/lname]') !== -1) url = url.replace('[/lname]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'candidateDetails': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/candidates/{fec-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['fec-id'] == null) throw new Error('fec-id is a required parameter')
		var rgx = new RegExp('\{fec-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		if (url.indexOf('[/fec-id]') !== -1) {
			url = url.replace('[/fec-id]', '/' + args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/fec-id]') !== -1) url = url.replace('[/fec-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'candidateLeaders': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/candidates/leaders/{category}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['category'] == null) throw new Error('category is a required parameter')
		var rgx = new RegExp('\{category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/category]') !== -1) {
			url = url.replace('[/category]', '/' + args['category'])
			if (args['category']) delete args['category']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/category]') !== -1) url = url.replace('[/category]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'stateCandidates': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/seats/{state}/{chamber}/{district}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['state'] == null) throw new Error('state is a required parameter')
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{district\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['district'])
			if (args['district']) delete args['district']
		}
		if (url.indexOf('[/district]') !== -1) {
			url = url.replace('[/district]', '/' + args['district'])
			if (args['district']) delete args['district']
		}
		if (args['category'] == null) throw new Error('category is a required parameter')
		var rgx = new RegExp('\{category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['category'])
			if (args['category']) delete args['category']
		}
		if (url.indexOf('[/category]') !== -1) {
			url = url.replace('[/category]', '/' + args['category'])
			if (args['category']) delete args['category']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/district]') !== -1) url = url.replace('[/district]', '')
		if (url.indexOf('[/category]') !== -1) url = url.replace('[/category]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'newCandidates': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/candidates/new{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'committeeSearch': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/committees/search{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (args['name'] == null) throw new Error('name is a required parameter')
		var rgx = new RegExp('\{name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['name'])
			if (args['name']) delete args['name']
		}
		if (url.indexOf('[/name]') !== -1) {
			url = url.replace('[/name]', '/' + args['name'])
			if (args['name']) delete args['name']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/name]') !== -1) url = url.replace('[/name]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'committeeDetails': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['fec-id'] == null) throw new Error('fec-id is a required parameter')
		var rgx = new RegExp('\{fec-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		if (url.indexOf('[/fec-id]') !== -1) {
			url = url.replace('[/fec-id]', '/' + args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/fec-id]') !== -1) url = url.replace('[/fec-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'newCommittees': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/committees/new{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'committeeContributions': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/contributions/{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['fec-id'] == null) throw new Error('fec-id is a required parameter')
		var rgx = new RegExp('\{fec-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		if (url.indexOf('[/fec-id]') !== -1) {
			url = url.replace('[/fec-id]', '/' + args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/fec-id]') !== -1) url = url.replace('[/fec-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'committeeContributionsToCandidate': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/contributions/candidates/{candidate-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['fec-id'] == null) throw new Error('fec-id is a required parameter')
		var rgx = new RegExp('\{fec-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		if (url.indexOf('[/fec-id]') !== -1) {
			url = url.replace('[/fec-id]', '/' + args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		if (args['candidate-id'] == null) throw new Error('candidate-id is a required parameter')
		var rgx = new RegExp('\{candidate-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['candidate-id'])
			if (args['candidate-id']) delete args['candidate-id']
		}
		if (url.indexOf('[/candidate-id]') !== -1) {
			url = url.replace('[/candidate-id]', '/' + args['candidate-id'])
			if (args['candidate-id']) delete args['candidate-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/fec-id]') !== -1) url = url.replace('[/fec-id]', '')
		if (url.indexOf('[/candidate-id]') !== -1) url = url.replace('[/candidate-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'committeeFilings': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/filings{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['fec-id'] == null) throw new Error('fec-id is a required parameter')
		var rgx = new RegExp('\{fec-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		if (url.indexOf('[/fec-id]') !== -1) {
			url = url.replace('[/fec-id]', '/' + args['fec-id'])
			if (args['fec-id']) delete args['fec-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/fec-id]') !== -1) url = url.replace('[/fec-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'leadershipCommittees': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/committees/leadership{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'presidentialCandidateTotals': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/president/totals{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'presidentialCandidateDetails': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/president/candidates/{candidate-name-or-committeeID}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['candidate-name-or-committeeID'] == null) throw new Error('candidate-name-or-committeeID is a required parameter')
		var rgx = new RegExp('\{candidate-name-or-committeeID\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['candidate-name-or-committeeID'])
			if (args['candidate-name-or-committeeID']) delete args['candidate-name-or-committeeID']
		}
		if (url.indexOf('[/candidate-name-or-committeeID]') !== -1) {
			url = url.replace('[/candidate-name-or-committeeID]', '/' + args['candidate-name-or-committeeID'])
			if (args['candidate-name-or-committeeID']) delete args['candidate-name-or-committeeID']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/candidate-name-or-committeeID]') !== -1) url = url.replace('[/candidate-name-or-committeeID]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'presidentialStateZipTotals': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/president/{resource-type}/{location}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['resource-type'] == null) throw new Error('resource-type is a required parameter')
		var rgx = new RegExp('\{resource-type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resource-type'])
			if (args['resource-type']) delete args['resource-type']
		}
		if (url.indexOf('[/resource-type]') !== -1) {
			url = url.replace('[/resource-type]', '/' + args['resource-type'])
			if (args['resource-type']) delete args['resource-type']
		}
		if (args['location'] == null) throw new Error('location is a required parameter')
		var rgx = new RegExp('\{location\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['location'])
			if (args['location']) delete args['location']
		}
		if (url.indexOf('[/location]') !== -1) {
			url = url.replace('[/location]', '/' + args['location'])
			if (args['location']) delete args['location']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/resource-type]') !== -1) url = url.replace('[/resource-type]', '')
		if (url.indexOf('[/location]') !== -1) url = url.replace('[/location]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'presidentialDonorInformation': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/president/contributions/donorsearch{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{lname\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['lname'])
			if (args['lname']) delete args['lname']
		}
		if (url.indexOf('[/lname]') !== -1) {
			url = url.replace('[/lname]', '/' + args['lname'])
			if (args['lname']) delete args['lname']
		}
		var rgx = new RegExp('\{zip\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['zip'])
			if (args['zip']) delete args['zip']
		}
		if (url.indexOf('[/zip]') !== -1) {
			url = url.replace('[/zip]', '/' + args['zip'])
			if (args['zip']) delete args['zip']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/lname]') !== -1) url = url.replace('[/lname]', '')
		if (url.indexOf('[/zip]') !== -1) url = url.replace('[/zip]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'electronicFilingsByDate': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/filings/{year}/{month}/{day}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['year'] == null) throw new Error('year is a required parameter')
		var rgx = new RegExp('\{year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['year'])
			if (args['year']) delete args['year']
		}
		if (url.indexOf('[/year]') !== -1) {
			url = url.replace('[/year]', '/' + args['year'])
			if (args['year']) delete args['year']
		}
		if (args['month'] == null) throw new Error('month is a required parameter')
		var rgx = new RegExp('\{month\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['month'])
			if (args['month']) delete args['month']
		}
		if (url.indexOf('[/month]') !== -1) {
			url = url.replace('[/month]', '/' + args['month'])
			if (args['month']) delete args['month']
		}
		if (args['day'] == null) throw new Error('day is a required parameter')
		var rgx = new RegExp('\{day\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['day'])
			if (args['day']) delete args['day']
		}
		if (url.indexOf('[/day]') !== -1) {
			url = url.replace('[/day]', '/' + args['day'])
			if (args['day']) delete args['day']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/year]') !== -1) url = url.replace('[/year]', '')
		if (url.indexOf('[/month]') !== -1) url = url.replace('[/month]', '')
		if (url.indexOf('[/day]') !== -1) url = url.replace('[/day]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'electronicFilingFormTypes': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/filings/types{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'electronicFilingsByType': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//elections/us/{version}/finances/{campaign-cycle}/filings/types/{form-type-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['campaign-cycle'] == null) throw new Error('campaign-cycle is a required parameter')
		var rgx = new RegExp('\{campaign-cycle\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (url.indexOf('[/campaign-cycle]') !== -1) {
			url = url.replace('[/campaign-cycle]', '/' + args['campaign-cycle'])
			if (args['campaign-cycle']) delete args['campaign-cycle']
		}
		if (args['form-type-id'] == null) throw new Error('form-type-id is a required parameter')
		var rgx = new RegExp('\{form-type-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['form-type-id'])
			if (args['form-type-id']) delete args['form-type-id']
		}
		if (url.indexOf('[/form-type-id]') !== -1) {
			url = url.replace('[/form-type-id]', '/' + args['form-type-id'])
			if (args['form-type-id']) delete args['form-type-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "9746e90579a5e13719708aceb37ad848:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{callback\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/callback]') !== -1) {
			url = url.replace('[/callback]', '/' + args['callback'])
			if (args['callback']) delete args['callback']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/campaign-cycle]') !== -1) url = url.replace('[/campaign-cycle]', '')
		if (url.indexOf('[/form-type-id]') !== -1) url = url.replace('[/form-type-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/callback]') !== -1) url = url.replace('[/callback]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'recentComments': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//community/{version}/comments/recent{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{force-replies\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['force-replies'])
			if (args['force-replies']) delete args['force-replies']
		}
		if (url.indexOf('[/force-replies]') !== -1) {
			url = url.replace('[/force-replies]', '/' + args['force-replies'])
			if (args['force-replies']) delete args['force-replies']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/force-replies]') !== -1) url = url.replace('[/force-replies]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'randomComments': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//community/{version}/comments/random{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'commentsByDate': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//community/{version}/comments/by-date/{date}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['date'] == null) throw new Error('date is a required parameter')
		var rgx = new RegExp('\{date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date'])
			if (args['date']) delete args['date']
		}
		if (url.indexOf('[/date]') !== -1) {
			url = url.replace('[/date]', '/' + args['date'])
			if (args['date']) delete args['date']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/date]') !== -1) url = url.replace('[/date]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'commentsByUserId': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//community/{version}/comments/user/id/{user-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['user-id'] == null) throw new Error('user-id is a required parameter')
		var rgx = new RegExp('\{user-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user-id'])
			if (args['user-id']) delete args['user-id']
		}
		if (url.indexOf('[/user-id]') !== -1) {
			url = url.replace('[/user-id]', '/' + args['user-id'])
			if (args['user-id']) delete args['user-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/user-id]') !== -1) url = url.replace('[/user-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'commentsByUrl': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//community/{version}/comments/url/{match-type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['match-type'] == null) throw new Error('match-type is a required parameter')
		var rgx = new RegExp('\{match-type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['match-type'])
			if (args['match-type']) delete args['match-type']
		}
		if (url.indexOf('[/match-type]') !== -1) {
			url = url.replace('[/match-type]', '/' + args['match-type'])
			if (args['match-type']) delete args['match-type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{sort\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/sort]') !== -1) {
			url = url.replace('[/sort]', '/' + args['sort'])
			if (args['sort']) delete args['sort']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/match-type]') !== -1) url = url.replace('[/match-type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/sort]') !== -1) url = url.replace('[/sort]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'memberLists': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/{chamber}/members{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{district\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['district'])
			if (args['district']) delete args['district']
		}
		if (url.indexOf('[/district]') !== -1) {
			url = url.replace('[/district]', '/' + args['district'])
			if (args['district']) delete args['district']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/district]') !== -1) url = url.replace('[/district]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'memberBioRoles': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/{member-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['member-id'] == null) throw new Error('member-id is a required parameter')
		var rgx = new RegExp('\{member-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		if (url.indexOf('[/member-id]') !== -1) {
			url = url.replace('[/member-id]', '/' + args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/member-id]') !== -1) url = url.replace('[/member-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'newMembers': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/new{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'currentMembers': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/{chamber}/{state}/{district}/current{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['state'] == null) throw new Error('state is a required parameter')
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{district\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['district'])
			if (args['district']) delete args['district']
		}
		if (url.indexOf('[/district]') !== -1) {
			url = url.replace('[/district]', '/' + args['district'])
			if (args['district']) delete args['district']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/district]') !== -1) url = url.replace('[/district]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'membersLeaving': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/{chamber}/members/leaving{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'memberPositions': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/{member-id}/votes{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['member-id'] == null) throw new Error('member-id is a required parameter')
		var rgx = new RegExp('\{member-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		if (url.indexOf('[/member-id]') !== -1) {
			url = url.replace('[/member-id]', '/' + args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/member-id]') !== -1) url = url.replace('[/member-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'compareMembers': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/{first-member-id}/votes/{second-member-id}/{congress-number}/{chamber}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['first-member-id'] == null) throw new Error('first-member-id is a required parameter')
		var rgx = new RegExp('\{first-member-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['first-member-id'])
			if (args['first-member-id']) delete args['first-member-id']
		}
		if (url.indexOf('[/first-member-id]') !== -1) {
			url = url.replace('[/first-member-id]', '/' + args['first-member-id'])
			if (args['first-member-id']) delete args['first-member-id']
		}
		if (args['second-member-id'] == null) throw new Error('second-member-id is a required parameter')
		var rgx = new RegExp('\{second-member-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['second-member-id'])
			if (args['second-member-id']) delete args['second-member-id']
		}
		if (url.indexOf('[/second-member-id]') !== -1) {
			url = url.replace('[/second-member-id]', '/' + args['second-member-id'])
			if (args['second-member-id']) delete args['second-member-id']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/first-member-id]') !== -1) url = url.replace('[/first-member-id]', '')
		if (url.indexOf('[/second-member-id]') !== -1) url = url.replace('[/second-member-id]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'billsCosponsoredByMember': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/{member-id}/bills/{type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['member-id'] == null) throw new Error('member-id is a required parameter')
		var rgx = new RegExp('\{member-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		if (url.indexOf('[/member-id]') !== -1) {
			url = url.replace('[/member-id]', '/' + args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/member-id]') !== -1) url = url.replace('[/member-id]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'memberSponsorshipComparison': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/{member-id-1}/bills/{member-id-2}/{congress-number}/{chamber}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['member-id-1'] == null) throw new Error('member-id-1 is a required parameter')
		var rgx = new RegExp('\{member-id-1\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-id-1'])
			if (args['member-id-1']) delete args['member-id-1']
		}
		if (url.indexOf('[/member-id-1]') !== -1) {
			url = url.replace('[/member-id-1]', '/' + args['member-id-1'])
			if (args['member-id-1']) delete args['member-id-1']
		}
		if (args['member-id-2'] == null) throw new Error('member-id-2 is a required parameter')
		var rgx = new RegExp('\{member-id-2\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-id-2'])
			if (args['member-id-2']) delete args['member-id-2']
		}
		if (url.indexOf('[/member-id-2]') !== -1) {
			url = url.replace('[/member-id-2]', '/' + args['member-id-2'])
			if (args['member-id-2']) delete args['member-id-2']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/member-id-1]') !== -1) url = url.replace('[/member-id-1]', '')
		if (url.indexOf('[/member-id-2]') !== -1) url = url.replace('[/member-id-2]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'memberFloorAppearances': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/{member-id}/floor_appearances{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['member-id'] == null) throw new Error('member-id is a required parameter')
		var rgx = new RegExp('\{member-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		if (url.indexOf('[/member-id]') !== -1) {
			url = url.replace('[/member-id]', '/' + args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/member-id]') !== -1) url = url.replace('[/member-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'rollCallVotes': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/{chamber}/sessions/{session-number}/votes/{roll-call-number}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['session-number'] == null) throw new Error('session-number is a required parameter')
		var rgx = new RegExp('\{session-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['session-number'])
			if (args['session-number']) delete args['session-number']
		}
		if (url.indexOf('[/session-number]') !== -1) {
			url = url.replace('[/session-number]', '/' + args['session-number'])
			if (args['session-number']) delete args['session-number']
		}
		if (args['roll-call-number'] == null) throw new Error('roll-call-number is a required parameter')
		var rgx = new RegExp('\{roll-call-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['roll-call-number'])
			if (args['roll-call-number']) delete args['roll-call-number']
		}
		if (url.indexOf('[/roll-call-number]') !== -1) {
			url = url.replace('[/roll-call-number]', '/' + args['roll-call-number'])
			if (args['roll-call-number']) delete args['roll-call-number']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/session-number]') !== -1) url = url.replace('[/session-number]', '')
		if (url.indexOf('[/roll-call-number]') !== -1) url = url.replace('[/roll-call-number]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'votesByType': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/{chamber}/votes/{vote-type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['vote-type'] == null) throw new Error('vote-type is a required parameter')
		var rgx = new RegExp('\{vote-type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['vote-type'])
			if (args['vote-type']) delete args['vote-type']
		}
		if (url.indexOf('[/vote-type]') !== -1) {
			url = url.replace('[/vote-type]', '/' + args['vote-type'])
			if (args['vote-type']) delete args['vote-type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/vote-type]') !== -1) url = url.replace('[/vote-type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'votesByTypeYearMonth': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{chamber}/votes/{year}/{month}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['year'] == null) throw new Error('year is a required parameter')
		var rgx = new RegExp('\{year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['year'])
			if (args['year']) delete args['year']
		}
		if (url.indexOf('[/year]') !== -1) {
			url = url.replace('[/year]', '/' + args['year'])
			if (args['year']) delete args['year']
		}
		if (args['month'] == null) throw new Error('month is a required parameter')
		var rgx = new RegExp('\{month\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['month'])
			if (args['month']) delete args['month']
		}
		if (url.indexOf('[/month]') !== -1) {
			url = url.replace('[/month]', '/' + args['month'])
			if (args['month']) delete args['month']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/year]') !== -1) url = url.replace('[/year]', '')
		if (url.indexOf('[/month]') !== -1) url = url.replace('[/month]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'votesByTypeDateRange': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{chamber}/votes/{start-date}/{end-date}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['start-date'] == null) throw new Error('start-date is a required parameter')
		var rgx = new RegExp('\{start-date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['start-date'])
			if (args['start-date']) delete args['start-date']
		}
		if (url.indexOf('[/start-date]') !== -1) {
			url = url.replace('[/start-date]', '/' + args['start-date'])
			if (args['start-date']) delete args['start-date']
		}
		if (args['end-date'] == null) throw new Error('end-date is a required parameter')
		var rgx = new RegExp('\{end-date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['end-date'])
			if (args['end-date']) delete args['end-date']
		}
		if (url.indexOf('[/end-date]') !== -1) {
			url = url.replace('[/end-date]', '/' + args['end-date'])
			if (args['end-date']) delete args['end-date']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/start-date]') !== -1) url = url.replace('[/start-date]', '')
		if (url.indexOf('[/end-date]') !== -1) url = url.replace('[/end-date]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'nominationVotes': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/nominations{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'recentBills': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/{chamber}/bills/{type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'billsByMember': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/members/{member-id}/bills/{type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['member-id'] == null) throw new Error('member-id is a required parameter')
		var rgx = new RegExp('\{member-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		if (url.indexOf('[/member-id]') !== -1) {
			url = url.replace('[/member-id]', '/' + args['member-id'])
			if (args['member-id']) delete args['member-id']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/member-id]') !== -1) url = url.replace('[/member-id]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'billDetails': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['bill-id'] == null) throw new Error('bill-id is a required parameter')
		var rgx = new RegExp('\{bill-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bill-id'])
			if (args['bill-id']) delete args['bill-id']
		}
		if (url.indexOf('[/bill-id]') !== -1) {
			url = url.replace('[/bill-id]', '/' + args['bill-id'])
			if (args['bill-id']) delete args['bill-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/bill-id]') !== -1) url = url.replace('[/bill-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'billSubjectsAmendmentsRelated': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}/{resource}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['bill-id'] == null) throw new Error('bill-id is a required parameter')
		var rgx = new RegExp('\{bill-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bill-id'])
			if (args['bill-id']) delete args['bill-id']
		}
		if (url.indexOf('[/bill-id]') !== -1) {
			url = url.replace('[/bill-id]', '/' + args['bill-id'])
			if (args['bill-id']) delete args['bill-id']
		}
		if (args['resource'] == null) throw new Error('resource is a required parameter')
		var rgx = new RegExp('\{resource\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resource'])
			if (args['resource']) delete args['resource']
		}
		if (url.indexOf('[/resource]') !== -1) {
			url = url.replace('[/resource]', '/' + args['resource'])
			if (args['resource']) delete args['resource']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/bill-id]') !== -1) url = url.replace('[/bill-id]', '')
		if (url.indexOf('[/resource]') !== -1) url = url.replace('[/resource]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'billCosponsors': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}/cosponsors{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['bill-id'] == null) throw new Error('bill-id is a required parameter')
		var rgx = new RegExp('\{bill-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bill-id'])
			if (args['bill-id']) delete args['bill-id']
		}
		if (url.indexOf('[/bill-id]') !== -1) {
			url = url.replace('[/bill-id]', '/' + args['bill-id'])
			if (args['bill-id']) delete args['bill-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/bill-id]') !== -1) url = url.replace('[/bill-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'nomineeLists': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/nominees/{nomination-category}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['nomination-category'] == null) throw new Error('nomination-category is a required parameter')
		var rgx = new RegExp('\{nomination-category\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nomination-category'])
			if (args['nomination-category']) delete args['nomination-category']
		}
		if (url.indexOf('[/nomination-category]') !== -1) {
			url = url.replace('[/nomination-category]', '/' + args['nomination-category'])
			if (args['nomination-category']) delete args['nomination-category']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/nomination-category]') !== -1) url = url.replace('[/nomination-category]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'nomineeDetails': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/nominees/{nominee-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['nominee-id'] == null) throw new Error('nominee-id is a required parameter')
		var rgx = new RegExp('\{nominee-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['nominee-id'])
			if (args['nominee-id']) delete args['nominee-id']
		}
		if (url.indexOf('[/nominee-id]') !== -1) {
			url = url.replace('[/nominee-id]', '/' + args['nominee-id'])
			if (args['nominee-id']) delete args['nominee-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/nominee-id]') !== -1) url = url.replace('[/nominee-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'nomineesByState': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/nominees/state/{state}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['state'] == null) throw new Error('state is a required parameter')
		var rgx = new RegExp('\{state\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['state'])
			if (args['state']) delete args['state']
		}
		if (url.indexOf('[/state]') !== -1) {
			url = url.replace('[/state]', '/' + args['state'])
			if (args['state']) delete args['state']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/state]') !== -1) url = url.replace('[/state]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'statePartyCounts': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/states/members/party{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'committeesAndCommitteeMembers': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{congress-number}/{chamber}/committees/{committee-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['congress-number'] == null) throw new Error('congress-number is a required parameter')
		var rgx = new RegExp('\{congress-number\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (url.indexOf('[/congress-number]') !== -1) {
			url = url.replace('[/congress-number]', '/' + args['congress-number'])
			if (args['congress-number']) delete args['congress-number']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{committee-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['committee-id'])
			if (args['committee-id']) delete args['committee-id']
		}
		if (url.indexOf('[/committee-id]') !== -1) {
			url = url.replace('[/committee-id]', '/' + args['committee-id'])
			if (args['committee-id']) delete args['committee-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/congress-number]') !== -1) url = url.replace('[/congress-number]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/committee-id]') !== -1) url = url.replace('[/committee-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'chamberSchedule': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/us/legislative/congress/{chamber}/schedule{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "65551def4f298d7b18824aca7ebe3b75:1:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getDistricts': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/districts{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "32a5e84812bc2d9a9b04ef4c00aa1557:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{lat\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['lat'])
			if (args['lat']) delete args['lat']
		}
		if (url.indexOf('[/lat]') !== -1) {
			url = url.replace('[/lat]', '/' + args['lat'])
			if (args['lat']) delete args['lat']
		}
		var rgx = new RegExp('\{lng\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['lng'])
			if (args['lng']) delete args['lng']
		}
		if (url.indexOf('[/lng]') !== -1) {
			url = url.replace('[/lng]', '/' + args['lng'])
			if (args['lng']) delete args['lng']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/lat]') !== -1) url = url.replace('[/lat]', '')
		if (url.indexOf('[/lng]') !== -1) url = url.replace('[/lng]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getMostPopular': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//mostpopular/{version}/{resource-type}/{section}/{share-types}/{time-period}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['resource-type'] == null) throw new Error('resource-type is a required parameter')
		var rgx = new RegExp('\{resource-type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resource-type'])
			if (args['resource-type']) delete args['resource-type']
		}
		if (url.indexOf('[/resource-type]') !== -1) {
			url = url.replace('[/resource-type]', '/' + args['resource-type'])
			if (args['resource-type']) delete args['resource-type']
		}
		if (args['section'] == null) throw new Error('section is a required parameter')
		var rgx = new RegExp('\{section\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['section'])
			if (args['section']) delete args['section']
		}
		if (url.indexOf('[/section]') !== -1) {
			url = url.replace('[/section]', '/' + args['section'])
			if (args['section']) delete args['section']
		}
		var rgx = new RegExp('\{share-types\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['share-types'])
			if (args['share-types']) delete args['share-types']
		}
		if (url.indexOf('[/share-types]') !== -1) {
			url = url.replace('[/share-types]', '/' + args['share-types'])
			if (args['share-types']) delete args['share-types']
		}
		var rgx = new RegExp('\{time-period\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['time-period'])
			if (args['time-period']) delete args['time-period']
		}
		if (url.indexOf('[/time-period]') !== -1) {
			url = url.replace('[/time-period]', '/' + args['time-period'])
			if (args['time-period']) delete args['time-period']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "4413ed4c9a09a153cf6f31083183f7d6:8:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/resource-type]') !== -1) url = url.replace('[/resource-type]', '')
		if (url.indexOf('[/section]') !== -1) url = url.replace('[/section]', '')
		if (url.indexOf('[/share-types]') !== -1) url = url.replace('[/share-types]', '')
		if (url.indexOf('[/time-period]') !== -1) url = url.replace('[/time-period]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getReviewsByKeyword': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//movies/{version}/reviews/search{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "887a8ea540f1b1c44a32584e84ee9383:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{query\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['query'])
			if (args['query']) delete args['query']
		}
		if (url.indexOf('[/query]') !== -1) {
			url = url.replace('[/query]', '/' + args['query'])
			if (args['query']) delete args['query']
		}
		var rgx = new RegExp('\{critics-pick\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['critics-pick'])
			if (args['critics-pick']) delete args['critics-pick']
		}
		if (url.indexOf('[/critics-pick]') !== -1) {
			url = url.replace('[/critics-pick]', '/' + args['critics-pick'])
			if (args['critics-pick']) delete args['critics-pick']
		}
		var rgx = new RegExp('\{thousand-best\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['thousand-best'])
			if (args['thousand-best']) delete args['thousand-best']
		}
		if (url.indexOf('[/thousand-best]') !== -1) {
			url = url.replace('[/thousand-best]', '/' + args['thousand-best'])
			if (args['thousand-best']) delete args['thousand-best']
		}
		var rgx = new RegExp('\{dvds\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['dvds'])
			if (args['dvds']) delete args['dvds']
		}
		if (url.indexOf('[/dvds]') !== -1) {
			url = url.replace('[/dvds]', '/' + args['dvds'])
			if (args['dvds']) delete args['dvds']
		}
		var rgx = new RegExp('\{reviewer\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['reviewer'])
			if (args['reviewer']) delete args['reviewer']
		}
		if (url.indexOf('[/reviewer]') !== -1) {
			url = url.replace('[/reviewer]', '/' + args['reviewer'])
			if (args['reviewer']) delete args['reviewer']
		}
		var rgx = new RegExp('\{publication-date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['publication-date'])
			if (args['publication-date']) delete args['publication-date']
		}
		if (url.indexOf('[/publication-date]') !== -1) {
			url = url.replace('[/publication-date]', '/' + args['publication-date'])
			if (args['publication-date']) delete args['publication-date']
		}
		var rgx = new RegExp('\{opening-date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['opening-date'])
			if (args['opening-date']) delete args['opening-date']
		}
		if (url.indexOf('[/opening-date]') !== -1) {
			url = url.replace('[/opening-date]', '/' + args['opening-date'])
			if (args['opening-date']) delete args['opening-date']
		}
		var rgx = new RegExp('\{opening-date\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['opening-date'])
			if (args['opening-date']) delete args['opening-date']
		}
		if (url.indexOf('[/opening-date]') !== -1) {
			url = url.replace('[/opening-date]', '/' + args['opening-date'])
			if (args['opening-date']) delete args['opening-date']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/query]') !== -1) url = url.replace('[/query]', '')
		if (url.indexOf('[/critics-pick]') !== -1) url = url.replace('[/critics-pick]', '')
		if (url.indexOf('[/thousand-best]') !== -1) url = url.replace('[/thousand-best]', '')
		if (url.indexOf('[/dvds]') !== -1) url = url.replace('[/dvds]', '')
		if (url.indexOf('[/reviewer]') !== -1) url = url.replace('[/reviewer]', '')
		if (url.indexOf('[/publication-date]') !== -1) url = url.replace('[/publication-date]', '')
		if (url.indexOf('[/opening-date]') !== -1) url = url.replace('[/opening-date]', '')
		if (url.indexOf('[/opening-date]') !== -1) url = url.replace('[/opening-date]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getReviewsCriticsPicks': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//movies/{version}/reviews/{resource-path}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['resource-type'] == null) throw new Error('resource-type is a required parameter')
		var rgx = new RegExp('\{resource-type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resource-type'])
			if (args['resource-type']) delete args['resource-type']
		}
		if (url.indexOf('[/resource-type]') !== -1) {
			url = url.replace('[/resource-type]', '/' + args['resource-type'])
			if (args['resource-type']) delete args['resource-type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "887a8ea540f1b1c44a32584e84ee9383:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/resource-type]') !== -1) url = url.replace('[/resource-type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getReviewsByReviewer': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//movies/{version}/reviews/reviewer/{reviewer-name}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['reviewer-name'] == null) throw new Error('reviewer-name is a required parameter')
		var rgx = new RegExp('\{reviewer-name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['reviewer-name'])
			if (args['reviewer-name']) delete args['reviewer-name']
		}
		if (url.indexOf('[/reviewer-name]') !== -1) {
			url = url.replace('[/reviewer-name]', '/' + args['reviewer-name'])
			if (args['reviewer-name']) delete args['reviewer-name']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "887a8ea540f1b1c44a32584e84ee9383:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{critics-pick\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['critics-pick'])
			if (args['critics-pick']) delete args['critics-pick']
		}
		if (url.indexOf('[/critics-pick]') !== -1) {
			url = url.replace('[/critics-pick]', '/' + args['critics-pick'])
			if (args['critics-pick']) delete args['critics-pick']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		var rgx = new RegExp('\{order\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/order]') !== -1) {
			url = url.replace('[/order]', '/' + args['order'])
			if (args['order']) delete args['order']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/reviewer-name]') !== -1) url = url.replace('[/reviewer-name]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/critics-pick]') !== -1) url = url.replace('[/critics-pick]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		if (url.indexOf('[/order]') !== -1) url = url.replace('[/order]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'getReviewers': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//movies/{version}/critics/{resource-type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['resource-type'] == null) throw new Error('resource-type is a required parameter')
		var rgx = new RegExp('\{resource-type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['resource-type'])
			if (args['resource-type']) delete args['resource-type']
		}
		if (url.indexOf('[/resource-type]') !== -1) {
			url = url.replace('[/resource-type]', '/' + args['resource-type'])
			if (args['resource-type']) delete args['resource-type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "887a8ea540f1b1c44a32584e84ee9383:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/resource-type]') !== -1) url = url.replace('[/resource-type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'membersByChamber': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/ny/legislative/{year}/{chamber}/members{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['year'] == null) throw new Error('year is a required parameter')
		var rgx = new RegExp('\{year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['year'])
			if (args['year']) delete args['year']
		}
		if (url.indexOf('[/year]') !== -1) {
			url = url.replace('[/year]', '/' + args['year'])
			if (args['year']) delete args['year']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "a700c2a580b06029a22fa4898b24c682:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/year]') !== -1) url = url.replace('[/year]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'memberDetails': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/ny/legislative/members/{member-name}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['member-name'] == null) throw new Error('member-name is a required parameter')
		var rgx = new RegExp('\{member-name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-name'])
			if (args['member-name']) delete args['member-name']
		}
		if (url.indexOf('[/member-name]') !== -1) {
			url = url.replace('[/member-name]', '/' + args['member-name'])
			if (args['member-name']) delete args['member-name']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "a700c2a580b06029a22fa4898b24c682:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/member-name]') !== -1) url = url.replace('[/member-name]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'currentMemberByDistrict': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/ny/legislative/{chamber}/{district}/current{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['district'] == null) throw new Error('district is a required parameter')
		var rgx = new RegExp('\{district\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['district'])
			if (args['district']) delete args['district']
		}
		if (url.indexOf('[/district]') !== -1) {
			url = url.replace('[/district]', '/' + args['district'])
			if (args['district']) delete args['district']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "a700c2a580b06029a22fa4898b24c682:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/district]') !== -1) url = url.replace('[/district]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'committeesByChamber': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/ny/legislative/{year}/{chamber}/committees{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['year'] == null) throw new Error('year is a required parameter')
		var rgx = new RegExp('\{year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['year'])
			if (args['year']) delete args['year']
		}
		if (url.indexOf('[/year]') !== -1) {
			url = url.replace('[/year]', '/' + args['year'])
			if (args['year']) delete args['year']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "a700c2a580b06029a22fa4898b24c682:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/year]') !== -1) url = url.replace('[/year]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'committeeMembership': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/ny/legislative/{year}/{chamber}/committees/{committee-name}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['year'] == null) throw new Error('year is a required parameter')
		var rgx = new RegExp('\{year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['year'])
			if (args['year']) delete args['year']
		}
		if (url.indexOf('[/year]') !== -1) {
			url = url.replace('[/year]', '/' + args['year'])
			if (args['year']) delete args['year']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['committee-name'] == null) throw new Error('committee-name is a required parameter')
		var rgx = new RegExp('\{committee-name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['committee-name'])
			if (args['committee-name']) delete args['committee-name']
		}
		if (url.indexOf('[/committee-name]') !== -1) {
			url = url.replace('[/committee-name]', '/' + args['committee-name'])
			if (args['committee-name']) delete args['committee-name']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "a700c2a580b06029a22fa4898b24c682:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/year]') !== -1) url = url.replace('[/year]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/committee-name]') !== -1) url = url.replace('[/committee-name]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'recentBillsNy': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/ny/legislative/{year}/{chamber}/bills/{type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['year'] == null) throw new Error('year is a required parameter')
		var rgx = new RegExp('\{year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['year'])
			if (args['year']) delete args['year']
		}
		if (url.indexOf('[/year]') !== -1) {
			url = url.replace('[/year]', '/' + args['year'])
			if (args['year']) delete args['year']
		}
		if (args['chamber'] == null) throw new Error('chamber is a required parameter')
		var rgx = new RegExp('\{chamber\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (url.indexOf('[/chamber]') !== -1) {
			url = url.replace('[/chamber]', '/' + args['chamber'])
			if (args['chamber']) delete args['chamber']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "a700c2a580b06029a22fa4898b24c682:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/year]') !== -1) url = url.replace('[/year]', '')
		if (url.indexOf('[/chamber]') !== -1) url = url.replace('[/chamber]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'billsByMemberNy': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/ny/legislative/members/{member-name}/bills/{type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['member-name'] == null) throw new Error('member-name is a required parameter')
		var rgx = new RegExp('\{member-name\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['member-name'])
			if (args['member-name']) delete args['member-name']
		}
		if (url.indexOf('[/member-name]') !== -1) {
			url = url.replace('[/member-name]', '/' + args['member-name'])
			if (args['member-name']) delete args['member-name']
		}
		if (args['type'] == null) throw new Error('type is a required parameter')
		var rgx = new RegExp('\{type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['type'])
			if (args['type']) delete args['type']
		}
		if (url.indexOf('[/type]') !== -1) {
			url = url.replace('[/type]', '/' + args['type'])
			if (args['type']) delete args['type']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "a700c2a580b06029a22fa4898b24c682:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/member-name]') !== -1) url = url.replace('[/member-name]', '')
		if (url.indexOf('[/type]') !== -1) url = url.replace('[/type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'billDetailsNy': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//politics/{version}/ny/legislative/{year}/bills/{bill-id}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['year'] == null) throw new Error('year is a required parameter')
		var rgx = new RegExp('\{year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['year'])
			if (args['year']) delete args['year']
		}
		if (url.indexOf('[/year]') !== -1) {
			url = url.replace('[/year]', '/' + args['year'])
			if (args['year']) delete args['year']
		}
		if (args['bill-id'] == null) throw new Error('bill-id is a required parameter')
		var rgx = new RegExp('\{bill-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bill-id'])
			if (args['bill-id']) delete args['bill-id']
		}
		if (url.indexOf('[/bill-id]') !== -1) {
			url = url.replace('[/bill-id]', '/' + args['bill-id'])
			if (args['bill-id']) delete args['bill-id']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "a700c2a580b06029a22fa4898b24c682:9:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/year]') !== -1) url = url.replace('[/year]', '')
		if (url.indexOf('[/bill-id]') !== -1) url = url.replace('[/bill-id]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'listingsPercentiles': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//real-estate/{version}/listings/percentile/{percentile-value}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['percentile-value'] == null) throw new Error('percentile-value is a required parameter')
		var rgx = new RegExp('\{percentile-value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['percentile-value'])
			if (args['percentile-value']) delete args['percentile-value']
		}
		if (url.indexOf('[/percentile-value]') !== -1) {
			url = url.replace('[/percentile-value]', '/' + args['percentile-value'])
			if (args['percentile-value']) delete args['percentile-value']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{bedrooms\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bedrooms'])
			if (args['bedrooms']) delete args['bedrooms']
		}
		if (url.indexOf('[/bedrooms]') !== -1) {
			url = url.replace('[/bedrooms]', '/' + args['bedrooms'])
			if (args['bedrooms']) delete args['bedrooms']
		}
		var rgx = new RegExp('\{building-type-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['building-type-id'])
			if (args['building-type-id']) delete args['building-type-id']
		}
		if (url.indexOf('[/building-type-id]') !== -1) {
			url = url.replace('[/building-type-id]', '/' + args['building-type-id'])
			if (args['building-type-id']) delete args['building-type-id']
		}
		if (args['date-range'] == null) throw new Error('date-range is a required parameter')
		var rgx = new RegExp('\{date-range\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date-range'])
			if (args['date-range']) delete args['date-range']
		}
		if (url.indexOf('[/date-range]') !== -1) {
			url = url.replace('[/date-range]', '/' + args['date-range'])
			if (args['date-range']) delete args['date-range']
		}
		if (args['geo-extent-level'] == null) throw new Error('geo-extent-level is a required parameter')
		var rgx = new RegExp('\{geo-extent-level\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-extent-level'])
			if (args['geo-extent-level']) delete args['geo-extent-level']
		}
		if (url.indexOf('[/geo-extent-level]') !== -1) {
			url = url.replace('[/geo-extent-level]', '/' + args['geo-extent-level'])
			if (args['geo-extent-level']) delete args['geo-extent-level']
		}
		if (args['geo-extent-value'] == null) throw new Error('geo-extent-value is a required parameter')
		var rgx = new RegExp('\{geo-extent-value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-extent-value'])
			if (args['geo-extent-value']) delete args['geo-extent-value']
		}
		if (url.indexOf('[/geo-extent-value]') !== -1) {
			url = url.replace('[/geo-extent-value]', '/' + args['geo-extent-value'])
			if (args['geo-extent-value']) delete args['geo-extent-value']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/percentile-value]') !== -1) url = url.replace('[/percentile-value]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/bedrooms]') !== -1) url = url.replace('[/bedrooms]', '')
		if (url.indexOf('[/building-type-id]') !== -1) url = url.replace('[/building-type-id]', '')
		if (url.indexOf('[/date-range]') !== -1) url = url.replace('[/date-range]', '')
		if (url.indexOf('[/geo-extent-level]') !== -1) url = url.replace('[/geo-extent-level]', '')
		if (url.indexOf('[/geo-extent-value]') !== -1) url = url.replace('[/geo-extent-value]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'listingsCounts': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//real-estate/{version}/listings/count{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{bedrooms\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['bedrooms'])
			if (args['bedrooms']) delete args['bedrooms']
		}
		if (url.indexOf('[/bedrooms]') !== -1) {
			url = url.replace('[/bedrooms]', '/' + args['bedrooms'])
			if (args['bedrooms']) delete args['bedrooms']
		}
		var rgx = new RegExp('\{building-built-year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['building-built-year'])
			if (args['building-built-year']) delete args['building-built-year']
		}
		if (url.indexOf('[/building-built-year]') !== -1) {
			url = url.replace('[/building-built-year]', '/' + args['building-built-year'])
			if (args['building-built-year']) delete args['building-built-year']
		}
		var rgx = new RegExp('\{building-type-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['building-type-id'])
			if (args['building-type-id']) delete args['building-type-id']
		}
		if (url.indexOf('[/building-type-id]') !== -1) {
			url = url.replace('[/building-type-id]', '/' + args['building-type-id'])
			if (args['building-type-id']) delete args['building-type-id']
		}
		if (args['date-range'] == null) throw new Error('date-range is a required parameter')
		var rgx = new RegExp('\{date-range\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date-range'])
			if (args['date-range']) delete args['date-range']
		}
		if (url.indexOf('[/date-range]') !== -1) {
			url = url.replace('[/date-range]', '/' + args['date-range'])
			if (args['date-range']) delete args['date-range']
		}
		if (args['geo-extent-level'] == null) throw new Error('geo-extent-level is a required parameter')
		var rgx = new RegExp('\{geo-extent-level\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-extent-level'])
			if (args['geo-extent-level']) delete args['geo-extent-level']
		}
		if (url.indexOf('[/geo-extent-level]') !== -1) {
			url = url.replace('[/geo-extent-level]', '/' + args['geo-extent-level'])
			if (args['geo-extent-level']) delete args['geo-extent-level']
		}
		if (args['geo-extent-value'] == null) throw new Error('geo-extent-value is a required parameter')
		var rgx = new RegExp('\{geo-extent-value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-extent-value'])
			if (args['geo-extent-value']) delete args['geo-extent-value']
		}
		if (url.indexOf('[/geo-extent-value]') !== -1) {
			url = url.replace('[/geo-extent-value]', '/' + args['geo-extent-value'])
			if (args['geo-extent-value']) delete args['geo-extent-value']
		}
		if (args['geo-summary-level'] == null) throw new Error('geo-summary-level is a required parameter')
		var rgx = new RegExp('\{geo-summary-level\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-summary-level'])
			if (args['geo-summary-level']) delete args['geo-summary-level']
		}
		if (url.indexOf('[/geo-summary-level]') !== -1) {
			url = url.replace('[/geo-summary-level]', '/' + args['geo-summary-level'])
			if (args['geo-summary-level']) delete args['geo-summary-level']
		}
		var rgx = new RegExp('\{loft\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['loft'])
			if (args['loft']) delete args['loft']
		}
		if (url.indexOf('[/loft]') !== -1) {
			url = url.replace('[/loft]', '/' + args['loft'])
			if (args['loft']) delete args['loft']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/bedrooms]') !== -1) url = url.replace('[/bedrooms]', '')
		if (url.indexOf('[/building-built-year]') !== -1) url = url.replace('[/building-built-year]', '')
		if (url.indexOf('[/building-type-id]') !== -1) url = url.replace('[/building-type-id]', '')
		if (url.indexOf('[/date-range]') !== -1) url = url.replace('[/date-range]', '')
		if (url.indexOf('[/geo-extent-level]') !== -1) url = url.replace('[/geo-extent-level]', '')
		if (url.indexOf('[/geo-extent-value]') !== -1) url = url.replace('[/geo-extent-value]', '')
		if (url.indexOf('[/geo-summary-level]') !== -1) url = url.replace('[/geo-summary-level]', '')
		if (url.indexOf('[/loft]') !== -1) url = url.replace('[/loft]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'salesPercentiles': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//real-estate/{version}/sales/percentile/{percentile-value}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['percentile-value'] == null) throw new Error('percentile-value is a required parameter')
		var rgx = new RegExp('\{percentile-value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['percentile-value'])
			if (args['percentile-value']) delete args['percentile-value']
		}
		if (url.indexOf('[/percentile-value]') !== -1) {
			url = url.replace('[/percentile-value]', '/' + args['percentile-value'])
			if (args['percentile-value']) delete args['percentile-value']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{building-type-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['building-type-id'])
			if (args['building-type-id']) delete args['building-type-id']
		}
		if (url.indexOf('[/building-type-id]') !== -1) {
			url = url.replace('[/building-type-id]', '/' + args['building-type-id'])
			if (args['building-type-id']) delete args['building-type-id']
		}
		if (args['date-range'] == null) throw new Error('date-range is a required parameter')
		var rgx = new RegExp('\{date-range\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date-range'])
			if (args['date-range']) delete args['date-range']
		}
		if (url.indexOf('[/date-range]') !== -1) {
			url = url.replace('[/date-range]', '/' + args['date-range'])
			if (args['date-range']) delete args['date-range']
		}
		if (args['geo-extent-level'] == null) throw new Error('geo-extent-level is a required parameter')
		var rgx = new RegExp('\{geo-extent-level\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-extent-level'])
			if (args['geo-extent-level']) delete args['geo-extent-level']
		}
		if (url.indexOf('[/geo-extent-level]') !== -1) {
			url = url.replace('[/geo-extent-level]', '/' + args['geo-extent-level'])
			if (args['geo-extent-level']) delete args['geo-extent-level']
		}
		if (args['geo-extent-value'] == null) throw new Error('geo-extent-value is a required parameter')
		var rgx = new RegExp('\{geo-extent-value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-extent-value'])
			if (args['geo-extent-value']) delete args['geo-extent-value']
		}
		if (url.indexOf('[/geo-extent-value]') !== -1) {
			url = url.replace('[/geo-extent-value]', '/' + args['geo-extent-value'])
			if (args['geo-extent-value']) delete args['geo-extent-value']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/percentile-value]') !== -1) url = url.replace('[/percentile-value]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/building-type-id]') !== -1) url = url.replace('[/building-type-id]', '')
		if (url.indexOf('[/date-range]') !== -1) url = url.replace('[/date-range]', '')
		if (url.indexOf('[/geo-extent-level]') !== -1) url = url.replace('[/geo-extent-level]', '')
		if (url.indexOf('[/geo-extent-value]') !== -1) url = url.replace('[/geo-extent-value]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'salesCounts': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//real-estate/{version}/sales/count{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v2"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{building-built-year\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['building-built-year'])
			if (args['building-built-year']) delete args['building-built-year']
		}
		if (url.indexOf('[/building-built-year]') !== -1) {
			url = url.replace('[/building-built-year]', '/' + args['building-built-year'])
			if (args['building-built-year']) delete args['building-built-year']
		}
		var rgx = new RegExp('\{building-type-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['building-type-id'])
			if (args['building-type-id']) delete args['building-type-id']
		}
		if (url.indexOf('[/building-type-id]') !== -1) {
			url = url.replace('[/building-type-id]', '/' + args['building-type-id'])
			if (args['building-type-id']) delete args['building-type-id']
		}
		if (args['date-range'] == null) throw new Error('date-range is a required parameter')
		var rgx = new RegExp('\{date-range\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['date-range'])
			if (args['date-range']) delete args['date-range']
		}
		if (url.indexOf('[/date-range]') !== -1) {
			url = url.replace('[/date-range]', '/' + args['date-range'])
			if (args['date-range']) delete args['date-range']
		}
		if (args['geo-extent-level'] == null) throw new Error('geo-extent-level is a required parameter')
		var rgx = new RegExp('\{geo-extent-level\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-extent-level'])
			if (args['geo-extent-level']) delete args['geo-extent-level']
		}
		if (url.indexOf('[/geo-extent-level]') !== -1) {
			url = url.replace('[/geo-extent-level]', '/' + args['geo-extent-level'])
			if (args['geo-extent-level']) delete args['geo-extent-level']
		}
		if (args['geo-extent-value'] == null) throw new Error('geo-extent-value is a required parameter')
		var rgx = new RegExp('\{geo-extent-value\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-extent-value'])
			if (args['geo-extent-value']) delete args['geo-extent-value']
		}
		if (url.indexOf('[/geo-extent-value]') !== -1) {
			url = url.replace('[/geo-extent-value]', '/' + args['geo-extent-value'])
			if (args['geo-extent-value']) delete args['geo-extent-value']
		}
		if (args['geo-summary-level'] == null) throw new Error('geo-summary-level is a required parameter')
		var rgx = new RegExp('\{geo-summary-level\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['geo-summary-level'])
			if (args['geo-summary-level']) delete args['geo-summary-level']
		}
		if (url.indexOf('[/geo-summary-level]') !== -1) {
			url = url.replace('[/geo-summary-level]', '/' + args['geo-summary-level'])
			if (args['geo-summary-level']) delete args['geo-summary-level']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/building-built-year]') !== -1) url = url.replace('[/building-built-year]', '')
		if (url.indexOf('[/building-type-id]') !== -1) url = url.replace('[/building-type-id]', '')
		if (url.indexOf('[/date-range]') !== -1) url = url.replace('[/date-range]', '')
		if (url.indexOf('[/geo-extent-level]') !== -1) url = url.replace('[/geo-extent-level]', '')
		if (url.indexOf('[/geo-extent-value]') !== -1) url = url.replace('[/geo-extent-value]', '')
		if (url.indexOf('[/geo-summary-level]') !== -1) url = url.replace('[/geo-summary-level]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'buildingTypes': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//real-estate/v2/building-types{.format}'
		args = args || {}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'neighborhoods': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//real-estate/v2/neighborhoods{.format}'
		args = args || {}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		var rgx = new RegExp('\{borough\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['borough'])
			if (args['borough']) delete args['borough']
		}
		if (url.indexOf('[/borough]') !== -1) {
			url = url.replace('[/borough]', '/' + args['borough'])
			if (args['borough']) delete args['borough']
		}
		if (args['api-key'] == null) args['api-key'] = "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/borough]') !== -1) url = url.replace('[/borough]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'recentNews': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//news/{version}/content/{source}/{section}/{time-period}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['source'] == null) throw new Error('source is a required parameter')
		var rgx = new RegExp('\{source\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['source'])
			if (args['source']) delete args['source']
		}
		if (url.indexOf('[/source]') !== -1) {
			url = url.replace('[/source]', '/' + args['source'])
			if (args['source']) delete args['source']
		}
		if (args['section'] == null) throw new Error('section is a required parameter')
		var rgx = new RegExp('\{section\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['section'])
			if (args['section']) delete args['section']
		}
		if (url.indexOf('[/section]') !== -1) {
			url = url.replace('[/section]', '/' + args['section'])
			if (args['section']) delete args['section']
		}
		var rgx = new RegExp('\{time-period\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['time-period'])
			if (args['time-period']) delete args['time-period']
		}
		if (url.indexOf('[/time-period]') !== -1) {
			url = url.replace('[/time-period]', '/' + args['time-period'])
			if (args['time-period']) delete args['time-period']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "718e9c614a4e157613c18ea201dca81c:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		var rgx = new RegExp('\{limit\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['limit'])
			if (args['limit']) delete args['limit']
		}
		if (url.indexOf('[/limit]') !== -1) {
			url = url.replace('[/limit]', '/' + args['limit'])
			if (args['limit']) delete args['limit']
		}
		var rgx = new RegExp('\{offset\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/offset]') !== -1) {
			url = url.replace('[/offset]', '/' + args['offset'])
			if (args['offset']) delete args['offset']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/source]') !== -1) url = url.replace('[/source]', '')
		if (url.indexOf('[/section]') !== -1) url = url.replace('[/section]', '')
		if (url.indexOf('[/time-period]') !== -1) url = url.replace('[/time-period]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/limit]') !== -1) url = url.replace('[/limit]', '')
		if (url.indexOf('[/offset]') !== -1) url = url.replace('[/offset]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'specificNewsItem': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//news/{version}/content{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "718e9c614a4e157613c18ea201dca81c:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (args['url'] == null) throw new Error('url is a required parameter')
		var rgx = new RegExp('\{url\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/url]') !== -1) {
			url = url.replace('[/url]', '/' + args['url'])
			if (args['url']) delete args['url']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/url]') !== -1) url = url.replace('[/url]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'sectionList': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//news/{version}/content/section-list{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v3"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "718e9c614a4e157613c18ea201dca81c:0:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'userData': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//timespeople/api/{version}/user/{user-id}/{data-type}{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v1"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['user-id'] == null) throw new Error('user-id is a required parameter')
		var rgx = new RegExp('\{user-id\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['user-id'])
			if (args['user-id']) delete args['user-id']
		}
		if (url.indexOf('[/user-id]') !== -1) {
			url = url.replace('[/user-id]', '/' + args['user-id'])
			if (args['user-id']) delete args['user-id']
		}
		if (args['data-type'] == null) throw new Error('data-type is a required parameter')
		var rgx = new RegExp('\{data-type\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['data-type'])
			if (args['data-type']) delete args['data-type']
		}
		if (url.indexOf('[/data-type]') !== -1) {
			url = url.replace('[/data-type]', '/' + args['data-type'])
			if (args['data-type']) delete args['data-type']
		}
		if (args['.format'] == null) args['.format'] = "json"
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "f681165acece8375403e96ae5e6650c6:13:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/user-id]') !== -1) url = url.replace('[/user-id]', '')
		if (url.indexOf('[/data-type]') !== -1) url = url.replace('[/data-type]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'userId': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//timespeople/api/{version}/user/{hash}/id{.format}'
		args = args || {}
		if (args['version'] == null) args['version'] = "v1"
		var rgx = new RegExp('\{version\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['version'])
			if (args['version']) delete args['version']
		}
		if (url.indexOf('[/version]') !== -1) {
			url = url.replace('[/version]', '/' + args['version'])
			if (args['version']) delete args['version']
		}
		if (args['hash'] == null) throw new Error('hash is a required parameter')
		var rgx = new RegExp('\{hash\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['hash'])
			if (args['hash']) delete args['hash']
		}
		if (url.indexOf('[/hash]') !== -1) {
			url = url.replace('[/hash]', '/' + args['hash'])
			if (args['hash']) delete args['hash']
		}
		if (args['.format'] == null) args['.format'] = "json"
		var rgx = new RegExp('\{.format\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (url.indexOf('[/.format]') !== -1) {
			url = url.replace('[/.format]', '/' + args['.format'])
			if (args['.format']) delete args['.format']
		}
		if (args['api-key'] == null) args['api-key'] = "f681165acece8375403e96ae5e6650c6:13:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/version]') !== -1) url = url.replace('[/version]', '')
		if (url.indexOf('[/hash]') !== -1) url = url.replace('[/hash]', '')
		if (url.indexOf('[/.format]') !== -1) url = url.replace('[/.format]', '')
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	},
	'suggest': function(args, opts) {
		var url = 'http://api.nytimes.com/svc//timestags/suggest'
		args = args || {}
		if (args['api-key'] == null) args['api-key'] = "c28274f6569da85ddee578fdea6886bb:10:64325990"
		var rgx = new RegExp('\{api-key\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (url.indexOf('[/api-key]') !== -1) {
			url = url.replace('[/api-key]', '/' + args['api-key'])
			if (args['api-key']) delete args['api-key']
		}
		if (args['query'] == null) throw new Error('query is a required parameter')
		var rgx = new RegExp('\{query\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['query'])
			if (args['query']) delete args['query']
		}
		if (url.indexOf('[/query]') !== -1) {
			url = url.replace('[/query]', '/' + args['query'])
			if (args['query']) delete args['query']
		}
		var rgx = new RegExp('\{filter\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['filter'])
			if (args['filter']) delete args['filter']
		}
		if (url.indexOf('[/filter]') !== -1) {
			url = url.replace('[/filter]', '/' + args['filter'])
			if (args['filter']) delete args['filter']
		}
		var rgx = new RegExp('\{max\}', 'g')
		if (url.match(rgx)) {
			url = url.replace(rgx, args['max'])
			if (args['max']) delete args['max']
		}
		if (url.indexOf('[/max]') !== -1) {
			url = url.replace('[/max]', '/' + args['max'])
			if (args['max']) delete args['max']
		}
		if (url.indexOf('[/api-key]') !== -1) url = url.replace('[/api-key]', '')
		if (url.indexOf('[/query]') !== -1) url = url.replace('[/query]', '')
		if (url.indexOf('[/filter]') !== -1) url = url.replace('[/filter]', '')
		if (url.indexOf('[/max]') !== -1) url = url.replace('[/max]', '')
		return http({provider:'nytimes',url:url,method:'GET',params:args, auth:'none'}, opts)
	}
})